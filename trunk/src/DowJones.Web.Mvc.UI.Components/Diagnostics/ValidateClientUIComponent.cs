//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17379
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DowJones.Web.Mvc.UI.Components.Diagnostics
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Web;
    using System.Web.Security;
    using System.Web.UI;
    using DowJones.Web.Mvc.Extensions;
    
    // Last Generated Timestamp: 05/09/2012 01:43 PM
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorViewComponentClassGenerator", "1.0.0.22175")]
    public class ValidateClientUIComponent : DowJones.Web.Mvc.UI.ViewComponentBase<ValidateClientUI>
    {
#line hidden

        public ValidateClientUIComponent()
        {
        }
        public override string ClientPluginName
        {
            get
            {
                return null;
            }
        }
        public override void ExecuteTemplate()
        {

WriteLiteral(@"
<style>
    .testing { background-color: orange; font-style: italic; }
    .passed { background-color: greenyellow; }
    .timeout, .failed, .error {
        background-color: red; 
        font-weight: bold;
        font-size: 120%;
        color: #fff;
    }
    
    #validation-steps li,
    #failures li {
        padding: 5px;
    }
    
    #discovered-components {
        height: 200px;
        width: 400px;
        overflow-y: scroll;
    }
</style>

<div class=""loading"">Validating that everything was installed and configured properly...</div>
<ol id=""failures"" class=""failed""></ol>
<ol id=""validation-steps""></ol>

<h3>Discovered Components</h3>
<ol id=""discovered-components"">
");


      
        var scriptRegistry = DJ.ScriptRegistry();
    
        foreach (var component in Model.ViewComponentTypes.OrderBy(x => x.Name))
        {
            scriptRegistry.With(component);

WriteLiteral("            <li>");


           Write(component.Name);

WriteLiteral("</li>\r\n");


        }
    

WriteLiteral("</ol>\r\n\r\n<script type=\"text/javascript\">\r\n    if (DJ && DJ.config) { DJ.config.de" +
"bug = true; }\r\n\r\n    var TIMEOUT = 5000;\r\n    var container, tests, failures, lo" +
"adedComponentNames = [];\r\n\r\n    function failure(message) {\r\n        var el = do" +
"cument.createElement(\"li\");\r\n        el.innerText = message;\r\n        failures.a" +
"ppendChild(el);\r\n    }\r\n\r\n    function success(message) {\r\n        var el = docu" +
"ment.createElement(\"li\");\r\n        el.innerText = message;\r\n        el.className" +
" = \'passed\';\r\n        container.appendChild(el);\r\n    }\r\n\r\n    function validate" +
"(description, test) {\r\n        var _result;\r\n\r\n        var statusEl = document.c" +
"reateElement(\"li\");\r\n        statusEl.innerText = description;\r\n        containe" +
"r.appendChild(statusEl);\r\n\r\n        var setStatus = function (val, text) {\r\n    " +
"        statusEl.className = val;\r\n\r\n            if (text)\r\n                cons" +
"ole.log(description, \": \", text);\r\n        };\r\n\r\n        var evalResult = functi" +
"on (result) {\r\n            _result = result;\r\n\r\n            if (_result === \'tim" +
"eout\') {\r\n                setStatus(\"timeout\");\r\n            } else if (_result)" +
" {\r\n                setStatus(\"passed\");\r\n            } else {\r\n                " +
"setStatus(\"failed\");\r\n            }\r\n        };\r\n\r\n        var timeout = functio" +
"n () {\r\n            if (_result) return;\r\n            evalResult(\'timeout\');\r\n  " +
"      };\r\n\r\n        setStatus(\"testing\");\r\n\r\n        try {\r\n            setTimeo" +
"ut(timeout, TIMEOUT);\r\n            test(evalResult);\r\n        } catch (e) {\r\n   " +
"         setStatus(\"error\", e);\r\n        }\r\n    }\r\n\r\n    try {\r\n        containe" +
"r = document.getElementById(\"validation-steps\");\r\n        failures = document.ge" +
"tElementById(\"failures\");\r\n\r\n        var log = DJ.$dj._log;\r\n        DJ.$dj._log" +
" = function(message) {\r\n            if (( /Registered DJ.*/ ).test(message)) {\r\n" +
"                var component = ( /DJ.[^ ]*/ ).exec(message);\r\n                l" +
"oadedComponentNames.push(component);\r\n                success(\'Loaded \' + compon" +
"ent);\r\n            }\r\n\r\n            if (arguments[arguments.length - 1] == \"erro" +
"r\")\r\n                failure(arguments[0]);\r\n\r\n            log.apply(arguments);" +
"\r\n        };\r\n\r\n        (function (require) {\r\n            var onError = require" +
".onError;\r\n            require.onError = function (err) {\r\n                var m" +
"odules = err.requireModules.split(\' \');\r\n                for (var i = 0; i < mod" +
"ules.length; i++) {\r\n                    if(modules[i] && modules[i].length > 0)" +
"\r\n                        failure(\'Failed to load \' + modules[i]);\r\n            " +
"    }\r\n                onError(err);\r\n            };\r\n\r\n            var onScript" +
"Load = require.onScriptLoad;\r\n            require.onScriptLoad = function () {\r\n" +
"                try {\r\n                    onScriptLoad.apply(arguments);\r\n     " +
"           } catch (err) {\r\n                    DJ.$dj.error(err);\r\n            " +
"    }\r\n            };\r\n        })(DJ.$dj.require);\r\n\r\n    } catch (e) {\r\n       " +
" failure(e);\r\n    }\r\n\r\n    window.onload = function () {\r\n        container = do" +
"cument.getElementById(\"validation-steps\");\r\n        failures = document.getEleme" +
"ntById(\"failures\");\r\n\r\n        validate(\"DJ exists\", function (callback) {\r\n    " +
"        callback(DJ !== undefined);\r\n        });\r\n\r\n\r\n        validate(\"DJ.confi" +
"g exists\", function (callback) {\r\n            callback(DJ.config !== undefined);" +
"\r\n        });\r\n\r\n        validate(\"DJ.jQuery exists\", function (callback) {\r\n   " +
"         callback(DJ.jQuery !== undefined);\r\n        });\r\n\r\n        validate(\"DJ" +
".UI.Component exists\", function (callback) {\r\n            callback(DJ.UI.Compone" +
"nt !== undefined);\r\n        });\r\n\r\n        validate(\"DJ.$dj.require exists\", fun" +
"ction (callback) {\r\n            callback(DJ.$dj.require !== undefined);\r\n       " +
" });\r\n\r\n        validate(\"require(\'JSON\')\", function (callback) {\r\n            D" +
"J.$dj.require([\'JSON\'], function (JSON) {\r\n                callback(JSON !== und" +
"efined);\r\n            });\r\n        });\r\n\r\n        validate(\"Can create PortalHea" +
"dlineList\", function (callback) {\r\n            DJ.$dj.require([\'$\', \'$dj\', \'DowJ" +
"ones.Web.Mvc.UI.Components.PortalHeadlineList.PortalHeadlineList\'], function ($," +
" $dj) {\r\n                callback($(\'<div>\').dj_PortalHeadlineList({}));\r\n      " +
"      });\r\n        });\r\n    };\r\n</script>");


        }
    }
}
