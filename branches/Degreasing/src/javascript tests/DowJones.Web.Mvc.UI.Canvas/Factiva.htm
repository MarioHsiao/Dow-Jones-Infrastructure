
<!DOCTYPE html>
<html lang="en" class=" js flexbox canvas canvastext no-webgl no-touch geolocation postmessage websqldatabase no-indexeddb hashchange history draganddrop websockets rgba hsla multiplebgs backgroundsize borderimage borderradius boxshadow textshadow opacity cssanimations csscolumns cssgradients cssreflections csstransforms no-csstransforms3d csstransitions fontface video audio localstorage sessionstorage webworkers applicationcache svg inlinesvg smil svgclippaths">
<head>
    <meta charset="utf-8">
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title></title>
    <link href="../../DowJones.Web.Mvc/Resources/css/base.css" rel="stylesheet" />
    <link href="../../DowJones.Web.Mvc/Resources/css/reset.css" rel="stylesheet" />
	<link rel="stylesheet" type="text/css" href="../../DowJones.Web.Mvc.UI.Canvas/Modules/Newspages/Syndication/SyndicationModule.css" />
	<link rel="stylesheet" type="text/css" href="../../DowJones.Web.Showcase/areas/factiva/content/grid.990.9-col.css" />
	<link rel="stylesheet" type="text/css" href="../../DowJones.Web.Showcase/areas/factiva/content/jquery.contextMenu.css" />
	<link rel="stylesheet" type="text/css" href="../../DowJones.Web.Showcase/areas/factiva/content/global/dashboard.css" />
	<link rel="stylesheet" type="text/css" href="../../DowJones.Web.Showcase/areas/factiva/content/global/factiva.icons.css" />
	<link rel="stylesheet" type="text/css" href="../../DowJones.Web.Showcase/areas/factiva/content/global/global.css" />
	<link rel="stylesheet" type="text/css" href="../../DowJones.Web.Showcase/areas/factiva/content/global/style.css" />
	<link rel="stylesheet" type="text/css" href="../../DowJones.Web.Showcase/areas/factiva/content/header/header.css" />
	<link rel="stylesheet" type="text/css" href="../../DowJones.Web.Showcase/areas/factiva/content/header/dashboard.nav-tabs.css" />
	<link rel="stylesheet" type="text/css" href="../../DowJones.Web.Showcase/areas/factiva/content/modules/module.css" />
	<link rel="stylesheet" type="text/css" href="../../DowJones.Web.Showcase/areas/factiva/content/modules/module.style.css" />
	<link rel="stylesheet" type="text/css" href="../../DowJones.Web.Showcase/areas/factiva/content/modules/modules.css" />
	<link rel="stylesheet" type="text/css" href="../../DowJones.Web.Showcase/areas/factiva/content/modules/module.buttons.css" />
	<link rel="stylesheet" type="text/css" href="../../DowJones.Web.Showcase/areas/factiva/content/modules/module.col.article.css" />
	<link rel="stylesheet" type="text/css" href="../../DowJones.Web.Showcase/areas/factiva/content/modules/module.col.bar-chart.css" />
	<link rel="stylesheet" type="text/css" href="../../DowJones.Web.Showcase/areas/factiva/content/modules/module.col.headline.css" />
	<link rel="stylesheet" type="text/css" href="../../DowJones.Web.Showcase/areas/factiva/content/modules/module.content.articles.css" />
    <link rel="icon" type="image/png" href="images/favicon.png">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<body>
    <div class="message">
        <div class="message-wrap container_9">
            <p class="message-text">
                Welcome to the new Factiva Newspages. Return to <a href="./Index_files/Index.htm">Factiva.com
                    <span class="fi fi_r-arrow"></span></a>
            </p>
        </div>
    </div>
    <div id="header" class="header">
        <div id="header-top">
            <div id="header-top-wrap" class="container_9 clearfix">
                <ul id="welcome-nav" class="clearfix">
                    <li class="first"><a href="./Index_files/Index.htm" title="Welcome, John Smith!">Welcome,
                        John Smith!</a></li>
                </ul>
                <!-- end: #welcome-nav -->
                <ul id="user-nav" class="clearfix">
                    <li class="first"><a href="./Index_files/Index.htm" title="Welcome, John Smith!">Preferences</a></li>
                    <li><a href="./Index_files/Index.htm" title="Support">Support</a></li>
                    <li class="last"><a href="./Index_files/Index.htm" title="Logout">Logout</a></li>
                </ul>
                <!-- end: #user-nav -->
            </div>
        </div>
        <!-- end: #header-top -->
        <div id="header-bottom">
            <div id="header-bottom-wrap" class="container_9">
                <div id="header-content" class="clearfix" style="">
                    <div id="product-logo" style="display: block;">
                        <h1 class="png_bg">
                            Factiva</h1>
                    </div>
                    <!-- end: #client-logo -->
                    <div id="header-search" style="display: block;">
                        <form action="./Index_files/Index.htm" method="post">
                        <div class="form-field input">
                            <input type="text" name="s" id="" title="Search companies, industries, topics, people, documents or news"
                                class="search-field default">
                        </div>
                        <div class="submit-btn-wrap">
                            <input type="submit" id="" class="s-btn" value="Search">
                        </div>
                        </form>
                    </div>
                    <!-- end: #factiva-search -->
                </div>
                <div id="header-tabs">
                    
        <ul id="dashboard-nav" class="clearfix">
                <li class="page active-page" 
data-page-id=Telecommunications                >
                    <span class="tab png_bg"><span class="tab-wrap png_bg clearfix">
                    <span class="tab-text">Telecommunications</span> 
                    <span class="action"></span>
                    </span></span>
                </li>
                <li class="page " 
data-page-id=Marketing                >
                    <span class="tab png_bg"><span class="tab-wrap png_bg clearfix">
                    <span class="tab-text">Marketing</span> 
                    <span class="action"></span>
                    </span></span>
                </li>
            <li>
                <span id="add-page" class="tab png_bg"><span class="tab-wrap png_bg clearfix">
                <span class="action"><span class="config fi fi_circle-plus" data-command='add-page'></span></span>
                </span></span>
            </li>
        </ul>
                </div>
                <!-- end: #header-tabs -->
                <div id="dashboard-options-panel" style="display: none;">
                    <div class="action-bar">
                        <span class="fi fi_close"></span>
                    </div>
                    <div id="dashboard-options-container">
                        [[ This is where the dashboard options go! ]]
                    </div>
                </div>
                <div id="header-toggle" title="Expand">
                    <span class="fi fi_expand" style="display: none;"></span>
                    <span class="fi fi_collapse"></span>
                </div>
            </div>
        </div>
        <!-- end: #header-bottom -->
    </div>
    <!-- end: #header -->
    <div id="main-container" class="container_9 clearfix">
        <div id="FactivaCanvas">
	<div class="module dj_module dj_module-movable grid_9 dj_RssAtomModule" id="SyndicationModule">
		<div class="dj_module-head dj_entry_handle">
			<div class="dj_module-remove">
			</div>
			<h3 class="title">
				Top News
			</h3>
			<div class="actions-container">
				<div title="Refresh this module&#39;s data" class="dj_module-refresh">
				</div>
				<div title="Edit this module&#39;s options" class="dj_module-edit">
				</div>
			</div>
		</div>
		<div class="dj_module-body">
			<div class="dj_module-loadingArea" style="display: none;">
			</div>
			<div class="dj_module-editArea" style="display: none;">
				<div class="editArea-header">
					<a title="Module Actions" href="javascript:void(0)" class="edit-actions-dropdown-trigger">Actions</a>
					<ul id="SyndicationModule-editMenu" class="dj_module-editMenu menu" style="display: none;">
						<li><a title="Move Module Up" href="#move-up" class="move-module-up">Move Up</a>
						</li><li><a title="Move Module Down" href="#move-down" class="move-module-down">Move Down</a>
						</li><li><a title="Create a new module based on the conents of this module" href="#clone" class="clone-module">Clone / Copy</a>
						</li><li><a title="Remove Module from page" href="#remove" class="remove-module">Remove Module</a>
						</li>
					</ul>
				</div>
				<div class="editArea-body">
					
				<div class='module-settings'>
				</div>
				<div class='news-feeds-settings'>
					<h4>News Feeds</h4>
				
					<span class='no-data-message' style='display: none'>No news feeds have been added</span>
					<ul class='subscribed-news-feeds'>
					</ul>
					<div class='add-news-feed-container' style='display: none'>
						<input class='news-feed-url' name='news-feed-url' type='text' title='RSS/ATOM Url' />
						<a href='javascript: void(0)' class='add-news-feed'>Add feed</a>
					</div>
					<a href='javascript: void(0)' class='show-news-feed-entry'>Add news feed</a>
				</div>
				</div>
				<div class="editArea-actions">
					<button class="dj_module-save">Save &amp; Close</button>
					<button class="close">Close</button>
				</div>
			</div>
			<div class="dj_module-contentArea">
				<div class="newsfeed-container">
					<h3 class="newsfeed-title">
						you&#39;ve been HAACKED
					</h3>
					<div class="dj_headlineListContainer" id="PortalHeadlineListControl-0">
						
					</div>
				</div>
				<div class="newsfeed-container">
					<h3 class="newsfeed-title">
						ScottGu&#39;s Blog
					</h3>
					<div class="dj_headlineListContainer" id="PortalHeadlineListControl-1">
						
					</div>
				</div>
				<div class="newsfeed-container">
					<h3 class="newsfeed-title">
						Scott Hanselman
					</h3>
					<div class="dj_headlineListContainer" id="PortalHeadlineListControl-2">
						
					</div>
				</div>
				<span class='clearfix' />
			</div>
			<div class="dj_module-messageArea" style="display: none;">
			</div>
			<div class="dj_module-infoArea" style="display: none;">
			</div>
			<div class="dj_module-optionsArea" style="display: none;">
			</div>
		</div>
	</div>
	<div class="module dj_module dj_module-movable grid_9" id="DummyCanvasModule">
		<div class="dj_module-head dj_entry_handle">
			<div class="dj_module-remove">
			</div>
			<h3 class="title">
				News Radar Industry
			</h3>
			<div class="actions-container">
				<div title="Refresh this module&#39;s data" class="dj_module-refresh">
				</div>
				<div title="Edit this module&#39;s options" class="dj_module-edit">
				</div>
			</div>
		</div>
		<div class="dj_module-body">
			<div class="dj_module-loadingArea" style="display: none;">
			</div>
			<div class="dj_module-editArea" style="display: none;">
				<div class="editArea-header">
					<a title="Module Actions" href="javascript:void(0)" class="edit-actions-dropdown-trigger">Actions</a>
					<ul id="DummyCanvasModule-editMenu" class="dj_module-editMenu menu" style="display: none;">
						<li><a title="Move Module Up" href="#move-up" class="move-module-up">Move Up</a>
						</li><li><a title="Move Module Down" href="#move-down" class="move-module-down">Move Down</a>
						</li><li><a title="Create a new module based on the conents of this module" href="#clone" class="clone-module">Clone / Copy</a>
						</li><li><a title="Remove Module from page" href="#remove" class="remove-module">Remove Module</a>
						</li>
					</ul>
				</div>
				<div class="editArea-body">
					[[ TODO: EDIT AREA CONTENT ]]
				</div>
				<div class="editArea-actions">
					<button class="dj_module-save">Save &amp; Close</button>
					<button class="close">Close</button>
				</div>
			</div>
			<div class="dj_module-contentArea">
				[[ TODO: MODULE CONTENT ]]
				<span class='clearfix' />
			</div>
			<div class="dj_module-messageArea" style="display: none;">
			</div>
			<div class="dj_module-infoArea" style="display: none;">
			</div>
			<div class="dj_module-optionsArea" style="display: none;">
			</div>
		</div>
	</div>
	<div class="module dj_module dj_module-movable grid_9" id="newsstand-module">
		<div class="dj_module-head dj_entry_handle">
			<div class="dj_module-remove">
			</div>
			<h3 class="title">
				Newsstand
			</h3>
			<div class="actions-container">
				<div title="Refresh this module&#39;s data" class="dj_module-refresh">
				</div>
				<div title="Edit this module&#39;s options" class="dj_module-edit">
				</div>
			</div>
		</div>
		<div class="dj_module-body">
			<div class="dj_module-loadingArea" style="display: none;">
			</div>
			<div class="dj_module-editArea" style="display: none;">
				<div class="editArea-header">
					<a title="Module Actions" href="javascript:void(0)" class="edit-actions-dropdown-trigger">Actions</a>
					<ul id="newsstand-module-editMenu" class="dj_module-editMenu menu" style="display: none;">
						<li><a title="Move Module Up" href="#move-up" class="move-module-up">Move Up</a>
						</li><li><a title="Move Module Down" href="#move-down" class="move-module-down">Move Down</a>
						</li><li><a title="Create a new module based on the conents of this module" href="#clone" class="clone-module">Clone / Copy</a>
						</li><li><a title="Remove Module from page" href="#remove" class="remove-module">Remove Module</a>
						</li>
					</ul>
				</div>
				<div class="editArea-body">
					[[ TODO: EDIT AREA CONTENT ]]
				</div>
				<div class="editArea-actions">
					<button class="dj_module-save">Save &amp; Close</button>
					<button class="close">Close</button>
				</div>
			</div>
			<div class="dj_module-contentArea">
				[[ TODO: MODULE CONTENT ]]
				<span class='clearfix' />
			</div>
			<div class="dj_module-messageArea" style="display: none;">
			</div>
			<div class="dj_module-infoArea" style="display: none;">
			</div>
			<div class="dj_module-optionsArea" style="display: none;">
			</div>
		</div>
	</div>
	<div class="module dj_module dj_module-movable grid_9" id="custom-topics-module">
		<div class="dj_module-head dj_entry_handle">
			<div class="dj_module-remove">
			</div>
			<h3 class="title">
				Custom Topics
			</h3>
			<div class="actions-container">
				<div title="Refresh this module&#39;s data" class="dj_module-refresh">
				</div>
				<div title="Edit this module&#39;s options" class="dj_module-edit">
				</div>
			</div>
		</div>
		<div class="dj_module-body">
			<div class="dj_module-loadingArea" style="display: none;">
			</div>
			<div class="dj_module-editArea" style="display: none;">
				<div class="editArea-header">
					<a title="Module Actions" href="javascript:void(0)" class="edit-actions-dropdown-trigger">Actions</a>
					<ul id="custom-topics-module-editMenu" class="dj_module-editMenu menu" style="display: none;">
						<li><a title="Move Module Up" href="#move-up" class="move-module-up">Move Up</a>
						</li><li><a title="Move Module Down" href="#move-down" class="move-module-down">Move Down</a>
						</li><li><a title="Create a new module based on the conents of this module" href="#clone" class="clone-module">Clone / Copy</a>
						</li><li><a title="Remove Module from page" href="#remove" class="remove-module">Remove Module</a>
						</li>
					</ul>
				</div>
				<div class="editArea-body">
					[[ TODO: EDIT AREA CONTENT ]]
				</div>
				<div class="editArea-actions">
					<button class="dj_module-save">Save &amp; Close</button>
					<button class="close">Close</button>
				</div>
			</div>
			<div class="dj_module-contentArea">
				[[ TODO: MODULE CONTENT ]]
				<span class='clearfix' />
			</div>
			<div class="dj_module-messageArea" style="display: none;">
			</div>
			<div class="dj_module-infoArea" style="display: none;">
			</div>
			<div class="dj_module-optionsArea" style="display: none;">
			</div>
		</div>
	</div>
	<div class="module dj_module dj_module-movable grid_9" id="industry-module">
		<div class="dj_module-head dj_entry_handle">
			<div class="dj_module-remove">
			</div>
			<h3 class="title">
				Industry
			</h3>
			<div class="actions-container">
				<div title="Refresh this module&#39;s data" class="dj_module-refresh">
				</div>
				<div title="Edit this module&#39;s options" class="dj_module-edit">
				</div>
			</div>
		</div>
		<div class="dj_module-body">
			<div class="dj_module-loadingArea" style="display: none;">
			</div>
			<div class="dj_module-editArea" style="display: none;">
				<div class="editArea-header">
					<a title="Module Actions" href="javascript:void(0)" class="edit-actions-dropdown-trigger">Actions</a>
					<ul id="industry-module-editMenu" class="dj_module-editMenu menu" style="display: none;">
						<li><a title="Move Module Up" href="#move-up" class="move-module-up">Move Up</a>
						</li><li><a title="Move Module Down" href="#move-down" class="move-module-down">Move Down</a>
						</li><li><a title="Create a new module based on the conents of this module" href="#clone" class="clone-module">Clone / Copy</a>
						</li><li><a title="Remove Module from page" href="#remove" class="remove-module">Remove Module</a>
						</li>
					</ul>
				</div>
				<div class="editArea-body">
					[[ TODO: EDIT AREA CONTENT ]]
				</div>
				<div class="editArea-actions">
					<button class="dj_module-save">Save &amp; Close</button>
					<button class="close">Close</button>
				</div>
			</div>
			<div class="dj_module-contentArea">
				[[ TODO: MODULE CONTENT ]]
				<span class='clearfix' />
			</div>
			<div class="dj_module-messageArea" style="display: none;">
			</div>
			<div class="dj_module-infoArea" style="display: none;">
			</div>
			<div class="dj_module-optionsArea" style="display: none;">
			</div>
		</div>
	</div>
	<div class="module dj_module dj_module-movable grid_9" id="regional-module">
		<div class="dj_module-head dj_entry_handle">
			<div class="dj_module-remove">
			</div>
			<h3 class="title">
				Regional
			</h3>
			<div class="actions-container">
				<div title="Refresh this module&#39;s data" class="dj_module-refresh">
				</div>
				<div title="Edit this module&#39;s options" class="dj_module-edit">
				</div>
			</div>
		</div>
		<div class="dj_module-body">
			<div class="dj_module-loadingArea" style="display: none;">
			</div>
			<div class="dj_module-editArea" style="display: none;">
				<div class="editArea-header">
					<a title="Module Actions" href="javascript:void(0)" class="edit-actions-dropdown-trigger">Actions</a>
					<ul id="regional-module-editMenu" class="dj_module-editMenu menu" style="display: none;">
						<li><a title="Move Module Up" href="#move-up" class="move-module-up">Move Up</a>
						</li><li><a title="Move Module Down" href="#move-down" class="move-module-down">Move Down</a>
						</li><li><a title="Create a new module based on the conents of this module" href="#clone" class="clone-module">Clone / Copy</a>
						</li><li><a title="Remove Module from page" href="#remove" class="remove-module">Remove Module</a>
						</li>
					</ul>
				</div>
				<div class="editArea-body">
					[[ TODO: EDIT AREA CONTENT ]]
				</div>
				<div class="editArea-actions">
					<button class="dj_module-save">Save &amp; Close</button>
					<button class="close">Close</button>
				</div>
			</div>
			<div class="dj_module-contentArea">
				[[ TODO: MODULE CONTENT ]]
				<span class='clearfix' />
			</div>
			<div class="dj_module-messageArea" style="display: none;">
			</div>
			<div class="dj_module-infoArea" style="display: none;">
			</div>
			<div class="dj_module-optionsArea" style="display: none;">
			</div>
		</div>
	</div>
</div>
    </div>
    <div id="footer">
        <div id="footer-top">
            <div id="footer-top-wrap" class="container_9 clearfix">
                <div id="product-logo">
                    <h1 class="png_bg">
                        Factiva</h1>
                </div>
                <!-- end: #client-logo -->
                <div id="footer-search">
                    <form action="./Index_files/Index.htm" method="post">
                    <div class="form-field input">
                        <input type="text" name="s" id="" title="Search companies, industries, topics, people, documents or news"
                            class="search-field default">
                    </div>
                    <div class="submit-btn-wrap">
                        <input type="submit" id="" class="s-btn" value="Search">
                    </div>
                    </form>
                </div>
                <!-- end: #factiva-search -->
            </div>
        </div>
        <div id="footer-links">
            <div id="footer-links-wrap" class="container_9 clearfix">
            <div id="industry-links">
    <h5 class="section-title">
        Industry</h5>
    <div id="industry-links-wrap" class="clearfix">
        <ul class="footer-links-list">
            <li><a href="./Index_files/Index.htm">Accounting/Consulting</a></li>
            <li><a href="./Index_files/Index.htm">Advertising/PR/Marketing</a></li>
            <li><a href="./Index_files/Index.htm">Aerospace/Defense</a></li>
            <li><a href="./Index_files/Index.htm">Agriculture/Forestry</a></li>
            <li><a href="./Index_files/Index.htm">Automobiles</a></li>
            <li><a href="./Index_files/Index.htm">Banking/Credit</a></li>
            <li><a href="./Index_files/Index.htm">Biotechnology</a></li>
            <li><a href="./Index_files/Index.htm">Business/Consumer</a></li>
        </ul>
        <ul class="footer-links-list">
            <li><a href="./Index_files/Index.htm">Chemicals</a></li>
            <li><a href="./Index_files/Index.htm">Clothing/Textiles</a></li>
            <li><a href="./Index_files/Index.htm">Computer/Electronis</a></li>
            <li><a href="./Index_files/Index.htm">Construction/Real Estate</a></li>
            <li><a href="./Index_files/Index.htm">Consumer Products</a></li>
            <li><a href="./Index_files/Index.htm">Energy</a></li>
            <li><a href="./Index_files/Index.htm">Environment</a></li>
            <li><a href="./Index_files/Index.htm">Food/Beverage/Tobacco</a></li>
        </ul>
        <ul class="footer-links-list">
            <li><a href="./Index_files/Index.htm">Health Care</a></li>
            <li><a href="./Index_files/Index.htm">Hotels/Restaurants</a></li>
            <li><a href="./Index_files/Index.htm">Insurance</a></li>
            <li><a href="./Index_files/Index.htm">Internet/Online Services</a></li>
            <li><a href="./Index_files/Index.htm">Investing/Online Sevices</a></li>
            <li><a href="./Index_files/Index.htm">Leisure/Arts</a></li>
            <li><a href="./Index_files/Index.htm">machinery/Industrial</a></li>
            <li><a href="./Index_files/Index.htm">Media</a></li>
        </ul>
        <ul class="footer-links-list">
            <li><a href="./Index_files/Index.htm">Metals/Mining</a></li>
            <li><a href="./Index_files/Index.htm">Paper/Packaging</a></li>
            <li><a href="./Index_files/Index.htm">Pharmaceuticals</a></li>
            <li><a href="./Index_files/Index.htm">Retail/Wholesale</a></li>
            <li><a href="./Index_files/Index.htm">Telecomunications</a></li>
            <li><a href="./Index_files/Index.htm">Transportation/Shipping</a></li>
        </ul>
    </div>
</div>
<div id="ma-legal-links">
    <div id="my-account-links">
        <h5 class="section-title">
            My Account</h5>
        <ul class="footer-links-list">
            <li><a href="./Index_files/Index.htm">Profile</a></li>
            <li><a href="./Index_files/Index.htm">Preferences</a></li>
        </ul>
    </div>
    <div id="legal-links">
        <h5 class="section-title">
            My Account</h5>
        <ul class="footer-links-list">
            <li><a href="./Index_files/Index.htm">Feedback</a></li>
            <li><a href="./Index_files/Index.htm">Privacy Policy</a></li>
            <li><a href="./Index_files/Index.htm">Contact Us</a></li>
        </ul>
    </div>
</div>
            </div>
        </div>
        <div id="copyright">
            <div id="copyright-wrap" class="container_9 clearfix">
                <p class="dj-logo">
                    Dow Jones and Companies</p>
                <p class="copyright-text">
                    © Dow Jones Factiva | All Rights Reserved</p>
            </div>
        </div>
        <!-- end: .copyright -->
    </div>
    <!-- end: #footer -->
        <div id="fancybox-tmp">
    </div>
    <div id="fancybox-loading">
        <div>
        </div>
    </div>
    <div id="fancybox-overlay">
    </div>
    <div id="fancybox-wrap">
        <div id="fancybox-outer">
            <div class="fancybox-bg" id="fancybox-bg-n">
            </div>
            <div class="fancybox-bg" id="fancybox-bg-ne">
            </div>
            <div class="fancybox-bg" id="fancybox-bg-e">
            </div>
            <div class="fancybox-bg" id="fancybox-bg-se">
            </div>
            <div class="fancybox-bg" id="fancybox-bg-s">
            </div>
            <div class="fancybox-bg" id="fancybox-bg-sw">
            </div>
            <div class="fancybox-bg" id="fancybox-bg-w">
            </div>
            <div class="fancybox-bg" id="fancybox-bg-nw">
            </div>
            <div id="fancybox-content">
            </div>
            <a id="fancybox-close"></a>
            <div id="fancybox-title">
            </div>
            <a href="javascript:;" id="fancybox-left"><span class="fancy-ico" id="fancybox-left-ico">
            </span></a><a href="javascript:;" id="fancybox-right"><span class="fancy-ico" id="fancybox-right-ico">
            </span></a>
        </div>
    </div>
<script type="text/javascript" src="../../DowJones.Web.Mvc/Resources/js/jquery.js"></script>
<script type="text/javascript" src="../../DowJones.Web.Mvc/Resources/js/jquery.json-1.3.js"></script>
<script type="text/javascript" src="../../DowJones.Web.Mvc/Resources/js/jquery-ui.core.js"></script>
<script type="text/javascript" src="../../DowJones.Web.Mvc/Resources/js/common.js"></script>
<script type="text/javascript" src="../../DowJones.Web.Mvc/Resources/js/ServiceProxy.js"></script>
<script type="text/javascript" src="../../DowJones.Web.Mvc/Resources/js/jquery-ui.effects.js"></script>
<script type="text/javascript" src="../../DowJones.Web.Mvc/Resources/js/underscore.js"></script>
<script type="text/javascript" src="../../DowJones.Web.Mvc/Resources/js/jquery-ui.interactions.js"></script>
<script type="text/javascript" src="../../DowJones.Web.Mvc/Resources/js/modernizr-1.5.js"></script>
<script type="text/javascript" src="../../DowJones.Web.Mvc.UI.Canvas/AbstractCanvasModule.js"></script>
<script type="text/javascript" src="../../DowJones.Web.Mvc.UI.Canvas/WebServices/Canvas/CanvasRenderingManagerDataService.js"></script>
<script type="text/javascript" src="../../DowJones.Web.Mvc.UI.Canvas/AbstractCanvas.js"></script>
<script type="text/javascript" src="../../DowJones.Web.Mvc.UI.Canvas/Modules/Newspages/Syndication/SyndicationModule.js"></script>
<script type="text/javascript" src="../../DowJones.Web.Showcase/Areas/Factiva/Modules/DummyCanvasModule.js"></script>
<script type="text/javascript" src="../../DowJones.Web.Mvc.UI.Components/PortalHeadlineList/PortalHeadlineList.js"></script>
<script type="text/javascript" src="../../DowJones.Web.Showcase/areas/factiva/Modules/FactivaCanvas.js"></script>
<script type="text/javascript" src="../../DowJones.Web.Showcase/areas/factiva/scripts/jquery.watermark.js"></script>
<script type="text/javascript" src="../../DowJones.Web.Showcase/areas/factiva/scripts/header.js"></script>
<script type="text/javascript" src="../../DowJones.Web.Showcase/areas/factiva/scripts/modules.js"></script>
<script type="text/javascript" src="../../DowJones.Web.Showcase/areas/factiva/scripts/jquery.ba-resize.min.js"></script>
<script type="text/javascript" src="../../DowJones.Web.Showcase/areas/factiva/scripts/jquery.cookie.js"></script>
<script type="text/javascript" src="../../DowJones.Web.Showcase/areas/factiva/scripts/jquery.easing-1.3.min.js"></script>
<script type="text/javascript" src="../../DowJones.Web.Showcase/areas/factiva/scripts/jquery.fancybox-1.3.4.min.js"></script>
<script type="text/javascript" src="../../DowJones.Web.Showcase/areas/factiva/scripts/jquery.contextMenu.js"></script>

<script type="text/javascript">
//<![CDATA[
    jQuery(document).ready(function () {
//        jQuery('#PortalHeadlineListControl-2').dj_PortalHeadlineList({
//            "options": {
//                "maxNumHeadlinesToShow": 0,
//                "displaySnippets": 0,
//                "displayNoResultsToken": false,
//                "truncationType": 0,
//                "debug": false
//            },
//            "tokens": {},
//            "data": {
//                "hitCount": {
//                    "exp": 0,
//                    "isPositive": true,
//                    "rawText": {
//                        "value": "10"
//                    },
//                    "text": {
//                        "value": "10"
//                    },
//                    "value": 10
//                },
//                "resultSet": {
//                    "count": {
//                        "exp": 0,
//                        "isPositive": true,
//                        "rawText": {
//                            "value": "10"
//                        },
//                        "text": {
//                            "value": "10"
//                        },
//                        "value": 10
//                    },
//                    "first": {
//                        "exp": 0,
//                        "isPositive": true,
//                        "rawText": {
//                            "value": "1"
//                        },
//                        "text": {
//                            "value": "1"
//                        },
//                        "value": 1
//                    },
//                    "duplicateCount": {
//                        "exp": 0,
//                        "isPositive": false,
//                        "value": 0
//                    },
//                    "headlines": [
//                {
//                    "title": "<span class=\"\">Mixing Razor Views and WebForms Master Pages with ASP.NET MVC 3</span><span class=\"dj_space\"> </span>",
//                    "headlineUrl": "http://feedproxy.google.com/~r/ScottHanselman/~3/pQzkJsXHnHY/MixingRazorViewsAndWebFormsMasterPagesWithASPNETMVC3.aspx",
//                    "publicationDateTimeDescriptor": "Tuesday, 25 January 2011 8:47 PM GMT",
//                    "author": [
//                        {
//                            "guid": "guid_text",
//                            "class": "dj_text",
//                            "value": "author_text"
//                        },
//                        {
//                            "guid": "guid_highlight",
//                            "class": "dj_highlight",
//                            "value": "author_highlight"
//                        },
//                        {
//                            "guid": "guid_Company",
//                            "class": "dj_company",
//                            "value": "author_Company"
//                        },
//                        {
//                            "guid": "guid_Person",
//                            "class": "dj_person",
//                            "value": "author_Person"
//                        }
//                    ],
//                    "reference": {
//                        "type": "rss",
//                        "guid": "http://www.hanselman.com/blog/PermaLink.aspx?guid=0c8c39a2-4e21-45c4-ae36-c655783ed0de",
//                        "externalUri": "http://feedproxy.google.com/~r/ScottHanselman/~3/pQzkJsXHnHY/MixingRazorViewsAndWebFormsMasterPagesWithASPNETMVC3.aspx"
//                    },
//                    "snippet": {
//                        "value": "<div><p>I've spent the last few weeks travelling around presenting WebMatrix, Razor and ASP.NET MVC 3 to folks. Many people have existing WebForms apps or MVC apps with WebForms Views. The question has come up a number of times, &quot;Can I mix Razor Views and WebForms Views in a single ASP.NET MVC application?&quot; </p>  <p>The answer is, &quot;No, Yes, and Maybe, But It's Not Supported.&quot;</p>  <p>Most commonly the scenario is that someone has an existing WebForms (ASPX) Master Page that works nicely, and they now want to include a few Razor pages in their application but don't want to maintain two effectively identical Master Pages (one for ASPX, one for Razor). They want to <strong>share </strong>their WebForms Master with both WebForms and Razor Views.</p>  <h3>First, the No. </h3>  <p>You can't directly have a Razor Layout with WebForms Views, or a WebForms Master with Razor Views. While the concepts are similar, layouts are not masters and the concepts aren't exactly interchangeable.</p>  <h3>Second, the Yes.</h3>  <p>However, Html.RenderPartial or Html.RenderAction is an opportunity to move between view engines. As Eilon Lipton says, the idea of a partial view or controller action is a first-class concept in ASP.NET MVC, but master pages are implementation details of the specific view engines. </p>  <p>You can put shared content in Partials then call them from wherever. For example, from Eilon's suggestion, let's say you had these three WebForms partial views:</p>  <ul>   <li>Header.ascx: Contains top navigation, menu, etc.</li>    <li>Footer.ascx: Contains copyright notice, privacy link, etc.</li>    <li>SearchBox.ascx: Contains search box implementation.</li> </ul>  <p>Then you have a basic WebForms master that references the above three user controls.</p>  <ul>   <li>WebFormLayout.master: Lays out with the controls from above.</li>    <li>Page1.aspx: Uses WebFormLayout.master.</li>    <li>Page2.aspx: Uses WebFormLayout.master.</li>    <li>Page3.aspx: Uses WebFormLayout.master.</li> </ul>  <p>Then let's say you have a Razor Layout (Razor Layouts are like WebForms Masters) that reference to <b><i><u>the same</u></i></b> three WebForm user controls.</p>  <ul>   <li>_RazorLayout.cshtml: Lays out with the controls from above.</li>    <li>Page4.cshtml: Uses _RazorLayout.cshtml.</li>    <li>Page5.cshtml: Uses _RazorLayout.cshtml.</li>    <li>Page6.cshtml: Uses _RazorLayout.cshtml.</li> </ul>  <p>This is the cleanest, easiest, and most supported way for doing things. You will have to have some minimal duplication between your Razor Layout and your WebForms Master, but most of the shared content is in the .ascx partials. You can mix this up as you like, but you get the idea.</p>  <h3>Maybe, But It's not Supported</h3>  <p><a href=\"http://www.eworldui.net/blog/post/2011/01/07/Using-Razor-Pages-with-WebForms-Master-Pages.aspx\">Matt Hawley from CodePlex</a> took a look at this problem and <a href=\"http://www.eworldui.net/blog/post/2011/01/07/Using-Razor-Pages-with-WebForms-Master-Pages.aspx\">blogged about his own solution</a> for CodePlex. While it might feel like this should be a simple task, it's tricky because WebForms builds up a control tree and then renders it, while Razor is an all new system that's closer to a single pass template. Matt wants to directly share a WebForms Master page. </p>  <p>His solution is </p>  <ol>   <li>There's a web forms master page</li>    <li>There's a web forms view page called &quot;RazorView&quot; in the \\Shared folder</li>    <li>The aspx view renders a partial in the content placeholder that is the actual razor view</li>    <li>There are some new added RazorView extension methods for the controller that return a ViewResult.</li> </ol>  <p>Seems complex, but it's actually pretty straightforward. For example to get output like this browser screenshot using Matt's technique...</p>  <p><a href=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/d5de5af08bc2_57DF/image_2.png\"><img style=\"border-bottom: 0px; border-left: 0px; margin: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/d5de5af08bc2_57DF/image_thumb.png\" width=\"545\" height=\"272\" /></a> </p>  <p>...we start with our WebForms View Site.Master:</p>  <pre class=\"brush: xml; toolbar: false; auto-links: false;\">&lt;%@ Master Language=&quot;C#&quot; Inherits=&quot;System.Web.Mvc.ViewMasterPage&quot; %&gt;<br />&lt;!DOCTYPE html&gt;<br />&lt;html&gt;<br />&lt;head runat=&quot;server&quot;&gt;<br />    &lt;title&gt;&lt;asp:ContentPlaceHolder ID=&quot;TitleContent&quot; runat=&quot;server&quot; /&gt;&lt;/title&gt;<br />&lt;/head&gt;<br />&lt;body&gt;<br />    &lt;div&gt;<br />    &lt;h1&gt;I'm a WebForms Site.Master Page View. Seriously.&lt;/h1&gt;<br />        &lt;asp:ContentPlaceHolder ID=&quot;MainContent&quot; runat=&quot;server&quot; /&gt;<br />    &lt;/div&gt;<br />&lt;/body&gt;<br />&lt;/html&gt;</pre>\r\n\r\n<p>This is a normal master page. Here's our also normal Index.cshtml (Razor).</p>\r\n\r\n<pre class=\"brush: xml; toolbar: false; auto-links: false;\">&lt;h3&gt;This is the index page. I'm Razor. We've clearly broken some kind of law to be at this point, right?&lt;/h3&gt;</pre>\r\n\r\n<p>This page is basically nothing, and doesn't have a layout or anything specified.&#160; </p>\r\n\r\n<p>However, Matt has some extension methods he's added to the Controller class. Instead of returning View() from his controller action, he returns RazorView() like this.</p>\r\n\r\n<pre class=\"brush: csharp; toolbar: false; auto-links: false;\">public class HomeController : Controller<br />{<br />    // GET: /Home/<br />    public ActionResult Index()<br />    {<br />        return this.RazorView();<br />    }<br />}</pre>\r\n\r\n<p>Just a reminder as it begs repeating, RazorView is an extension method. Here's the whole ControllerExtensions class from Matt.</p>\r\n\r\n<pre class=\"brush: csharp; toolbar: false; auto-links: false;\">public static class ControllerExtensions<br />{<br />    public static ViewResult RazorView(this Controller controller)<br />    {<br />        return RazorView(controller, null, null);<br />    }<br /><br />    public static ViewResult RazorView(this Controller controller, object model)<br />    {<br />        return RazorView(controller, null, model);<br />    }<br /><br />    public static ViewResult RazorView(this Controller controller, string viewName)<br />    {<br />        return RazorView(controller, viewName, null);<br />    }<br /><br />    public static ViewResult RazorView(this Controller controller, string viewName, object model)<br />    {<br />        if (model != null)<br />            controller.ViewData.Model = model;<br /><br />        controller.ViewBag._ViewName = GetViewName(controller, viewName);<br /><br />        return new ViewResult<br />        {<br />            ViewName = &quot;RazorView&quot;,<br />            ViewData = controller.ViewData,<br />            TempData = controller.TempData<br />        };<br />    }<br /><br />    static string GetViewName(Controller controller, string viewName)<br />    {<br />        return !string.IsNullOrEmpty(viewName)<br />            ? viewName<br />            : controller.RouteData.GetRequiredString(&quot;action&quot;);<br />    }<br />}</pre>\r\n\r\n<p>Matt's solution is clever in its simplicity. When he calls RazorView() he's returning a ViewResult that's a WebForm View, even though we want a Razor one. This satisfies the whole WebForms master pages system. However, the WebForms view called &quot;RazorView&quot; exists for only one reason. It calls RenderPartial, as that's the right way too switch between view engines.</p>\r\n\r\n<pre class=\"brush: xml; toolbar: false; auto-links: false;\">&lt;%@ Page Title=&quot;&quot; Language=&quot;C#&quot; MasterPageFile=&quot;~/Views/Shared/Site.Master&quot; Inherits=&quot;System.Web.Mvc.ViewPage&lt;dynamic&gt;&quot; %&gt;<br /><br />&lt;asp:Content ID=&quot;Content2&quot; ContentPlaceHolderID=&quot;MainContent&quot; runat=&quot;server&quot;&gt;<br />&lt;h2&gt;I'm a secret WebForms View that lies to everyone and renders Razor stuff. Ssssh! Delete this line!&lt;/h2&gt;<br />    &lt;% Html.RenderPartial((string) ViewBag._ViewName); %&gt;<br />&lt;/asp:Content&gt;</pre>\r\n\r\n<p>Of course, when you use this, remove the &lt;h2&gt;, that's just for illustration. This view is only a shim that enables the switch. </p>\r\n\r\n<p>So there you go. Two good options for mixing WebForms and Razor in your ASP.NET MVC application. The first has a little duplication, but is clean. The second is a little trickier and you're on your own, but you can directly share Master Pages between WebForms and Razor Views. You can get <a href=\"http://www.eworldui.net/blog/post/2011/01/07/Using-Razor-Pages-with-WebForms-Master-Pages.aspx\">the code for the second over at Matt's blog</a>.</p>\r\n\r\n<p>Thanks Eilon and Matt!</p><br/><hr/>© 2011 Scott Hanselman. All rights reserved. <br/></div>\r\n<p><a href=\"http://feedads.g.doubleclick.net/~a/k5MCweOVG0bZzHdOVJg-vQNUxi4/0/da\"><img src=\"http://feedads.g.doubleclick.net/~a/k5MCweOVG0bZzHdOVJg-vQNUxi4/0/di\" border=\"0\" ismap=\"true\"></img></a><br/>\r\n<a href=\"http://feedads.g.doubleclick.net/~a/k5MCweOVG0bZzHdOVJg-vQNUxi4/1/da\"><img src=\"http://feedads.g.doubleclick.net/~a/k5MCweOVG0bZzHdOVJg-vQNUxi4/1/di\" border=\"0\" ismap=\"true\"></img></a></p><div class=\"feedflare\">\r\n<a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=pQzkJsXHnHY:DJ-zHxHJQao:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=pQzkJsXHnHY:DJ-zHxHJQao:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=pQzkJsXHnHY:DJ-zHxHJQao:MjquXQBfoPI\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=MjquXQBfoPI\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=pQzkJsXHnHY:DJ-zHxHJQao:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=pQzkJsXHnHY:DJ-zHxHJQao:V_sGLiPBpWU\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=pQzkJsXHnHY:DJ-zHxHJQao:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=pQzkJsXHnHY:DJ-zHxHJQao:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=pQzkJsXHnHY:DJ-zHxHJQao:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=pQzkJsXHnHY:DJ-zHxHJQao:5M_9TJJRyfI\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=5M_9TJJRyfI\" border=\"0\"></img></a>\r\n</div><img src=\"http://feeds.feedburner.com/~r/ScottHanselman/~4/pQzkJsXHnHY\" height=\"1\" width=\"1\"/>"
//                    }
//                },
//                {
//                    "title": "<span class=\"\">Hanseminutes Podcast 249 - On WebMatrix with Rob Conery</span><span class=\"dj_space\"> </span>",
//                    "headlineUrl": "http://feedproxy.google.com/~r/ScottHanselman/~3/Gh9xrLN5kb0/HanseminutesPodcast249OnWebMatrixWithRobConery.aspx",
//                    "publicationDateTimeDescriptor": "Saturday, 22 January 2011 12:39 PM GMT",
//                    "author": [
//                        {
//                            "guid": "guid_text",
//                            "class": "dj_text",
//                            "value": "author_text"
//                        },
//                        {
//                            "guid": "guid_highlight",
//                            "class": "dj_highlight",
//                            "value": "author_highlight"
//                        },
//                        {
//                            "guid": "guid_Company",
//                            "class": "dj_company",
//                            "value": "author_Company"
//                        },
//                        {
//                            "guid": "guid_Person",
//                            "class": "dj_person",
//                            "value": "author_Person"
//                        }
//                    ],
//                    "reference": {
//                        "type": "rss",
//                        "guid": "http://www.hanselman.com/blog/PermaLink.aspx?guid=74f2a765-6b9c-4955-93c9-a9413392557c",
//                        "externalUri": "http://feedproxy.google.com/~r/ScottHanselman/~3/Gh9xrLN5kb0/HanseminutesPodcast249OnWebMatrixWithRobConery.aspx"
//                    },
//                    "snippet": {
//                        "value": "<div><p><a href=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/HanseminutesPodcast249OnWebMatrixwithRob_40C1/image_2.png\"><img style=\"border-bottom: 0px; border-left: 0px; margin: 0px 0px 0px 10px; display: inline; border-top: 0px; border-right: 0px\" title=\"image\" border=\"0\" alt=\"image\" align=\"right\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/HanseminutesPodcast249OnWebMatrixwithRob_40C1/image_thumb.png\" width=\"424\" height=\"184\" /></a> <a href=\"http://www.microsoft.com/web/webmatrix/\"><strong>Microsoft WebMatrix</strong></a> was released on the 13th of January. Some folks have said its very existence is confusing. Do we need another IDE? What's Microsoft trying to pull here? Scott talks to ex-Microsoftie Rob Conery on his unfiltered take.</p>  <h3><strong>Download: </strong><a href=\"http://s3.amazonaws.com/hanselminutes/hanselminutes_0249.mp3\">MP3 Full Show</a></h3>  <h3><strong>Links from the Show</strong></h3>  <ul>   <li><a href=\"http://www.microsoft.com/web/webmatrix/\">Learn about and Install WebMatrix</a></li>    <li><a href=\"http://blog.wekeroad.com/microsoft/someone-hit-their-head\">Rob's review of WebMatrix</a></li> </ul>  <p><strong>NOTE: If you want to download our complete archives as a feed - that's all 249 shows, </strong><a href=\"http://feeds.feedburner.com/HanselminutesCompleteMP3\"><strong>subscribe to the Complete MP3 Feed here</strong></a><strong>.</strong></p>  <p><strong>Also, please do take a moment and </strong><a href=\"http://phobos.apple.com/WebObjects/MZStore.woa/wa/viewPodcast?id=117488860\"><strong>review the show on iTunes</strong></a><strong>.</strong></p>  <h3><strong>Subscribe: </strong><a href=\"http://feeds.feedburner.com/Hanselminutes\"><img border=\"0\" alt=\"Subscribe to Hanselminutes\" src=\"http://www.hanselman.com/blog/content/binary/feed_2Dicon_2D16x16.png\" /></a> or <a href=\"http://phobos.apple.com/WebObjects/MZStore.woa/wa/viewPodcast?id=117488860\"><img border=\"0\" alt=\"Subscribe to my Podcast in iTunes\" src=\"http://www.hanselman.com/blog/themes/zenGarden2/itunes_subscribe.gif\" /></a> or <a href=\"zune://subscribe/?Hanselminutes=http://feeds.feedburner.com/hanselminutes\"><strong>Zune</strong></a></h3>  <p>Do also <a href=\"http://www.hanselminutes.com/archives.aspx\">remember the complete archives</a> are always up and they have <strong><em>PDF Transcripts</em></strong>, a little known feature that show up a few weeks after each show. </p>  <p><a href=\"http://www.telerik.com/products/aspnet/overview.aspx?gad=CPLKy9kDEghsdEbLXRZ0NBiF1bL_AyCCkdsU\"><strong>Telerik</strong></a> is our sponsor for this show. </p>  <p><a href=\"http://www.telerik.com/products/aspnet/overview.aspx?gad=CPLKy9kDEghsdEbLXRZ0NBiF1bL_AyCCkdsU\"><strong><img border=\"0\" align=\"left\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/HanselminutesPodcast51StaticCodeAnalysis_140AB/telerikLogo%5B1%5D%5B8%5D.gif\" width=\"216\" height=\"74\" /></strong></a><strong>Building quality software is never easy. It requires skills and imagination. We cannot promise to improve your skills, but when it comes to User Interface and developer tools, we can provide the building blocks to take your application a step closer to your imagination. Explore the leading UI suites for </strong><a href=\"http://asp.net/\"><strong>ASP.NET</strong></a><strong> AJAX,</strong><a href=\"http://www.telerik.com/products/aspnet-mvc.aspx\"><strong>MVC</strong></a><strong>,</strong><a href=\"http://www.telerik.com/products/silverlight.aspx\"><strong>Silverlight</strong></a><strong>,</strong><a href=\"http://www.telerik.com/products/winforms.aspx\"><strong>Windows Forms</strong></a><strong> and </strong><a href=\"http://www.telerik.com/products/wpf.aspx\"><strong>WPF</strong></a><strong>. Enjoy developer tools like </strong><a href=\"http://www.telerik.com/products/reporting.aspx\"><strong>.NET Reporting</strong></a><strong>, </strong><a href=\"http://www.telerik.com/products/orm.aspx\"><strong>ORM</strong></a><strong>, </strong><a href=\"http://www.telerik.com/automated-testing-tools.aspx\"><strong>Automated Testing Tools</strong></a><strong>, </strong><a href=\"http://www.telerik.com/team-productivity-tools/teampulse.aspx\"><strong>Agile Project Management Tools</strong></a><strong>, and </strong><a href=\"http://www.sitefinity.com/\"><strong>Content Management Solution</strong></a><strong>. And now you can increase your productivity with </strong><a href=\"http://www.telerik.com/products/justcode.aspx\"><strong>JustCode</strong></a><strong>, Telerik’s new productivity tool for code analysis and refactoring. Visit </strong><a href=\"http://www.telerik.com/\"><strong>www.telerik.com</strong></a><strong>.</strong></p>  <p><strong><em></em></strong>As I've said before this show comes to you with the audio expertise and stewardship of <a href=\"http://weblogs.asp.net/cfranklin/archive/2006/01/11/435036.aspx\">Carl Franklin</a>. The name comes from <a href=\"http://www.paraesthesia.com/blog/comments.php?id=776_0_1_0_C\">Travis Illig</a>, but the goal of the show is simple. Avoid wasting the listener's time. (and make the commute less boring) </p>  <p>Enjoy. Who knows what'll happen in the next show?</p><br/><hr/>© 2011 Scott Hanselman. All rights reserved. <br/></div>\r\n<p><a href=\"http://feedads.g.doubleclick.net/~a/C4EjcRhq7okdO0X5hpS9oanNkZ0/0/da\"><img src=\"http://feedads.g.doubleclick.net/~a/C4EjcRhq7okdO0X5hpS9oanNkZ0/0/di\" border=\"0\" ismap=\"true\"></img></a><br/>\r\n<a href=\"http://feedads.g.doubleclick.net/~a/C4EjcRhq7okdO0X5hpS9oanNkZ0/1/da\"><img src=\"http://feedads.g.doubleclick.net/~a/C4EjcRhq7okdO0X5hpS9oanNkZ0/1/di\" border=\"0\" ismap=\"true\"></img></a></p><div class=\"feedflare\">\r\n<a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=Gh9xrLN5kb0:ZhuVkV2-b8o:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=Gh9xrLN5kb0:ZhuVkV2-b8o:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=Gh9xrLN5kb0:ZhuVkV2-b8o:MjquXQBfoPI\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=MjquXQBfoPI\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=Gh9xrLN5kb0:ZhuVkV2-b8o:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=Gh9xrLN5kb0:ZhuVkV2-b8o:V_sGLiPBpWU\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=Gh9xrLN5kb0:ZhuVkV2-b8o:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=Gh9xrLN5kb0:ZhuVkV2-b8o:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=Gh9xrLN5kb0:ZhuVkV2-b8o:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=Gh9xrLN5kb0:ZhuVkV2-b8o:5M_9TJJRyfI\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=5M_9TJJRyfI\" border=\"0\"></img></a>\r\n</div><img src=\"http://feeds.feedburner.com/~r/ScottHanselman/~4/Gh9xrLN5kb0\" height=\"1\" width=\"1\"/>"
//                    }
//                },
//                {
//                    "title": "<span class=\"\">Hanselminutes Podcast 248 - Executable Specifications with Gojko Adzic, Jonas Bandi and Aslak Hellesoy</span><span class=\"dj_space\"> </span>",
//                    "headlineUrl": "http://feedproxy.google.com/~r/ScottHanselman/~3/_AZVixSec30/HanselminutesPodcast248ExecutableSpecificationsWithGojkoAdzicJonasBandiAndAslakHellesoy.aspx",
//                    "publicationDateTimeDescriptor": "Saturday, 22 January 2011 12:22 PM GMT",
//                    "author": [
//                        {
//                            "guid": "guid_text",
//                            "class": "dj_text",
//                            "value": "author_text"
//                        },
//                        {
//                            "guid": "guid_highlight",
//                            "class": "dj_highlight",
//                            "value": "author_highlight"
//                        },
//                        {
//                            "guid": "guid_Company",
//                            "class": "dj_company",
//                            "value": "author_Company"
//                        },
//                        {
//                            "guid": "guid_Person",
//                            "class": "dj_person",
//                            "value": "author_Person"
//                        }
//                    ],
//                    "reference": {
//                        "type": "rss",
//                        "guid": "http://www.hanselman.com/blog/PermaLink.aspx?guid=fcc7f61e-c779-4565-9653-55dee238909d",
//                        "externalUri": "http://feedproxy.google.com/~r/ScottHanselman/~3/_AZVixSec30/HanselminutesPodcast248ExecutableSpecificationsWithGojkoAdzicJonasBandiAndAslakHellesoy.aspx"
//                    },
//                    "snippet": {
//                        "value": "<div><p><a href=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/HanselminutesPodcast248ExecutableSpecifi_3A25/image_2.png\"><img style=\"border-bottom: 0px; border-left: 0px; margin: 0px 0px 0px 10px; display: inline; border-top: 0px; border-right: 0px\" title=\"Aslak Hellesoy, Jonas Bandi and Gojko Adzic\" border=\"0\" alt=\"Aslak Hellesoy, Jonas Bandi and Gojko Adzic\" align=\"right\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/HanselminutesPodcast248ExecutableSpecifi_3A25/image_thumb.png\" width=\"411\" height=\"159\" /></a> This week Scott learns about Executable Specifications with <a href=\"http://twitter.com/gojkoadzic\"><strong>Gojko Adzic</strong></a>, <a href=\"http://about.me/jbandi\"><strong>Jonas Bandi</strong></a> and <a href=\"http://twitter.com/aslak_hellesoy\"><strong>Aslak Hellesoy</strong></a>. What's all this talk about BDD, Cucumber, Gerkin and SpecFlow? Where's the best place to start and how to Acceptance Tests fit into my existing projects?</p>  <h3><strong>Download: </strong><a href=\"http://s3.amazonaws.com/hanselminutes/hanselminutes_0248.mp3\">MP3 Full Show</a></h3>  <h3><strong>Links from the Show</strong></h3>  <ul>   <li><a href=\"http://www.acceptancetesting.info/\">Book: Bridging the Communication Gap</a></li>    <li><a href=\"http://gojko.net/\">Gojko Adzic's Blog</a></li>    <li><a href=\"http://tekpub.com/view/dotnet-oss/3\">Free TekPub Screencast</a></li>    <li><a href=\"http://specificationbyexample.com/\">Book: Specification by Example</a></li>    <li><a href=\"http://www.specflow.org/\">SpecFlow</a></li>    <li><a href=\"http://cuke4ninja.com/\">Step By Step Guide to Cucumber</a></li> </ul>  <p><strong>NOTE: If you want to download our complete archives as a feed - that's all 247 shows, </strong><a href=\"http://feeds.feedburner.com/HanselminutesCompleteMP3\"><strong>subscribe to the Complete MP3 Feed here</strong></a><strong>.</strong></p>  <p><strong>Also, please do take a moment and </strong><a href=\"http://phobos.apple.com/WebObjects/MZStore.woa/wa/viewPodcast?id=117488860\"><strong>review the show on iTunes</strong></a><strong>.</strong></p>  <h3><strong>Subscribe: </strong><a href=\"http://feeds.feedburner.com/Hanselminutes\"><img border=\"0\" alt=\"Subscribe to Hanselminutes\" src=\"http://www.hanselman.com/blog/content/binary/feed_2Dicon_2D16x16.png\" /></a> or <a href=\"http://phobos.apple.com/WebObjects/MZStore.woa/wa/viewPodcast?id=117488860\"><img border=\"0\" alt=\"Subscribe to my Podcast in iTunes\" src=\"http://www.hanselman.com/blog/themes/zenGarden2/itunes_subscribe.gif\" /></a> or <a href=\"zune://subscribe/?Hanselminutes=http://feeds.feedburner.com/hanselminutes\"><strong>Zune</strong></a></h3>  <p>Do also <a href=\"http://www.hanselminutes.com/archives.aspx\">remember the complete archives</a> are always up and they have <strong><em>PDF Transcripts</em></strong>, a little known feature that show up a few weeks after each show. </p>  <p><a href=\"http://www.telerik.com/products/aspnet/overview.aspx?gad=CPLKy9kDEghsdEbLXRZ0NBiF1bL_AyCCkdsU\"><strong>Telerik</strong></a> is our sponsor for this show. </p>  <p><a href=\"http://www.telerik.com/products/aspnet/overview.aspx?gad=CPLKy9kDEghsdEbLXRZ0NBiF1bL_AyCCkdsU\"><strong><img border=\"0\" align=\"left\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/HanselminutesPodcast51StaticCodeAnalysis_140AB/telerikLogo%5B1%5D%5B8%5D.gif\" width=\"216\" height=\"74\" /></strong></a><strong>Building quality software is never easy. It requires skills and imagination. We cannot promise to improve your skills, but when it comes to User Interface and developer tools, we can provide the building blocks to take your application a step closer to your imagination. Explore the leading UI suites for </strong><a href=\"http://asp.net/\"><strong>ASP.NET</strong></a><strong> AJAX,</strong><a href=\"http://www.telerik.com/products/aspnet-mvc.aspx\"><strong>MVC</strong></a><strong>,</strong><a href=\"http://www.telerik.com/products/silverlight.aspx\"><strong>Silverlight</strong></a><strong>,</strong><a href=\"http://www.telerik.com/products/winforms.aspx\"><strong>Windows Forms</strong></a><strong> and </strong><a href=\"http://www.telerik.com/products/wpf.aspx\"><strong>WPF</strong></a><strong>. Enjoy developer tools like </strong><a href=\"http://www.telerik.com/products/reporting.aspx\"><strong>.NET Reporting</strong></a><strong>, </strong><a href=\"http://www.telerik.com/products/orm.aspx\"><strong>ORM</strong></a><strong>, </strong><a href=\"http://www.telerik.com/automated-testing-tools.aspx\"><strong>Automated Testing Tools</strong></a><strong>, </strong><a href=\"http://www.telerik.com/team-productivity-tools/teampulse.aspx\"><strong>Agile Project Management Tools</strong></a><strong>, and </strong><a href=\"http://www.sitefinity.com/\"><strong>Content Management Solution</strong></a><strong>. And now you can increase your productivity with </strong><a href=\"http://www.telerik.com/products/justcode.aspx\"><strong>JustCode</strong></a><strong>, Telerik’s new productivity tool for code analysis and refactoring. Visit </strong><a href=\"http://www.telerik.com/\"><strong>www.telerik.com</strong></a><strong>.</strong></p>  <p><strong><em></em></strong>As I've said before this show comes to you with the audio expertise and stewardship of <a href=\"http://weblogs.asp.net/cfranklin/archive/2006/01/11/435036.aspx\">Carl Franklin</a>. The name comes from <a href=\"http://www.paraesthesia.com/blog/comments.php?id=776_0_1_0_C\">Travis Illig</a>, but the goal of the show is simple. Avoid wasting the listener's time. (and make the commute less boring) </p>  <p>Enjoy. Who knows what'll happen in the next show?</p><br/><hr/>© 2011 Scott Hanselman. All rights reserved. <br/></div>\r\n<p><a href=\"http://feedads.g.doubleclick.net/~a/o6YFTNI-AG1Y7GHuJcW-ULTgdng/0/da\"><img src=\"http://feedads.g.doubleclick.net/~a/o6YFTNI-AG1Y7GHuJcW-ULTgdng/0/di\" border=\"0\" ismap=\"true\"></img></a><br/>\r\n<a href=\"http://feedads.g.doubleclick.net/~a/o6YFTNI-AG1Y7GHuJcW-ULTgdng/1/da\"><img src=\"http://feedads.g.doubleclick.net/~a/o6YFTNI-AG1Y7GHuJcW-ULTgdng/1/di\" border=\"0\" ismap=\"true\"></img></a></p><div class=\"feedflare\">\r\n<a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=_AZVixSec30:UdGE-4X4ow0:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=_AZVixSec30:UdGE-4X4ow0:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=_AZVixSec30:UdGE-4X4ow0:MjquXQBfoPI\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=MjquXQBfoPI\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=_AZVixSec30:UdGE-4X4ow0:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=_AZVixSec30:UdGE-4X4ow0:V_sGLiPBpWU\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=_AZVixSec30:UdGE-4X4ow0:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=_AZVixSec30:UdGE-4X4ow0:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=_AZVixSec30:UdGE-4X4ow0:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=_AZVixSec30:UdGE-4X4ow0:5M_9TJJRyfI\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=5M_9TJJRyfI\" border=\"0\"></img></a>\r\n</div><img src=\"http://feeds.feedburner.com/~r/ScottHanselman/~4/_AZVixSec30\" height=\"1\" width=\"1\"/>"
//                    }
//                },
//                {
//                    "title": "<span class=\"\">Link Rollup: New Documentation and Tutorials from Web Platform and Tools</span><span class=\"dj_space\"> </span>",
//                    "headlineUrl": "http://feedproxy.google.com/~r/ScottHanselman/~3/QUQYzf_4L2s/LinkRollupNewDocumentationAndTutorialsFromWebPlatformAndTools.aspx",
//                    "publicationDateTimeDescriptor": "Friday, 14 January 2011 8:23 PM GMT",
//                    "author": [
//                        {
//                            "guid": "guid_text",
//                            "class": "dj_text",
//                            "value": "author_text"
//                        },
//                        {
//                            "guid": "guid_highlight",
//                            "class": "dj_highlight",
//                            "value": "author_highlight"
//                        },
//                        {
//                            "guid": "guid_Company",
//                            "class": "dj_company",
//                            "value": "author_Company"
//                        },
//                        {
//                            "guid": "guid_Person",
//                            "class": "dj_person",
//                            "value": "author_Person"
//                        }
//                    ],
//                    "reference": {
//                        "type": "rss",
//                        "guid": "http://www.hanselman.com/blog/PermaLink.aspx?guid=dca9ef4c-40bd-4d95-979f-c0ea3778c5d0",
//                        "externalUri": "http://feedproxy.google.com/~r/ScottHanselman/~3/QUQYzf_4L2s/LinkRollupNewDocumentationAndTutorialsFromWebPlatformAndTools.aspx"
//                    },
//                    "snippet": {
//                        "value": "<div><p>Lots of cool stuff was released yesterday that I mentioned in the post <a href=\"http://www.hanselman.com/blog/ASPNETMVC3WebMatrixNuGetIISExpressAndOrchardReleasedTheMicrosoftJanuaryWebReleaseInContext.aspx\">ASP.NET MVC3, WebMatrix, NuGet, IIS Express and Orchard released - The Microsoft January Web Release in Context</a>. The <strong>Web Platform &amp; Tools Content Team </strong>has been working hard on new content and tutorials to get you up to date on all this fun new stuff. </p>  <p>Here's a link rollup from Wade's documentation team. Congratulations to Mike Pope, Tim Teebken, Rick Anderson, Tim Ammann, Keith Newman, Erik Reitan and Tom Dykstra on a great set of content. </p>  <p>Read on!</p>  <h3><b>Web Matrix</b></h3>  <p>Tim Amman (Lead Writer), Erik Reitan and Mike Pope (Editor)</p>  <ul>   <li><a href=\"http://go.microsoft.com/fwlink/?LinkId=208553\">Your First Website Using WebMatrix</a> </li>    <li><a href=\"http://go.microsoft.com/fwlink/?LinkId=202948\">Create an open-source wiki website from the Web Application Gallery</a> </li>    <li><a href=\"http://go.microsoft.com/fwlink/?LinkId=202947\">Create a website from a WebMatrix site template</a> </li>    <li><a href=\"http://go.microsoft.com/fwlink/?LinkId=202946\">Create an ASP.NET website from scratch</a> </li>    <li><a href=\"http://go.microsoft.com/fwlink/?LinkId=202948\">Create an open-source wiki website from the Web Application Gallery</a> </li>    <li><a href=\"http://go.microsoft.com/fwlink/?LinkId=202949\">Add and edit ASP.NET Web Pages</a> </li>    <li><a href=\"http://go.microsoft.com/fwlink/?LinkId=202954\">How to publish a web application using WebMatrix</a> </li>    <li><a href=\"http://go.microsoft.com/?linkid=9751042\">Download, edit, and republish your website with WebMatrix</a> </li>    <li><a href=\"http://go.microsoft.com/fwlink/?LinkId=202953\">Use WebMatrix to optimize your site for search engines (SEO)</a> </li>    <li><a href=\"http://go.microsoft.com/fwlink/?LinkId=202952\">Analyze requests to your website</a> </li>    <li><a href=\"http://go.microsoft.com/fwlink/?LinkId=208661\">Connecting to a SQL Server or MySQL Database in WebMatrix</a> </li>    <li><a href=\"http://go.microsoft.com/fwlink/?LinkId=202955\">Migrate a database to SQL Server</a> </li>    <li><a href=\"http://go.microsoft.com/fwlink/?LinkId=208660\">Securing Web Communications: Certificates, SSL, and https://</a> </li>    <li><a href=\"http://www.asp.net/webmatrix/content-guide\">WebMatrix Content Guide</a> </li> </ul>  <h3><b>ASP.NET Web Pages with Razor Syntax </b></h3>  <p>Tim Teebken (Lead Programming Writer), Erik Reitan,&#160; and Mike Pope (Editor)</p>  <ul>   <li><a href=\"http://go.microsoft.com/fwlink/?LinkID=208516\">eBook (PDF Version) Onboarding series for new Web Developers and full project code downloads</a>       <ul>       <li>(also used at Web Camps) </li>     </ul>   </li>    <li><a href=\"http://www.asp.net/webmatrix/tutorials/1-getting-started-with-webmatrix-and-asp-net-web-pages\">1 - Getting Started</a> </li>    <li><a href=\"http://www.asp.net/webmatrix/tutorials/2-introduction-to-asp-net-web-programming-using-the-razor-syntax\">2 - Coding with Razor Syntax</a> </li>    <li><a href=\"http://www.asp.net/webmatrix/tutorials/3-creating-a-consistent-look\">3 - Creating a Consistent Look</a> </li>    <li><a href=\"http://www.asp.net/webmatrix/tutorials/4-working-with-forms\">4 - Working with Forms</a> </li>    <li><a href=\"http://www.asp.net/webmatrix/tutorials/5-working-with-data\">5 - Working with Data</a> </li>    <li><a href=\"http://www.asp.net/webmatrix/tutorials/6-displaying-data-in-a-grid\">6 - Displaying Data in a Grid</a> </li>    <li><a href=\"http://www.asp.net/webmatrix/tutorials/7-displaying-data-in-a-chart\">7 - Displaying Data in a Chart</a> </li>    <li><a href=\"http://www.asp.net/webmatrix/tutorials/8-working-with-files\">8 - Working with Files</a> </li>    <li><a href=\"http://www.asp.net/webmatrix/tutorials/9-working-with-images\">9 - Working with Images</a> </li>    <li><a href=\"http://www.asp.net/webmatrix/tutorials/10-working-with-video\">10 - Working with Video</a> </li>    <li><a href=\"http://www.asp.net/webmatrix/tutorials/11-adding-email-to-your-web-site\">11 - Adding Email to your Website</a> </li>    <li><a href=\"http://www.asp.net/webmatrix/tutorials/12-adding-search-to-your-web-site\">12 - Adding Search to your Website</a> </li>    <li><a href=\"http://www.asp.net/webmatrix/tutorials/13-adding-social-networking-to-your-web-site\">13 - Adding Social Networking</a> </li>    <li><a href=\"http://www.asp.net/webmatrix/tutorials/14-analyzing-traffic\">14 - Analyzing Traffic on your Website</a> </li>    <li><a href=\"http://www.asp.net/webmatrix/tutorials/15-caching-to-improve-the-performance-of-your-website\">15 - Adding Caching for Faster Websites</a> </li>    <li><a href=\"http://www.asp.net/webmatrix/tutorials/16-adding-security-and-membership\">16 - Adding Security and Membership</a> </li>    <li><a href=\"http://www.asp.net/webmatrix/tutorials/17-introduction-to-debugging\">17 - Introduction to Debugging</a> </li>    <li><a href=\"http://www.asp.net/webmatrix/tutorials/18-customizing-site-wide-behavior\">18 - Customizing Site-Wide Behavior</a> </li>    <li><a href=\"http://www.asp.net/webmatrix/tutorials/asp-net-web-pages-api-reference\">ASP.NET Web Pages API Reference</a> </li>    <li><a href=\"http://www.asp.net/webmatrix/tutorials/asp-net-web-pages-visual-basic\">Visual Basic Language and Syntax</a> </li>    <li><a href=\"http://msdn.microsoft.com/en-us/library/gg549171(VS.99).aspx\">ASP.NET Web Pages Reference</a> </li> </ul>  <h3><b>Intro to ASP.NET MVC 3 onboarding series.</b> </h3>  <p>Scott Hanselman and Rick Anderson collaboration and Mike Pope (Editor)</p>  <p>Both C# and VB versions:</p>  <ul>   <li><a href=\"http://www.asp.net/mvc/tutorials/getting-started-with-mvc3-part1-cs\">Intro to ASP.NET MVC 3</a> </li>    <li><a href=\"http://www.asp.net/mvc/tutorials/getting-started-with-mvc3-part2-cs\">Adding a Controller</a> </li>    <li><a href=\"http://www.asp.net/mvc/tutorials/getting-started-with-mvc3-part3-cs\">Adding a View</a> </li>    <li><a href=\"http://www.asp.net/mvc/tutorials/getting-started-with-mvc3-part4-cs\">Entity Framework Code-First Development</a> </li>    <li><a href=\"http://www.asp.net/mvc/tutorials/getting-started-with-mvc3-part5-cs\">Accessing your Model's Data from a Controller</a> </li>    <li><a href=\"http://www.asp.net/mvc/tutorials/getting-started-with-mvc3-part6-cs\">Adding a Create Method and Create View</a> </li>    <li><a href=\"http://www.asp.net/mvc/tutorials/getting-started-with-mvc3-part7-cs\">Adding Validation to the Model</a> </li>    <li><a href=\"http://www.asp.net/mvc/tutorials/getting-started-with-mvc3-part8-cs\">Adding a New Field to the Movie Model and Table</a> </li>    <li><a href=\"http://www.asp.net/mvc/tutorials/getting-started-with-mvc3-part9-cs\">Implementing Edit, Details and Delete</a> </li>    <li><a href=\"http://code.msdn.microsoft.com/Project/Download/FileDownload.aspx?ProjectName=aspnetmvcsamples&amp;DownloadId=14822\">Source code for this series</a> </li> </ul>  <h3><b>MVC 3</b> </h3>  <p>Updated and new tutorials/ API Reference on MSDN</p>  <p>Rick Anderson (Lead Programming Writer), Keith Newman and Mike Pope (Editor)</p>  <ul>   <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001\" border=\"0\" alt=\"clip_image001\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001_be1def86-35ab-4ff3-866c-e5d780bd8171.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/gg416514(VS.98).aspx\">ASP.NET MVC 3 Content Map</a> </li>    <li><a href=\"http://msdn.microsoft.com/en-us/library/dd381412(VS.98).aspx\">ASP.NET MVC Overview</a> </li>    <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001[1]\" border=\"0\" alt=\"clip_image001[1]\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001%5B1%5D_838f8e31-9047-44f6-ab76-63cfe0a99043.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/dd410120(VS.98).aspx\">MVC Framework and Application Structure</a> </li>    <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001[2]\" border=\"0\" alt=\"clip_image001[2]\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001%5B2%5D_eb307373-85cb-4a5f-8ad2-6e5ad1a18356.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/dd381612(VS.98).aspx\">Understanding MVC Application Execution</a> </li>    <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001[3]\" border=\"0\" alt=\"clip_image001[3]\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001%5B3%5D_adbed811-af64-4527-9c15-d64634705f46.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/dd381619(VS.98).aspx\">Compatibility of ASP.NET Web Forms and MVC</a> </li>    <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001[4]\" border=\"0\" alt=\"clip_image001[4]\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001%5B4%5D_51ad1c7d-adb5-4b01-8238-872eb3ef9fdd.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/dd410597(VS.98).aspx\">Walkthrough: Creating a Basic ASP.NET MVC Project</a> </li>    <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001[5]\" border=\"0\" alt=\"clip_image001[5]\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001%5B5%5D_1a908a67-7110-4742-9fdf-be6203262a29.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/ff398049(VS.98).aspx\">Walkthrough: Using Forms Authentication in ASP.NET MVC</a> </li>    <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001[6]\" border=\"0\" alt=\"clip_image001[6]\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001%5B6%5D_479d62d3-2d96-4d51-9174-98fc3c7f6b0d.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/dd410269(VS.98).aspx\">Controllers and Action Methods in ASP.NET MVC Applications</a> </li>    <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001[7]\" border=\"0\" alt=\"clip_image001[7]\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001%5B7%5D_425994e5-0c57-4ec8-8c86-11d66ef6f4ae.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/ee728598(VS.98).aspx\">Using an Asynchronous Controller in ASP.NET MVC</a> </li>    <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001[8]\" border=\"0\" alt=\"clip_image001[8]\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001%5B8%5D_ca8154e1-cdb7-4392-be64-c655283678cb.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/dd410123(VS.98).aspx\">Views and UI Rendering in ASP.NET MVC Applications</a> </li>    <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001[9]\" border=\"0\" alt=\"clip_image001[9]\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001%5B9%5D_0401aa37-5e0d-4e62-9fa2-8645f3bf2209.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/dd410596(VS.98).aspx\">Rendering a Form Using HTML Helpers</a> </li>    <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001[10]\" border=\"0\" alt=\"clip_image001[10]\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001%5B10%5D_28274d99-33ce-416b-a49e-a1b1a710b079.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/dd394711(VS.98).aspx\">Passing Data in an ASP.NET MVC Application</a> </li>    <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001[11]\" border=\"0\" alt=\"clip_image001[11]\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001%5B11%5D_56445616-8392-4092-a768-d8f1705bff04.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/ee308450(VS.98).aspx\">Walkthrough: Using Templated Helpers to Display Data in ASP.NET MVC</a> </li>    <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001[12]\" border=\"0\" alt=\"clip_image001[12]\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001%5B12%5D_315a6747-bcf0-49f2-951a-c22e4347e852.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/ee839451(VS.98).aspx\">Creating an ASP.NET MVC View by Calling Multiple Actions</a> </li>    <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001[13]\" border=\"0\" alt=\"clip_image001[13]\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001%5B13%5D_fc23e532-cfe2-4554-8910-976809b7435f.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/dd410405(VS.98).aspx\">Models and Validation in ASP.NET MVC</a> </li>    <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001[14]\" border=\"0\" alt=\"clip_image001[14]\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001%5B14%5D_8b6a9da7-10ae-48b6-b68c-1fe7cf00d949.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/ee256141(VS.98).aspx\">How to: Validate Model Data Using DataAnnotations Attributes</a> </li>    <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001[15]\" border=\"0\" alt=\"clip_image001[15]\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001%5B15%5D_17275c56-62bc-4730-9d7b-ac79bab927db.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/dd405231(VS.98).aspx\">Walkthrough: Using MVC View Templates</a> </li>    <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001[16]\" border=\"0\" alt=\"clip_image001[16]\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001%5B16%5D_d2e4dde6-1a14-400e-91ed-9b642d27db17.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/gg508808(VS.98).aspx\">How to: Implement Remote Validation in ASP.NET MVC</a> </li>    <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001[17]\" border=\"0\" alt=\"clip_image001[17]\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001%5B17%5D_044add02-d008-46d3-ae36-7c2a53e9e5e4.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/dd381533(VS.98).aspx\">Walkthrough: Adding AJAX Scripting</a> </li>    <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001[18]\" border=\"0\" alt=\"clip_image001[18]\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001%5B18%5D_c3640c59-9528-4ae7-81e2-947306d4f8fc.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/ee671793(VS.98).aspx\">Walkthrough: Organizing an Application using Areas</a> </li>    <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001[19]\" border=\"0\" alt=\"clip_image001[19]\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001%5B19%5D_819a27aa-116c-42f7-ab09-2ee4e4a47ae3.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/gg416513(VS.98).aspx\">Filtering in ASP.NET MVC</a> </li>    <li><a href=\"http://msdn.microsoft.com/en-us/library/dd381609(VS.98).aspx\">Creating Custom Action Filters</a> </li>    <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001[21]\" border=\"0\" alt=\"clip_image001[21]\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001%5B21%5D_0ad8f2bc-aac7-401a-a6dd-7e646c986fdf.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/dd410056(VS.98).aspx\">How to: Create a Custom Action Filter</a> </li>    <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001[22]\" border=\"0\" alt=\"clip_image001[22]\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001%5B22%5D_90197b07-ad85-4cb5-a831-3ed10d316af4.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/gg416510(VS.98).aspx\">Unit Testing in ASP.NET MVC Applications</a> </li>    <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001[23]\" border=\"0\" alt=\"clip_image001[23]\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001%5B23%5D_9bdbcbb6-c964-42ce-8744-ac9a10753d67.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/gg416511(VS.98).aspx\">Walkthrough: Using TDD with ASP.NET MVC</a> </li>    <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001[24]\" border=\"0\" alt=\"clip_image001[24]\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001%5B24%5D_625cdb5d-f383-4014-b822-0046ab250ebe.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/gg416508(VS.98).aspx\">How to: Add a Custom ASP.NET MVC Test Framework in Visual Studio</a> </li>    <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001[25]\" border=\"0\" alt=\"clip_image001[25]\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001%5B25%5D_18dffb48-545e-4077-97d4-210f9ef8c95d.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/gg416515(VS.98).aspx\">ASP.NET MVC 3 Reference</a>       <ul>       <li><a href=\"http://msdn.microsoft.com/en-us/library/system.web.mvc(VS.98).aspx\">System.Web.Mvc</a> </li>        <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001[27]\" border=\"0\" alt=\"clip_image001[27]\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001%5B27%5D_04cbe2ca-927a-4e8a-92c1-5c22276f80f3.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/system.web.mvc.ajax(VS.98).aspx\">System.Web.Mvc.Ajax</a> </li>        <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001[28]\" border=\"0\" alt=\"clip_image001[28]\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001%5B28%5D_07cd3cb6-f4e4-425d-8015-14e8b2e6fbf2.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/system.web.mvc.async(VS.98).aspx\">System.Web.Mvc.Async</a> </li>        <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001[29]\" border=\"0\" alt=\"clip_image001[29]\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001%5B29%5D_f0462551-6d37-4d48-bc09-1f64a34621eb.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/system.web.mvc.html(VS.98).aspx\">System.Web.Mvc.Html</a> </li>        <li><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001[30]\" border=\"0\" alt=\"clip_image001[30]\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/LinkRollupNewDocumentationandTutorialsfr_9FCA/clip_image001%5B30%5D_54264582-2933-4a81-bf37-2bac6e3f126a.gif\" width=\"1\" height=\"1\" /><a href=\"http://msdn.microsoft.com/en-us/library/system.web.mvc.razor(VS.98).aspx\">System.Web.Mvc.Razor</a> </li>     </ul>   </li> </ul>  <h3><b>Orchard&#160; </b></h3>  <p>Keith Newman (Lead Programming Writer), Tom FitzMacken and Mike Pope (Editor)</p>  <ul>   <li><a href=\"http://www.orchardproject.net/docs/Working-with-Orchard-in-WebMatrix.ashx\">Working with Orchard in WebMatrix</a> </li>    <li><a href=\"http://www.orchardproject.net/docs/Accessing-and-rendering-shapes.ashx?NoRedirect=1\">Accessing and Rendering Shapes</a> </li>    <li><a href=\"http://www.orchardproject.net/docs/Customizing-the-default-theme.ashx?NoRedirect=1\">Customizing The Default Theme</a> </li>    <li><a href=\"http://www.orchardproject.net/docs/Template-file-syntax-guide.ashx?NoRedirect=1\">Template file syntax guide</a> </li>    <li><a href=\"http://www.orchardproject.net/docs/Writing-a-new-theme.ashx\">Writing a New Theme</a> </li>    <li><a href=\"http://www.orchardproject.net/docs/UI-guidelines-for-theme-authors.ashx\">UI guidelines for theme authors</a> </li>    <li><a href=\"http://www.orchardproject.net/docs/Packaging-and-sharing-themes.ashx\">Packaging and sharing themes</a> </li>    <li><a href=\"http://www.orchardproject.net/docs/Writing-a-widget.ashx\">Writing a Widget</a> </li>    <li><a href=\"http://www.orchardproject.net/docs/Managing-widgets.ashx?NoRedirect=1\">Managing widgets</a> </li>    <li><a href=\"http://www.orchardproject.net/docs/Saving-scheduling-and-publishing-drafts.ashx\">Saving, Scheduling, and Publishing Drafts</a> (Tom FitzMacken) </li>    <li><a href=\"http://www.orchardproject.net/docs/Understanding-permissions.ashx\">Understanding Permissions</a> (Tom FitzMacken) </li>    <li><a href=\"http://www.orchardproject.net/docs/Understanding-data-access.ashx\">Understanding data access</a> </li>    <li><a href=\"http://www.orchardproject.net/docs/Understanding-content-handlers.ashx\">Understanding content handlers</a> </li>    <li><a href=\"http://www.orchardproject.net/docs/Getting-around-the-admin-panel.ashx\">Getting Around the Admin Panel</a> </li>    <li><a href=\"http://www.orchardproject.net/docs/Adding-pages-to-your-site.ashx\">Adding Pages to Your Site</a> </li>    <li><a href=\"http://www.orchardproject.net/docs/Adding-a-blog-to-your-site.ashx\">Adding a Blog to Your Site</a> </li> </ul>  <h3><b>NuGet&#160; </b></h3>  <p>Tom Dykstra, Tim Teebken and Mike Pope (Editor))</p>  <ul>   <li><a href=\"http://nuget.codeplex.com/documentation?title=Getting%20Started\">Getting Started</a> (Tim Teebken) </li>    <li><a href=\"http://nuget.codeplex.com/wikipage?title=Using%20the%20Extension%20Manager%20to%20Install%20the%20Library%20Package%20Manager%20%28NuGet%29\">Installing NuGet</a> (updated) </li>    <li><a href=\"http://nuget.codeplex.com/wikipage?title=Finding%20and%20Installing%20a%20Package%20Using%20the%20Package%20Manager%20Console\">Installing a Package Using the Console (new)</a> </li>    <li><a href=\"http://nuget.codeplex.com/wikipage?title=Finding%20and%20Installing%20a%20Package%20Using%20the%20Add%20Library%20Package%20Reference%20Dialog%20Box\">Installing a Package using the Add Library Package Reference Dialog Box</a> (updated) </li>    <li><a href=\"http://sharepoint/sites/uifxue/Shared%20Documents/Content%20Plans/NuGet/&bull;%09http:/nuget.codeplex.com/wikipage?title=Removing%20a%20Package%20Using%20the%20Package%20Manager%20Console\">Removing a Package Using the Console (new)</a> </li>    <li><a href=\"http://sharepoint/sites/uifxue/Shared%20Documents/Content%20Plans/NuGet/&bull;%09http:/nuget.codeplex.com/wikipage?title=Removing%20a%20Package%20Using%20the%20Add%20Library%20Package%20Reference%20Dialog%20Box\">Removing a Package Using the Add Library Package Reference Dialog Box (new)</a> </li>    <li><a href=\"http://nuget.codeplex.com/wikipage?title=Updating%20a%20Package%20Using%20the%20Package%20Manager%20Console\">Updating a Package Using the Console (new)</a> </li>    <li><a href=\"http://nuget.codeplex.com/wikipage?title=Updating%20a%20Package%20Using%20the%20Add%20Library%20Package%20Reference%20Dialog%20Box\">Updating a Package Using the Add Library Package Reference Dialog Box (new)</a> </li>    <li><a href=\"http://nuget.codeplex.com/wikipage?title=Creating%20a%20Package\">Creating a Package</a> (updated) </li>    <li><a href=\"http://nuget.codeplex.com/documentation?title=Nuspec%20Format\">Nuspec Format</a> (updated) </li>    <li><a href=\"http://nuget.codeplex.com/wikipage?title=Version%20Range%20Specification\">Version Range Specification</a> (updated) </li>    <li><a href=\"http://nuget.codeplex.com/wikipage?title=Config%20File%20and%20Source%20Code%20Transformations\">Package Transformations (new)</a> </li>    <li><a href=\"http://nuget.codeplex.com/documentation?title=Package%20Manager%20Console%20Command%20Reference\">Package Manager Console Command Reference</a> (updated) </li>    <li><a href=\"http://nupackpackages.codeplex.com/\">Adding a Package to the Official Feed</a> (updated) </li>    <li><a href=\"http://nuget.codeplex.com/wikipage?title=Hosting%20Your%20Own%20Local%20and%20Remote%20NuPack%20Feeds\">Hosting your own local and remote NuGet Feeds</a> (updated) </li>    <li><a href=\"http://nuget.codeplex.com/wikipage?title=Frequently%20Asked%20Questions\">NuGet Frequently Asked Questions</a> (updated) </li>    <li><a href=\"http://nuget.codeplex.com/documentation?title=Getting%20Started\">NuGet Documentation tab</a> (updated) </li> </ul>  <h3><b>Website Panel</b></h3>  <p>Mike Pope provided editing support for the <a href=\"http://dev08.websitepanel.net/installation-guide/index\">WebsitePanel Guide</a>, authored by the Website Panel development team.</p>  <p>Enjoy!</p><br/><hr/>© 2011 Scott Hanselman. All rights reserved. <br/></div>\r\n<p><a href=\"http://feedads.g.doubleclick.net/~a/Y0zcjBM2_1OLS8ziAEhi9Bbml6c/0/da\"><img src=\"http://feedads.g.doubleclick.net/~a/Y0zcjBM2_1OLS8ziAEhi9Bbml6c/0/di\" border=\"0\" ismap=\"true\"></img></a><br/>\r\n<a href=\"http://feedads.g.doubleclick.net/~a/Y0zcjBM2_1OLS8ziAEhi9Bbml6c/1/da\"><img src=\"http://feedads.g.doubleclick.net/~a/Y0zcjBM2_1OLS8ziAEhi9Bbml6c/1/di\" border=\"0\" ismap=\"true\"></img></a></p><div class=\"feedflare\">\r\n<a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=QUQYzf_4L2s:crCNsjoxhRQ:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=QUQYzf_4L2s:crCNsjoxhRQ:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=QUQYzf_4L2s:crCNsjoxhRQ:MjquXQBfoPI\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=MjquXQBfoPI\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=QUQYzf_4L2s:crCNsjoxhRQ:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=QUQYzf_4L2s:crCNsjoxhRQ:V_sGLiPBpWU\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=QUQYzf_4L2s:crCNsjoxhRQ:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=QUQYzf_4L2s:crCNsjoxhRQ:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=QUQYzf_4L2s:crCNsjoxhRQ:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=QUQYzf_4L2s:crCNsjoxhRQ:5M_9TJJRyfI\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=5M_9TJJRyfI\" border=\"0\"></img></a>\r\n</div><img src=\"http://feeds.feedburner.com/~r/ScottHanselman/~4/QUQYzf_4L2s\" height=\"1\" width=\"1\"/>"
//                    }
//                },
//                {
//                    "title": "<span class=\"\">ASP.NET MVC3, WebMatrix, NuGet, IIS Express and Orchard released - The Microsoft January Web Release in Context</span><span class=\"dj_space\"> </span>",
//                    "headlineUrl": "http://feedproxy.google.com/~r/ScottHanselman/~3/0dOJtXu-z74/ASPNETMVC3WebMatrixNuGetIISExpressAndOrchardReleasedTheMicrosoftJanuaryWebReleaseInContext.aspx",
//                    "publicationDateTimeDescriptor": "Thursday, 13 January 2011 5:57 PM GMT",
//                    "author": [
//                        {
//                            "guid": "guid_text",
//                            "class": "dj_text",
//                            "value": "author_text"
//                        },
//                        {
//                            "guid": "guid_highlight",
//                            "class": "dj_highlight",
//                            "value": "author_highlight"
//                        },
//                        {
//                            "guid": "guid_Company",
//                            "class": "dj_company",
//                            "value": "author_Company"
//                        },
//                        {
//                            "guid": "guid_Person",
//                            "class": "dj_person",
//                            "value": "author_Person"
//                        }
//                    ],
//                    "reference": {
//                        "type": "rss",
//                        "guid": "http://www.hanselman.com/blog/PermaLink.aspx?guid=cabbb05f-f449-4b9b-9f0f-acb6f74a81fe",
//                        "externalUri": "http://feedproxy.google.com/~r/ScottHanselman/~3/0dOJtXu-z74/ASPNETMVC3WebMatrixNuGetIISExpressAndOrchardReleasedTheMicrosoftJanuaryWebReleaseInContext.aspx"
//                    },
//                    "snippet": {
//                        "value": "<div><p><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" align=\"right\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/0262932e1e24_E460/image_09661c8b-8ecd-4e28-9a9f-24c89ca69f83.png\" width=\"210\" height=\"46\" /> At <strong>PDC10</strong> last November I did a talk on the <a href=\"http://www.hanselman.com/blog/PDC10BuildingABlogWithMicrosoftUnnamedPackageOfWebLove.aspx\">&quot;<strong>Unnamed Package of Web Love</strong>&quot;</a>, showing ASP.NET MVC3 and Razor Syntax, the NuGet Package Manager, as well as SQL Compact Edition and a little &quot;<a href=\"http://www.hanselman.com/blog/SimpleCodeFirstWithEntityFramework4MagicUnicornFeatureCTP4.aspx\">Entity Framework Magic Unicorn</a>.&quot; I make up my own names when I don't like what Microsoft names things, as you may notice.</p>  <p>Today Microsoft announced the (actual, final, honest) releases of:</p>  <ul>   <li><a href=\"http://www.asp.net/mvc\"><strong>ASP.NET MVC3</strong></a> with <strong>Razor</strong>       <ul>       <li>Lots of new features, the new Razor syntax, more extensibility hooks, new JavaScript features, better validation, easier caching, better dynamic support, and lots more. </li>        <li>This includes the NuGet package manager and the NuGet gallery is also in early beta at <a href=\"http://nuget.org\">http://nuget.org</a> for folks who want to create and publish their own packages) </li>        <li><a href=\"http://blog.stevensanderson.com/2011/01/13/scaffold-your-aspnet-mvc-3-project-with-the-mvcscaffolding-package/\"><strong>MVCScaffolding</strong></a>           <ul>           <li>Remember all that fun we had with the scaffolding experiment at PDC? Well, my teammate <a href=\"http://blog.stevensanderson.com/2011/01/13/scaffold-your-aspnet-mvc-3-project-with-the-mvcscaffolding-package/\">Steve Sanderson</a> has taken the prototype up to version 0.8, and it's pretty fabulous. Go read his blog post, then enjoy &quot;Install-Package MvcScaffolding.&quot; You can scaffold views, controllers, repositories, database contexts or even make your own custom scaffolder. Look for more built on scaffolding from Steve and I in the coming months. </li>         </ul>       </li>        <li><a href=\"http://www.asp.net/mvc/tutorials/getting-started-with-mvc3-part1-cs\"><strong>Updated Beginner Tutorials for ASP.NET MVC 3 in both C#</strong></a><strong> <em>and</em> </strong><a href=\"http://www.asp.net/mvc/tutorials/getting-started-with-mvc3-part1-vb\"><strong>in VB</strong></a>           <ul>           <li>Are you just getting started with MVC 3? Rick Anderson, Mike Pope and I have updated the beginner Movie App tutorials up on <a href=\"http://www.asp.net/mvc\">http://www.asp.net/mvc</a>, and <a href=\"http://www.asp.net/mvc/tutorials/mvc-music-store-part-1\">Jon Galloway has updated his Music Store to MVC 3</a> as well. </li>         </ul>       </li>     </ul>   </li>    <li><a href=\"http://www.nuget.org\"><strong>NuGet</strong></a>       <ul>       <li>NuGet is a package manager for .NET. It ships with ASP.NET MVC, but you can go get it separately if you like. Installing open source libraries is as simple as &quot;install-package elmah&quot; - it's great fun. </li>     </ul>   </li>    <li><a href=\"http://www.microsoft.com/web/webmatrix/\"><strong>WebMatrix</strong></a> (also with Razor)       <ul>       <li>WebMatrix is a small development environment that uses the simple Razor syntax to create websites really quickly. You can start from a gallery of existing open source applications or start from scratch. For example, <a href=\"http://blog.wekeroad.com/\">Rob Conery</a> and I wrote the little podcast site and feed for <a href=\"http://thisdeveloperslife.com\">http://thisdeveloperslife.com</a> in a day with WebMatrix. </li>        <li>NuGet package management is built into WebMatrix, too! Make a new site, run it, and hit /_admin. Dance. </li>     </ul>   </li>    <li><a href=\"http://learn.iis.net/page.aspx/860/iis-express/\"><strong>IIS 7.5 Express</strong></a><strong> </strong>      <ul>       <li>Yes, you can install it on its own. It's IIS, except it runs as a user process rather than a service. Cassini (Visual Developer Web Server) is dead! It's &quot;just in time&quot; IIS. There when you need it, and not running when it's not used. </li>        <li>This is the web server that Web Matrix uses today, but it'll be enabled in Visual Studio 2010 when SP1 comes out. </li>     </ul>   </li>    <li><strong>SQL Compact Edition 4</strong>       <ul>       <li>SQL Compact Edition is sweet because is a tiny in-process (no services, don't need to be admin) database that's great for small sites that aren't ready for SQL Server proper. It's xcopy-deployable and runs nicely on hosted sites. It's the default database for WebMatrix and I'm using it in Visual Studio for sites where my database isn't big enough to justify a SQL license. </li>        <li>You can use SQL Compact today in Visual Studio at runtime, much like I did in my PDC talk, but you won't be able to design and open your database in VS until SP1. (<a href=\"http://sqlcetoolbox.codeplex.com/\">You can use this Non-MS CodePlex project temporarily, but I didn't tell you</a>.) </li>     </ul>   </li>    <li><a href=\"http://www.iis.net/download/webfarmframework\"><strong>Web Farm Framework 2.0</strong></a> and Web Deploy       <ul>       <li>Makes setting up multiple servers way easier. Treat and manage groups of servers, use ARR for load-balancing (or use 3rd party balancers), and upgrade, switch, and add servers with PowerShell. Mmm....PowerShell. </li>     </ul>   </li>    <li><a href=\"http://orchardproject.net/\"><strong>Orchard 1.0</strong></a>       <ul>       <li>This free, open-source content management system is ready to go. The release is published on the <a href=\"http://orchard.codeplex.com\">Orchard CodePlex</a> website and <a href=\"http://microsoft.com/web/gallery\">Microsoft Web Application Gallery</a>. You can use Orchard all up, or you can take it apart and just use pieces. Mix and match as you like. </li>     </ul>   </li> </ul>  <p>It's the <strong><font color=\"#ff0000\">January Web Release,</font> say I, </strong>and the easiest way to get it is with <a href=\"http://www.microsoft.com/web/\"><strong>Web Platform Installer 3.0</strong></a>, which also went live today. Using direct links to products within the Web Platform installer will automatically add any dependencies you might need. </p>  <h3>Now what? I'm freaking out!</h3>  <p>Folks sometimes say &quot;slow down, you're freaking me out, this is too much new stuff. What about my current stuff?&quot; Here's a few statements from me personally on today's releases.</p>  <ul>   <li>Just because ASP.NET MVC 3 came out today, doesn't mean WebForms doesn't have some cool features coming. Remember that &quot;ASP.NET &gt; ASP.NET MVC&quot;. You'll see features and improvements from both technologies move between MVC and WebForms. </li>    <li>IIS Express will integrate with VS2010 in SP1 and work with both WebForms and MVC. </li>    <li>You can mix Razor Views and Web Forms Views within MVC. The creation/existence of Razor doesn't obviate your existing work. </li>    <li>SQL Compact works great with WebForms as well as ASP.NET MVC, not to mention any .NET project. Ever want a tiny database for a command-line app and didn't want the headache? Bam. </li>    <li>SQL Compact database can be upgraded into full SQL Server databases when/if you outgrow SQL Compact. </li>    <li>While NuGet is bundled with ASP.NET MVC in today's release, you can use it for any .NET project type. Most NuGet libraries are not specific to ASP.NET MVC. </li> </ul>  <p>As I've said before, Microsoft is creating new LEGO pieces for software development to round our existing collection of bricks out. Be exited about these bricks, but remember they augment the existing ones, not replace them.</p>  <h3>What now?</h3>  <p>I'd recommend you go get <a href=\"http://www.microsoft.com/web/gallery/install.aspx?appsxml=&amp;appid=MVC3\">MVC3</a> and <a href=\"http://www.microsoft.com/web/gallery/install.aspx?appsxml=&amp;appid=WebMatrix\">WebMatrix</a>, preferably <a href=\"http://www.microsoft.com/web/gallery/install.aspx?appsxml=&amp;appid=WebMatrix;MVC3\"><strong>at the same time</strong></a> via one of these Web Platform links. That should get you all these other nice things chained in. In the spring when VS2010 SP1 comes out, the tooling and management bits for SQL Compact and IIS Express will be enabled.</p>  <p><strong>Stuff to Get</strong></p>  <ul>   <li><strong>If you don't already have Visual Studio 2010, one Web Platform link gets you </strong><a href=\"http://www.microsoft.com/web/gallery/install.aspx?appsxml=&amp;appid=VWD;SQLExpress;SQLManagementStudio;MVC3\"><strong>Visual Web Developer Express, SQL Express, SQL Management Studio, and ASP.NET MVC 3 with Razor</strong></a> </li>    <li>If you already have VS, you can get <a href=\"http://www.microsoft.com/web/gallery/install.aspx?appsxml=&amp;appid=WebMatrix;MVC3\">everything mentioned above as it's included with WebMatrix plus ASP.NET MVC 3 via the Web Platform Installer</a>. </li>    <li>Or get the stuff on your own:      <ul>       <li><a href=\"http://www.asp.net/mvc/mvc3\"><strong>ASP.NET MVC 3</strong></a> </li>        <li><a href=\"http://www.nuget.org\"><strong>NuGet</strong></a><strong> </strong>(included in ASP.NET MVC 3) </li>        <li><a href=\"http://www.microsoft.com/web/gallery/install.aspx?appsxml=&amp;appid=IISExpress\"><strong>IIS 7.5 Express</strong></a> </li>     </ul>   </li> </ul>  <h3>ReSharper Updated</h3>  <p>One other note, the folks at JetBrains were ready for this and spun a new build of ReSharper, so <strong>ReSharper 5.1.2 doesn’t interfere with Visual Studio IntelliSense in ASP.NET MVC 3 Razor syntax</strong>. Earlier ReSharper 5.x builds had certain <a href=\"http://blogs.jetbrains.com/dotnet/2010/11/razor-intellisense-and-resharper/\">issues with Razor IntelliSense</a> that are addressed in 5.1.2. Specifically, ReSharper 5.1.2 doesn’t prevent Visual Studio from automatically providing its own IntelliSense in .cshtml and .vbhtml web pages anymore: both code completion and Parameter Info work as expected. <strong>Other than that, ReSharper 5.x doesn’t provide any additional support for Razor</strong>: only ReSharper 6 will bring full support for this view engine. Pre-release ReSharper 6 builds are currently available via <a href=\"http://confluence.jetbrains.net/display/ReSharper/ReSharper+6.0+Nightly+Builds\">Early Access Program</a>, so if you're a ReSharper user, be aware!</p>  <p>Enjoy.</p>  <p><strong>Related Links</strong></p>  <ul>   <li><a href=\"http://weblogs.asp.net/scottgu/archive/2011/01/03/vs-2010-sp1-beta-and-iis-developer-express.aspx\">Scott Gu on VS 2010 SP1 (Beta) and IIS Express</a> </li>    <li><a href=\"http://weblogs.asp.net/scottgu/archive/2011/01/11/vs-2010-sp1-and-sql-ce.aspx\">ScottGu on VS 2010 SP1 and SQL CE</a> </li>    <li><a href=\"http://www.hanselman.com/blog/IntegratingASPNETMVC3IntoExistingUpgradedASPNET4WebFormsApplications.aspx\">Integrating ASP.NET MVC 3 into existing upgraded ASP.NET 4 Web Forms applications</a> </li>    <li><a href=\"http://www.hanselman.com/blog/VisualStudioExplosionVS2010SP1BETAReleasedAndContext.aspx\">Visual Studio Explosion! - VS2010 SP1 *BETA* Released and Context</a> </li>    <li><a href=\"http://www.hanselman.com/blog/PDC10BuildingABlogWithMicrosoftUnnamedPackageOfWebLove.aspx\">PDC10: Building a Blog with Microsoft &quot;Unnamed Package of Web Love&quot;</a>       <ul>       <li><a href=\"http://videoaz.microsoftpdc.com/vod/pdc10_pre_event/ShowContent_VOD/FT01_ScottHanselman_PDC_MP4_Low_device_480x272_750k.mp4\">Low Bandwidth MP4 Video (about 120 megs)</a> </li>        <li><a href=\"http://videoaz.microsoftpdc.com/vod/pdc10_pre_event/ShowContent_VOD/FT01_ScottHanselman_PDC_MP4_High_1280x720_2500k.mp4\">High Bandwidth MP4 Video (I dunno, it's big and HD)</a> </li>     </ul>   </li>    <li><a href=\"http://www.hanselman.com/blog/IntroducingNuPackPackageManagementForNETAnotherPieceOfTheWebStack.aspx\">Introducing NuGet Package Management for .NET - Another piece of the Web Stack</a>       <ul>       <li><a href=\"http://www.hanselman.com/blog/SimpleCodeFirstWithEntityFramework4MagicUnicornFeatureCTP4.aspx\">Simple Code First with Entity Framework 4 - Magic Unicorn Feature CTP 4</a> </li>        <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/07/02/introducing-razor.aspx\">&quot;Razor&quot; Page Syntax</a> </li>        <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/06/30/new-embedded-database-support-with-asp-net.aspx\">SQL 4 Compact Edition</a> </li>     </ul>   </li>    <li>Random Community Wallpapers because they are fun. Woot.      <ul>       <li><a href=\"http://vs2010wallpapers.com/\">http://vs2010wallpapers.com/</a> </li>     </ul>   </li> </ul><br/><hr/>© 2011 Scott Hanselman. All rights reserved. <br/></div>\r\n<p><a href=\"http://feedads.g.doubleclick.net/~a/ZGgzG5Cz2kQlzMSVRNcFUNJ8JBs/0/da\"><img src=\"http://feedads.g.doubleclick.net/~a/ZGgzG5Cz2kQlzMSVRNcFUNJ8JBs/0/di\" border=\"0\" ismap=\"true\"></img></a><br/>\r\n<a href=\"http://feedads.g.doubleclick.net/~a/ZGgzG5Cz2kQlzMSVRNcFUNJ8JBs/1/da\"><img src=\"http://feedads.g.doubleclick.net/~a/ZGgzG5Cz2kQlzMSVRNcFUNJ8JBs/1/di\" border=\"0\" ismap=\"true\"></img></a></p><div class=\"feedflare\">\r\n<a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=0dOJtXu-z74:QofARCZQmWc:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=0dOJtXu-z74:QofARCZQmWc:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=0dOJtXu-z74:QofARCZQmWc:MjquXQBfoPI\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=MjquXQBfoPI\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=0dOJtXu-z74:QofARCZQmWc:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=0dOJtXu-z74:QofARCZQmWc:V_sGLiPBpWU\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=0dOJtXu-z74:QofARCZQmWc:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=0dOJtXu-z74:QofARCZQmWc:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=0dOJtXu-z74:QofARCZQmWc:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=0dOJtXu-z74:QofARCZQmWc:5M_9TJJRyfI\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=5M_9TJJRyfI\" border=\"0\"></img></a>\r\n</div><img src=\"http://feeds.feedburner.com/~r/ScottHanselman/~4/0dOJtXu-z74\" height=\"1\" width=\"1\"/>"
//                    }
//                },
//                {
//                    "title": "<span class=\"\">Integrating ASP.NET MVC 3 into existing upgraded ASP.NET 4 Web Forms applications</span><span class=\"dj_space\"> </span>",
//                    "headlineUrl": "http://feedproxy.google.com/~r/ScottHanselman/~3/N72XiZ77Ftg/IntegratingASPNETMVC3IntoExistingUpgradedASPNET4WebFormsApplications.aspx",
//                    "publicationDateTimeDescriptor": "Thursday, 06 January 2011 8:19 AM GMT",
//                    "author": [
//                        {
//                            "guid": "guid_text",
//                            "class": "dj_text",
//                            "value": "author_text"
//                        },
//                        {
//                            "guid": "guid_highlight",
//                            "class": "dj_highlight",
//                            "value": "author_highlight"
//                        },
//                        {
//                            "guid": "guid_Company",
//                            "class": "dj_company",
//                            "value": "author_Company"
//                        },
//                        {
//                            "guid": "guid_Person",
//                            "class": "dj_person",
//                            "value": "author_Person"
//                        }
//                    ],
//                    "reference": {
//                        "type": "rss",
//                        "guid": "http://www.hanselman.com/blog/PermaLink.aspx?guid=63dd91ab-a636-41c3-a002-a0ebe0d3794f",
//                        "externalUri": "http://feedproxy.google.com/~r/ScottHanselman/~3/N72XiZ77Ftg/IntegratingASPNETMVC3IntoExistingUpgradedASPNET4WebFormsApplications.aspx"
//                    },
//                    "snippet": {
//                        "value": "<div><p>I got an interesting question recently from a gentleman who has an existing ASP.NET WebForms 2.0 application that works just fine. He's upgraded it to ASP.NET 4 and it still works great, but now he wants to add some ASP.NET MVC pages to it. He doesn't want to rewrite the application.</p>  <p>A few years ago I did <a href=\"http://www.hanselman.com/blog/PlugInHybridsASPNETWebFormsAndASPMVCAndASPNETDynamicDataSideBySide.aspx\">a post on &quot;Hybrid&quot; ASP.NET applications</a>. The goal was to reinforce the point that you can have ASP.NET applications that are both WebForms and MVC (as well as WCF and ASMX Web Services and on and on.) While the File|New Project dialog gives you a choice between This and That, in fact it's all ASP.NET underneath. You are welcome to mix and match &quot;cafeteria style&quot; and create apps in any combination you'd like.</p>  <p>The easiest way to add ASP.NET MVC 3 to an upgraded ASP.NET 2.0 WebForms application:</p>  <ul>   <li>Run the Upgrade Wizard (open the&#160; Visual Studio2008 Web Application in Visual Studio 2010) </li>    <li>Create a default ASP.NET MVC application for reference (you'll throw it away later) </li>    <li>Use a differencing tool like <a href=\"http://scootersoftware.com/\">Beyond Compare</a> to integrate the new web.config entries from the ASP.NET MVC sections into the upgraded ASP.NET WebForms application </li>    <li>Dance </li> </ul>  <p>Here's the longer more detailed version of the above.</p>  <h3>Upgrading an ASP.NET 2.0 WebForms Application</h3>  <p>I've created a simple Visual Studio 2008 ASP.NET WebForms Application running under .NET 2. It's a simple calculator.</p>  <p><a href=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/7b9b92f7ec32_14D8C/WebApplication1%20-%20Microsoft%20Visual%20Studio%20(7)_2.png\"><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"WebApplication1 - Microsoft Visual Studio (7)\" border=\"0\" alt=\"WebApplication1 - Microsoft Visual Studio (7)\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/7b9b92f7ec32_14D8C/WebApplication1%20-%20Microsoft%20Visual%20Studio%20(7)_thumb.png\" width=\"550\" height=\"384\" /></a> </p>  <p>It works nicely. Now, open this application in Visual Studio 2010. You'll get the Conversion/Upgrade Wizard.</p>  <p><a href=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/7b9b92f7ec32_14D8C/Visual%20Studio%20Conversion%20Wizard%20(6)_2.png\"><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"Visual Studio Conversion Wizard (6)\" border=\"0\" alt=\"Visual Studio Conversion Wizard (6)\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/7b9b92f7ec32_14D8C/Visual%20Studio%20Conversion%20Wizard%20(6)_thumb.png\" width=\"498\" height=\"389\" /></a> </p>  <p>Next, Next, Yada, Yada, Yada, Finish. You'll get an prompt to upgrade the 2.0 application to .NET Framework 4. Click Yes.</p>  <p><a href=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/7b9b92f7ec32_14D8C/Web%20Site%20targeting%20older%20.Net%20Framework%20Found%20(8)_2.png\"><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"Web Site targeting older .Net Framework Found (8)\" border=\"0\" alt=\"Web Site targeting older .Net Framework Found (8)\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/7b9b92f7ec32_14D8C/Web%20Site%20targeting%20older%20.Net%20Framework%20Found%20(8)_thumb.png\" width=\"550\" height=\"207\" /></a> </p>  <p>Here's the same WebForms application, now upgraded in Visual Studio 2010. It still runs and it's still WebForms. Or, more accurately, it continues to&#160; be ASP.NET.</p>  <p><a href=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/7b9b92f7ec32_14D8C/WebApplication1%20-%20Microsoft%20Visual%20Studio%20(9)_2.png\"><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"WebApplication1 - Microsoft Visual Studio (9)\" border=\"0\" alt=\"WebApplication1 - Microsoft Visual Studio (9)\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/7b9b92f7ec32_14D8C/WebApplication1%20-%20Microsoft%20Visual%20Studio%20(9)_thumb.png\" width=\"550\" height=\"404\" /></a>&#160;</p>  <p>I'm going to take a new default ASP.NET MVC 3 application and Beyond Compare and compare the upgraded app with the default app.</p>  <p><a href=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/7b9b92f7ec32_14D8C/WebApplication1%20_--_%20MvcApplication1%20-%20Folder%20Compare%20-%20Beyond%20Compare%20(10)_2.png\"><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"WebApplication1 _--_ MvcApplication1 - Folder Compare - Beyond Compare (10)\" border=\"0\" alt=\"WebApplication1 _--_ MvcApplication1 - Folder Compare - Beyond Compare (10)\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/7b9b92f7ec32_14D8C/WebApplication1%20_--_%20MvcApplication1%20-%20Folder%20Compare%20-%20Beyond%20Compare%20(10)_thumb.png\" width=\"550\" height=\"363\" /></a> </p>  <p>I'll copy over these folders and files:</p>  <ul>   <li>Content </li>    <li>Controllers </li>    <li>Models </li>    <li>Scripts </li>    <li>Views </li>    <li>Global.asax, Global.asax.cs </li> </ul>  <p>Now, here's the before and after references from the upgraded application. The old on the left and the new on the right.</p>  <p><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"New References\" border=\"0\" alt=\"New References\" align=\"right\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/7b9b92f7ec32_14D8C/New%20References_1.png\" width=\"257\" height=\"419\" /><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"References\" border=\"0\" alt=\"References\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/7b9b92f7ec32_14D8C/References_1.png\" width=\"255\" height=\"329\" /> </p>  <p>Here's the references I added. </p>  <ul>   <li>Microsoft.CSharp      <ul>       <li>(as this was a C# app) </li>     </ul>   </li>    <li>System.Web.Mvc      <ul>       <li>From \\Program Files (x86)\\Microsoft ASP.NET\\ASP.NET MVC 3\\Assemblies </li>     </ul>   </li>    <li>System.Web.WebPages and System.Web.Razor      <ul>       <li>From \\Program Files (x86)\\Microsoft ASP.NET\\ASP.NET Web Pages\\v1.0\\Assemblies </li>     </ul>   </li>    <li>System.ComponentModel.DataAnnotations </li> </ul>  <p>Next, add these sections to the Web.config. Again, it's easier to use a diff tool and you might have a little trial and error.</p>  <p>Thought: <em>This might be a nice </em><a href=\"http://www.nuget.org\"><em>NuGet</em></a><em> package for someone to make...</em></p>  <p>Add these settings in appSettings:</p>  <pre class=\"brush: xml; toolbar: false; auto-links: false;\">&lt;appSettings&gt;<br />   &lt;add key=&quot;ClientValidationEnabled&quot; value=&quot;true&quot;/&gt; <br />   &lt;add key=&quot;UnobtrusiveJavaScriptEnabled&quot; value=&quot;true&quot;/&gt; <br />&lt;/appSettings&gt;</pre>\r\n\r\n<p>Add these assembly elements under compilation:</p>\r\n\r\n<pre class=\"brush: xml; toolbar: false; auto-links: false;\">&lt;compilation debug=&quot;true&quot; targetFramework=&quot;4.0&quot;&gt;<br />  &lt;assemblies&gt;<br />    &lt;add assembly=&quot;System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35&quot; /&gt;<br />    &lt;add assembly=&quot;System.Web.Helpers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35&quot; /&gt;<br />    &lt;add assembly=&quot;System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35&quot; /&gt;<br />    &lt;add assembly=&quot;System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35&quot; /&gt;<br />    &lt;add assembly=&quot;System.Web.WebPages, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35&quot; /&gt;<br />  &lt;/assemblies&gt;<br />&lt;/compilation&gt;</pre>\r\n\r\n<p>Add these namespaces in pages:</p>\r\n\r\n<pre class=\"brush: xml; toolbar: false; auto-links: false;\">&lt;system.web&gt;<br />  &lt;pages&gt;<br />     &lt;namespaces&gt;<br />       &lt;add namespace=&quot;System.Web.Helpers&quot; /&gt;<br />       &lt;add namespace=&quot;System.Web.Mvc&quot; /&gt;<br />       &lt;add namespace=&quot;System.Web.Mvc.Ajax&quot; /&gt;<br />       &lt;add namespace=&quot;System.Web.Mvc.Html&quot; /&gt;<br />       &lt;add namespace=&quot;System.Web.Routing&quot; /&gt;<br />       &lt;add namespace=&quot;System.Web.WebPages&quot;/&gt;<br />     &lt;/namespaces&gt;<br />   &lt;/pages&gt;<br />&lt;/system.web&gt;</pre>\r\n\r\n<p>If you're running IIS7 at some point, which I'm sure you will, add these:</p>\r\n\r\n<pre class=\"brush: xml; toolbar: false; auto-links: false;\">&lt;system.webServer&gt;<br />  &lt;validation validateIntegratedModeConfiguration=&quot;false&quot;/&gt;<br />  &lt;modules runAllManagedModulesForAllRequests=&quot;true&quot;/&gt;<br />&lt;/system.webServer&gt;</pre>\r\n\r\n<p>And finally add this assembly binding redirect, just in case you've got ASP.NET MVC 1 or 2 assemblies in your Global Assembly Cache (GAC).</p>\r\n\r\n<pre class=\"brush: xml; toolbar: false; auto-links: false;\">&lt;configuration&gt;<br /> &lt;runtime&gt;<br />    &lt;assemblyBinding xmlns=&quot;urn:schemas-microsoft-com:asm.v1&quot;&gt;<br />      &lt;dependentAssembly&gt;<br />        &lt;assemblyIdentity name=&quot;System.Web.Mvc&quot; publicKeyToken=&quot;31bf3856ad364e35&quot; /&gt;<br />        &lt;bindingRedirect oldVersion=&quot;1.0.0.0-2.0.0.0&quot; newVersion=&quot;3.0.0.0&quot; /&gt;<br />      &lt;/dependentAssembly&gt;<br />    &lt;/assemblyBinding&gt;<br />  &lt;/runtime&gt;<br />&lt;/configuration&gt;</pre>\r\n\r\n<p>Also, make sure you merge in the Global.asax.cs so that your Routes are registered at application startup. </p>\r\n\r\n<pre class=\"brush: csharp; toolbar: false; auto-links: false;\">public class SomeHybrid: System.Web.HttpApplication<br />{<br />    public static void RegisterGlobalFilters(GlobalFilterCollection filters)<br />    {<br />        filters.Add(new HandleErrorAttribute());<br />    }<br /><br />    public static void RegisterRoutes(RouteCollection routes)<br />    {<br />        routes.IgnoreRoute(&quot;{resource}.axd/{*pathInfo}&quot;);<br /><br />        routes.MapRoute(<br />            &quot;Default&quot;, // Route name<br />            &quot;{controller}/{action}/{id}&quot;, // URL with parameters<br />            new { controller = &quot;Home&quot;, action = &quot;Index&quot;, id = UrlParameter.Optional } // Parameter defaults<br />        );<br /><br />    }<br /><br />    protected void Application_Start()<br />    {<br />        AreaRegistration.RegisterAllAreas();<br /><br />        RegisterGlobalFilters(GlobalFilters.Filters);<br />        RegisterRoutes(RouteTable.Routes);<br />    }<br />}</pre>\r\n\r\n<p>Now, at this point I can visit both pages. The WebForms page is a file on disk, so ASP.NET routing passes requests directly on to this page when I /default.aspx. The ASP.NET Routing engine is engaged so I can also hit /Home/Index.</p>\r\n\r\n<p>If I want to get fancy, I can add a PageRoute so I have pretty URLs when visit my WebForms pages as well. Just add a route in the Global.asax like this. Make sure that simple routes like these come first, as the default ASP.NET MVC route is very &quot;greedy&quot; and would gobble up a simple URL like /calculator</p>\r\n\r\n<pre class=\"brush: csharp; toolbar: false; auto-links: false;\">routes.MapPageRoute(&quot;WebFormThing&quot;, &quot;Calculator&quot;, &quot;~/Default.aspx&quot;);</pre>\r\n\r\n<p>Now I can visit /Calculator and the request is routed to /Default.aspx. And of course, my ASP.NET MVC 3 Razor pages like /Home/Index work also.</p>\r\n\r\n<p><a href=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/7b9b92f7ec32_14D8C/http___localhost_12089_Calculator%20-%20Windows%20Internet%20Explorer%20(18)_2.png\"><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"http___localhost_12089_Calculator - Windows Internet Explorer (18)\" border=\"0\" alt=\"http___localhost_12089_Calculator - Windows Internet Explorer (18)\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/7b9b92f7ec32_14D8C/http___localhost_12089_Calculator%20-%20Windows%20Internet%20Explorer%20(18)_thumb.png\" width=\"550\" height=\"127\" /></a> </p>\r\n\r\n<p>Finally, just to make the point, here's the Default.aspx from the WebForms part of my new app next to the source for a Razor page.</p>\r\n\r\n<p><a href=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/7b9b92f7ec32_14D8C/WebApplication1%20-%20Microsoft%20Visual%20Studio%20(16)_2.png\"><img style=\"border-right-width: 0px; margin: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"WebApplication1 - Microsoft Visual Studio (16)\" border=\"0\" alt=\"WebApplication1 - Microsoft Visual Studio (16)\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/7b9b92f7ec32_14D8C/WebApplication1%20-%20Microsoft%20Visual%20Studio%20(16)_thumb.png\" width=\"520\" height=\"389\" /></a> </p>\r\n\r\n<p>You CAN have it all, Dear Reader. Enjoy.</p><br/><hr/>© 2011 Scott Hanselman. All rights reserved. <br/></div>\r\n<p><a href=\"http://feedads.g.doubleclick.net/~a/iKOmNmczyPpepSzmjeeNEq_B7dI/0/da\"><img src=\"http://feedads.g.doubleclick.net/~a/iKOmNmczyPpepSzmjeeNEq_B7dI/0/di\" border=\"0\" ismap=\"true\"></img></a><br/>\r\n<a href=\"http://feedads.g.doubleclick.net/~a/iKOmNmczyPpepSzmjeeNEq_B7dI/1/da\"><img src=\"http://feedads.g.doubleclick.net/~a/iKOmNmczyPpepSzmjeeNEq_B7dI/1/di\" border=\"0\" ismap=\"true\"></img></a></p><div class=\"feedflare\">\r\n<a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=N72XiZ77Ftg:X29DfUgfABo:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=N72XiZ77Ftg:X29DfUgfABo:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=N72XiZ77Ftg:X29DfUgfABo:MjquXQBfoPI\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=MjquXQBfoPI\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=N72XiZ77Ftg:X29DfUgfABo:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=N72XiZ77Ftg:X29DfUgfABo:V_sGLiPBpWU\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=N72XiZ77Ftg:X29DfUgfABo:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=N72XiZ77Ftg:X29DfUgfABo:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=N72XiZ77Ftg:X29DfUgfABo:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=N72XiZ77Ftg:X29DfUgfABo:5M_9TJJRyfI\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=5M_9TJJRyfI\" border=\"0\"></img></a>\r\n</div><img src=\"http://feeds.feedburner.com/~r/ScottHanselman/~4/N72XiZ77Ftg\" height=\"1\" width=\"1\"/>"
//                    }
//                },
//                {
//                    "title": "<span class=\"\">The Weekly Source Code 58 - Generating (Database) Test Data with AutoPoco and Entity Framework Code First</span><span class=\"dj_space\"> </span>",
//                    "headlineUrl": "http://feedproxy.google.com/~r/ScottHanselman/~3/yUIYRB1joxE/TheWeeklySourceCode58GeneratingDatabaseTestDataWithAutoPocoAndEntityFrameworkCodeFirst.aspx",
//                    "publicationDateTimeDescriptor": "Wednesday, 05 January 2011 8:40 AM GMT",
//                    "author": [
//                        {
//                            "guid": "guid_text",
//                            "class": "dj_text",
//                            "value": "author_text"
//                        },
//                        {
//                            "guid": "guid_highlight",
//                            "class": "dj_highlight",
//                            "value": "author_highlight"
//                        },
//                        {
//                            "guid": "guid_Company",
//                            "class": "dj_company",
//                            "value": "author_Company"
//                        },
//                        {
//                            "guid": "guid_Person",
//                            "class": "dj_person",
//                            "value": "author_Person"
//                        }
//                    ],
//                    "reference": {
//                        "type": "rss",
//                        "guid": "http://www.hanselman.com/blog/PermaLink.aspx?guid=313d209e-d4e2-413d-b06b-bd78d012a48e",
//                        "externalUri": "http://feedproxy.google.com/~r/ScottHanselman/~3/yUIYRB1joxE/TheWeeklySourceCode58GeneratingDatabaseTestDataWithAutoPocoAndEntityFrameworkCodeFirst.aspx"
//                    },
//                    "snippet": {
//                        "value": "<div><p>I was messing around with Entity Framework Code First for data access recently (what I like to call <a href=\"Code First with Entity Framework 4 - Magic Unicorn Feature CTP 4 \">EF Magic Unicorn</a>) and had a need to create a bunch of test data. Such a chore. It's totally no fun and I always end up slapping the keyboard thinking that someone else should be slapping the keyboard. Test data for 10 instances of a class is easy, but 1000 is some how less inspiring. </p>  <p>Sure, there's lots of software I could <strong>buy </strong>to solve a problem like that, but meh. I dug around some and found an open source framework called <a href=\"http://autopoco.codeplex.com/\"><strong>AutoPoco</strong></a> from <a href=\"http://codeofrob.com/\">Rob Ashton</a> (<a href=\"http://twitter.com/robashton\">@robashton</a>). First, awesome name. I like using open source projects with cool names. It's kind of like reading a book with a great cover. Makes you feel good jumping in. Then, I started working with it and realized there's some substance to this modest little library. All the better, right?</p>  <p><a href=\"http://autopoco.codeplex.com/\">AutoPoco's CodePlex project</a> says:</p>  <blockquote>   <p><em>AutoPoco is a highly configurable framework for the purpose of fluently building readable test data from Plain Old CLR Objects</em></p> </blockquote>  <p>Here's the general idea. You need 100 of something (or 5, or whatever) setup a certain way, so you ask AutoPoco to construct a bunch of you, and it's so. It's that easy. </p>  <p>For example, please get me 1000 objects of type SimpleUser and make their FirstName's all &quot;Bob.&quot;:</p>  <pre class=\"brush: csharp; toolbar: false; auto-links: false;\">IList&lt;SimpleUser&gt; users = session.List&lt;SimpleUser&gt;(1000).Impose(x =&gt; x.FirstName, &quot;Bob&quot;).Get();</pre>\r\n\r\n<p>Here's where it really shines, though:</p>\r\n\r\n<pre class=\"brush: csharp; toolbar: false; auto-links: false;\">session.List&lt;SimpleUser&gt;(100)<br />                 .First(50)<br />                      .Impose(x =&gt; x.FirstName, &quot;Rob&quot;)<br />                      .Impose(x =&gt; x.LastName, &quot;Ashton&quot;)<br />                  .Next(50)<br />                      .Impose(x =&gt; x.FirstName, &quot;Luke&quot;)<br />                      .Impose(x =&gt; x.LastName, &quot;Smith&quot;)<br />                  .All().Random(25)<br />                      .Impose(x =&gt; x.Role,roleOne)<br />                  .Next(25)<br />                      .Impose(x =&gt; x.Role,roleTwo)<br />                  .Next(50)<br />                      .Impose(x =&gt; x.Role, roleThree)<br />                 .All()<br />                      .Invoke(x =&gt; x.SetPassword(&quot;Password1&quot;))<br />                 .Get();</pre>\r\n\r\n<p>This says:</p>\r\n\r\n<blockquote>\r\n  <p><em>Create 100 users\r\n      <br />The first 50 of those users will be called Rob Ashton\r\n\r\n      <br />The last 50 of those users will be called Luke Smith\r\n\r\n      <br />25 Random users will have RoleOne\r\n\r\n      <br />A different 25 random users will have RoleTwo\r\n\r\n      <br />And the other 50 users will have RoleThree\r\n\r\n      <br />And set the password on every single user to Password1</em></p>\r\n</blockquote>\r\n\r\n<p>Effectively, the sky's the limit. You can also give AutoPoco more advanced requirements like 'make emails meet these requirements,&quot; or &quot;call this method when it's time to get a password.&quot; The idea being not just to make test data, but to make somewhat <em>meaningful </em>test data.</p>\r\n\r\n<p>This got me thinking that since we're using POCOs (Plain Ol' CLR Objects) that I could use this not only for Unit Tests but also Integration Tests and Smoke Tests. I could use this to generate test data in a database. All the better to use this with the new Entity Framework stuff that also uses POCOs.</p>\r\n\r\n<p>For example:</p>\r\n\r\n<pre class=\"brush: csharp; toolbar: false; auto-links: false;\">public void MakeTestData()<br />{<br />    IGenerationSessionFactory factory = AutoPocoContainer.Configure(x =&gt;<br />    {<br />        x.Conventions(c =&gt; { c.UseDefaultConventions(); });<br />        x.AddFromAssemblyContainingType&lt;SimpleUser&gt;();<br />    });<br /><br />    IGenerationSession session = factory.CreateSession();<br /><br />    IList&lt;SimpleUser&gt; users = session.List&lt;SimpleUser&gt;(1000)<br />        .First(500)<br />            .Impose(x =&gt; x.FirstName, &quot;Bob&quot;)<br />        .Next(500)<br />            .Impose(x =&gt; x.FirstName, &quot;Alice&quot;)<br />        .All()<br />            .Impose(x =&gt; x.LastName, &quot;Hanselman&quot;)<br />        .Random(250)<br />            .Impose(x =&gt; x.LastName, &quot;Blue&quot;)<br />        .All().Random(400)<br />            .Impose(x =&gt; x.LastName, &quot;Red&quot;)<br />        .All()<br />        .Get();<br /><br />    SimpleUserDatabase db = new SimpleUserDatabase();<br />    foreach (SimpleUser s in users)<br />    {<br />        db.Users.Add(s);<br />    }<br />    db.SaveChanges();<br />}</pre>\r\n\r\n<p>And boom, I've got 1000 users in my little database.</p>\r\n\r\n<p>I've talked to the author, Rob, and I think that the Session creation and Factory stuff could be made smaller, and the loop at the bottom could be reduced a line or two. Rob's a practical guy, and I look forward to where AutoPoco goes next! All in all, what a useful library. I can see myself using this a lot.</p>\r\n\r\n<p><strong>You can get </strong><a href=\"http://autopoco.codeplex.com/\"><strong>AutoPoco</strong></a><strong> from CodePlex, or even better, from inside Visual Studio using </strong><a href=\"http://nuget.org\"><strong>NuGet</strong></a><strong> (</strong><a href=\"http://nuget.org\"><strong>http://nuget.org</strong></a><strong>) via &quot;<font size=\"2\" face=\"Courier New\">install-package autopoco</font>.&quot;</strong></p>\r\n\r\n<p>Enjoy! This library has 36 downloads, but deserves a few orders of magnitudes more. I'll do my best to showcase more open source libraries that deserve attention (and more importantly, to be used!) going forward. Feel free to email me suggestions of insanely useful libraries.</p><br/><hr/>© 2011 Scott Hanselman. All rights reserved. <br/></div>\r\n<p><a href=\"http://feedads.g.doubleclick.net/~a/v1H6B9eua9GaKAWNpDy7oMi9LtU/0/da\"><img src=\"http://feedads.g.doubleclick.net/~a/v1H6B9eua9GaKAWNpDy7oMi9LtU/0/di\" border=\"0\" ismap=\"true\"></img></a><br/>\r\n<a href=\"http://feedads.g.doubleclick.net/~a/v1H6B9eua9GaKAWNpDy7oMi9LtU/1/da\"><img src=\"http://feedads.g.doubleclick.net/~a/v1H6B9eua9GaKAWNpDy7oMi9LtU/1/di\" border=\"0\" ismap=\"true\"></img></a></p><div class=\"feedflare\">\r\n<a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=yUIYRB1joxE:afRRhCj7VgU:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=yUIYRB1joxE:afRRhCj7VgU:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=yUIYRB1joxE:afRRhCj7VgU:MjquXQBfoPI\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=MjquXQBfoPI\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=yUIYRB1joxE:afRRhCj7VgU:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=yUIYRB1joxE:afRRhCj7VgU:V_sGLiPBpWU\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=yUIYRB1joxE:afRRhCj7VgU:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=yUIYRB1joxE:afRRhCj7VgU:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=yUIYRB1joxE:afRRhCj7VgU:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=yUIYRB1joxE:afRRhCj7VgU:5M_9TJJRyfI\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=5M_9TJJRyfI\" border=\"0\"></img></a>\r\n</div><img src=\"http://feeds.feedburner.com/~r/ScottHanselman/~4/yUIYRB1joxE\" height=\"1\" width=\"1\"/>"
//                    }
//                },
//                {
//                    "title": "<span class=\"\">Adding a Netgear N600 Wireless Dual Band Gigabit Router WNDR3700 to an existing FIOS Wireless AP for improved wireless coverage</span><span class=\"dj_space\"> </span>",
//                    "headlineUrl": "http://feedproxy.google.com/~r/ScottHanselman/~3/FyPwwyEQi7I/AddingANetgearN600WirelessDualBandGigabitRouterWNDR3700ToAnExistingFIOSWirelessAPForImprovedWirelessCoverage.aspx",
//                    "publicationDateTimeDescriptor": "Tuesday, 04 January 2011 8:59 AM GMT",
//                    "author": [
//                        {
//                            "guid": "guid_text",
//                            "class": "dj_text",
//                            "value": "author_text"
//                        },
//                        {
//                            "guid": "guid_highlight",
//                            "class": "dj_highlight",
//                            "value": "author_highlight"
//                        },
//                        {
//                            "guid": "guid_Company",
//                            "class": "dj_company",
//                            "value": "author_Company"
//                        },
//                        {
//                            "guid": "guid_Person",
//                            "class": "dj_person",
//                            "value": "author_Person"
//                        }
//                    ],
//                    "reference": {
//                        "type": "rss",
//                        "guid": "http://www.hanselman.com/blog/PermaLink.aspx?guid=0d64c667-3154-4485-ad20-870884f995f2",
//                        "externalUri": "http://feedproxy.google.com/~r/ScottHanselman/~3/FyPwwyEQi7I/AddingANetgearN600WirelessDualBandGigabitRouterWNDR3700ToAnExistingFIOSWirelessAPForImprovedWirelessCoverage.aspx"
//                    },
//                    "snippet": {
//                        "value": "<div><p>A few months ago <a href=\"http://www.hanselman.com/blog/ConfiguringTwoWirelessRoutersWithOneSSIDNetworkNameAtHomeForFreeRoaming.aspx\">I added a second wireless access point (AP) to my existing network in order to get better wireless coverage</a>. We have a house that's kind of spread out and we were getting really spotty 802.11g around the house. Laptops we getting one or two bars, or worse yet, they were constantly negotiating network speeds and never getting a decent one. The iOS devices (iPhone, iPad, etc) would barely get any signal in certain rooms. It was certainly irritating. </p>  <p>So, I added a second identical AP with the same SSID upstairs so we could move between floors without trouble. However, this AP (some <a href=\"http://www.actiontec.com/products/product.php?pid=189\">crappy standard one that came with the FIOS service</a>) was/is really inconsistent. While the network architecture is solid, as is the idea behind my &quot;<a href=\"http://www.hanselman.com/blog/ConfiguringTwoWirelessRoutersWithOneSSIDNetworkNameAtHomeForFreeRoaming.aspx\">add a second AP</a>&quot; post, the implementation using these 5 year old crappy routers was flaky at best.</p>  <blockquote>   <p><em>Techie Background: I have </em><a href=\"http://www.hanselman.com/blog/LeavingComcastForVerizonFiosUpgradingTheHomeNetworkToFiberOptic.aspx\"><em>FIOS optical internet service</em></a><em>, and have for the last 3 years. It's upgraded from 15Mbs to 35Mbs recently. The house is Gigabit Ethernet (all CAT6, see the related links below). All the wired devices are running through a <a href=\"http://www.amazon.com/gp/product/B00358MP02?ie=UTF8&amp;tag=diabeticbooks&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B00358MP02\">Netgear GS724T-300 24-port Gigabit Smart Switch</a> and all of the wireless devices are at least 2.4Ghz 802.11g, and some are 802.11n, with one being 2.4Ghz or 5Ghz.</em></p> </blockquote>  <p>Since I have a home office, meaning I literally work at home 90% of the time for my living, having flaky wireless is a problem. I decided to start researching a better solution.&#160; I decided to add a new wireless router. I figured that it was insane for one house to have to APs and that surely if a cell phone could work over miles that a freaking wireless network router could cover a single house. I found the solution in the <a href=\"http://www.amazon.com/gp/product/B002HWRJY4?ie=UTF8&amp;tag=diabeticbooks&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B002HWRJY4\">Netgear N600 Gigabit</a>.</p>  <p>Here's the idea:</p>  <p><a href=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/10731f3b8dd6_14795/image_2.png\"><img style=\"border-bottom: 0px; border-left: 0px; margin: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"Network Diagram with additional Wireless Router\" border=\"0\" alt=\"Network Diagram with additional Wireless Router\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/10731f3b8dd6_14795/image_thumb.png\" width=\"650\" height=\"305\" /></a> </p>  <p>However, there are some important notes when adding a <strong>new wireless router </strong>to an existing system that is already performing these functions</p>  <ul>   <li>Passing out IP addresses via HDCP</li>    <li>Acting as a wireless access point with lots of existing clients</li>    <li>Has existing static IP leases setup, existing quality of service (QoS) settings </li> </ul>  <p>Stated differently, my existing router is nicely and intricately configured for my house. It works fine and I like it fine, except it has crappy wireless. I want to add a new wireless router without disturbing what already works. If it ain't broke, don't fix it. </p>  <p>I picked up a <a href=\"http://www.amazon.com/gp/product/B002HWRJY4?ie=UTF8&amp;tag=diabeticbooks&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B002HWRJY4\"><strong>Netgear N600 Wireless Gigabit Router</strong></a>. Note that there are two versions of this, one with a large bright LED on the outside and one without. The one without has 4 Gigabit LAN ports, and that's the better router. </p>  <p>Let me tell you that this router is awesome. I figured I'd be moving from a 3-5 year old crappy router to some better router, sure, but not a totally awesome Swiss Army Knife. Networking has come a long way since 2005 or whenever my stock router was made.</p>  <p>This Netgear is awesome because of these features:</p>  <ul>   <li>Two separate bands for wireless, each with 300Mbs of independent bandwidth. There's 2.4GHz and 5.0GHz frequencies. Nice for copying VMs over wireless. I made a &quot;HANSELMAN&quot; and &quot;HANSELMAN-N&quot; network.</li>    <li>Four Gigabit Ethernet points. Not needed for me, but it's nice to have four more Gigabit ports.</li>    <li>Eight internal antennas - <strong>Seriously, this thing has insane range.</strong> I had already added an external antenna to my FIOS router and <em>still </em>had bad range. This little Netgear covers 3500+ square feet and more. I'm thrilled with the range. I don't need two routers anymore. Adding this router totally achieved my goal.</li> </ul>  <p>There were a few gotchas. I still need my ISP's router because it's the bridge to the ISP and the Optical Network Terminal (ONT) they installed on the house. It's also totally configured as I like. </p>  <p>Here's the steps I took:</p>  <ul>   <li>Logged into the FIOS ActionTec at <a href=\"http://192.168.1.1\">http://192.168.1.1</a> and disabled the wireless interface. I confirmed that the &quot;HANSELMAN&quot; network was no longer showing up.</li>    <li>Plugged the Netgear directly into my laptop and visited it's default IP of <a href=\"http://10.0.0.1\">http://10.0.0.1</a>. I disabled the new router's DHCP (this is crucial). </li>    <ul>     <li><strong>Important Trick:</strong> I temporarily plugged the new Netgear's yellow &quot;external network&quot; directly into the FIOs ActionTec so the Netgear could update its firmware the first time and get the initial setup wizard would stop nagging me. The router expects to be hooked up in this way at least initially, so you need to satisfy its setup.</li>   </ul>    <li>After the Netgear is configured, now unplug the yellow external LAN wire and instead plug into one of the standard four ethernet ports into either your switch (that's what I did, gigabit to gigabit) or directly into your ISP's router. We want the new router to get an IP address from our existing router and route traffic and DHCP requests to the ISP's router. To be clear: Setting up your new router in this way <em>will leave the yellow upstream external network port empty, despite what the documentation says.</em></li>    <li>On the new router, setup the 2.4GHz wireless network with your SSID, and the 5GHz wireless network with something like YOURSSID-N. Here's what I did:     <br /> </li>   <img style=\"border-bottom: 0px; border-left: 0px; margin: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"View Available Networks Dialog\" border=\"0\" alt=\"View Available Networks Dialog\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/10731f3b8dd6_14795/View%20Available%20Networks%20(5)_3.png\" width=\"301\" height=\"249\" />    <ul>     <li></li>   </ul> </ul>  <p>Now I've got 192.x.x.x addresses being handed out on two wireless networks. My Wireless-N network is getting 300Mbs throughput on my Lenovo, as its Intel Wireless LAN does 5Ghz 802.11n. Also, my iOS devices are using 2.4Ghz 802.11n and are suddenly a LOT snappier on large downloads and email.</p>  <p><img style=\"border-bottom: 0px; border-left: 0px; margin: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"Wireless Network Connection Status\" border=\"0\" alt=\"Wireless Network Connection Status\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/10731f3b8dd6_14795/Wireless%20Network%20Connection%20Status%20(2)_3.png\" width=\"407\" height=\"487\" /> </p>  <p>I'm absolutely thrilled with the a <a href=\"http://www.amazon.com/gp/product/B002HWRJY4?ie=UTF8&amp;tag=diabeticbooks&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B002HWRJY4\"><strong>Netgear N600 Wireless Gigabit Router</strong></a>. It's the top of the line for the house, definitely a &quot;prosumer&quot; router and a really nice upgrade to any existing system if you know a little about setting up your network. Totally recommended.</p>  <p><strong>Related Links</strong></p>  <ul>   <li><a href=\"http://www.hanselman.com/blog/ConfiguringTwoWirelessRoutersWithOneSSIDNetworkNameAtHomeForFreeRoaming.aspx\"><strong>Configuring two wireless routers with one SSID (network name) at home for free roaming</strong></a></li>    <li><a href=\"http://www.hanselman.com/blog/WiringTheNewHouseForAHomeNetwork.aspx\">Wiring the house for a Home Network</a></li>    <li><a href=\"http://www.hanselman.com/blog/WiringTheNewHouseForAHomeNetworkPart2DesignQampA.aspx\">Wiring the house for a Home Network - Part 2 - Design Q&amp;A</a></li>    <li><a href=\"http://www.hanselman.com/blog/WiringTheNewHouseForAHomeNetworkPart3ISPHookup.aspx\">Wiring the house for a Home Network - Part 3 - ISP Hookup</a></li>    <li><a href=\"http://www.hanselman.com/blog/WiringTheHouseForAHomeNetworkPart4ThankYouCat6GigabitEthernet.aspx\">Wiring the house for a Home Network - Part 4 - Thank You Cat 6 Gigabit Ethernet</a></li>    <li><a href=\"http://www.hanselman.com/blog/WiringTheHouseForAHomeNetworkPart5GigabitThroughputAndVista.aspx\">Wiring the house for a Home Network - Part 5 - Gigabit Throughput and Vista</a></li>    <li><a href=\"http://www.hanselman.com/blog/NewJobNewHouseNewBabyAndDesigningATotallyNewHomeOffice.aspx\">New Job, New House, New Baby, and Designing a Totally New Home Office</a></li>    <li><a href=\"http://www.hanselman.com/blog/HowToUseGoogleEarthOrVirtualEarthToVisualizeANewHouseLotPart1.aspx\">How To: Use Google Earth or Virtual Earth to Visualize a New House Lot - Part 1</a></li>    <li><a href=\"http://www.hanselman.com/blog/HowToUseGoogleEarthAndSketchItUpToVisualizeANewHouseLotPart2.aspx\">How To: Use Google Earth and SketchItUp to Visualize a New House Lot - Part 2</a></li> </ul><br/><hr/>© 2011 Scott Hanselman. All rights reserved. <br/></div>\r\n<p><a href=\"http://feedads.g.doubleclick.net/~a/ze6JS4tVGfKqU7XS5J10mSN9ZOs/0/da\"><img src=\"http://feedads.g.doubleclick.net/~a/ze6JS4tVGfKqU7XS5J10mSN9ZOs/0/di\" border=\"0\" ismap=\"true\"></img></a><br/>\r\n<a href=\"http://feedads.g.doubleclick.net/~a/ze6JS4tVGfKqU7XS5J10mSN9ZOs/1/da\"><img src=\"http://feedads.g.doubleclick.net/~a/ze6JS4tVGfKqU7XS5J10mSN9ZOs/1/di\" border=\"0\" ismap=\"true\"></img></a></p><div class=\"feedflare\">\r\n<a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=FyPwwyEQi7I:oy6mcxaaQzs:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=FyPwwyEQi7I:oy6mcxaaQzs:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=FyPwwyEQi7I:oy6mcxaaQzs:MjquXQBfoPI\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=MjquXQBfoPI\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=FyPwwyEQi7I:oy6mcxaaQzs:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=FyPwwyEQi7I:oy6mcxaaQzs:V_sGLiPBpWU\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=FyPwwyEQi7I:oy6mcxaaQzs:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=FyPwwyEQi7I:oy6mcxaaQzs:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=FyPwwyEQi7I:oy6mcxaaQzs:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=FyPwwyEQi7I:oy6mcxaaQzs:5M_9TJJRyfI\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=5M_9TJJRyfI\" border=\"0\"></img></a>\r\n</div><img src=\"http://feeds.feedburner.com/~r/ScottHanselman/~4/FyPwwyEQi7I\" height=\"1\" width=\"1\"/>"
//                    }
//                },
//                {
//                    "title": "<span class=\"\">Hanselminutes Podcast 247 - From Agile Consultant to Agile Team Member with John Wilger</span><span class=\"dj_space\"> </span>",
//                    "headlineUrl": "http://feedproxy.google.com/~r/ScottHanselman/~3/8TDozFQh53Q/HanselminutesPodcast247FromAgileConsultantToAgileTeamMemberWithJohnWilger.aspx",
//                    "publicationDateTimeDescriptor": "Monday, 03 January 2011 8:31 AM GMT",
//                    "author": [
//                        {
//                            "guid": "guid_text",
//                            "class": "dj_text",
//                            "value": "author_text"
//                        },
//                        {
//                            "guid": "guid_highlight",
//                            "class": "dj_highlight",
//                            "value": "author_highlight"
//                        },
//                        {
//                            "guid": "guid_Company",
//                            "class": "dj_company",
//                            "value": "author_Company"
//                        },
//                        {
//                            "guid": "guid_Person",
//                            "class": "dj_person",
//                            "value": "author_Person"
//                        }
//                    ],
//                    "reference": {
//                        "type": "rss",
//                        "guid": "http://www.hanselman.com/blog/PermaLink.aspx?guid=a8971a6b-664e-4bdd-852f-97709eabe212",
//                        "externalUri": "http://feedproxy.google.com/~r/ScottHanselman/~3/8TDozFQh53Q/HanselminutesPodcast247FromAgileConsultantToAgileTeamMemberWithJohnWilger.aspx"
//                    },
//                    "snippet": {
//                        "value": "<div><p><a href=\"http://johnwilger.com/\"><img style=\"background-image: none; border-right-width: 0px; margin: 0px 0px 5px 5px; padding-left: 0px; padding-right: 0px; display: inline; float: right; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"image\" border=\"0\" alt=\"image\" align=\"right\" src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Hanselminutes-Podcast-247---From-Agile-C_6A6/image_3.png\" width=\"244\" height=\"214\" /></a>Scott sits down with former agile coach <a href=\"http://johnwilger.com/\"><strong>John Wilger</strong></a> to talk about his experience going to work for the company he originally consulted with. What kinds of issues do small teams deal with when moving from traditional software development processes?</p>  <p><strong>Download: </strong><a href=\"http://s3.amazonaws.com/hanselminutes/hanselminutes_0247.mp3\">MP3 Full Show</a><strong></strong></p>  <p><strong>NOTE: If you want to download our complete archives as a feed - that's all 247 shows, </strong><a href=\"http://feeds.feedburner.com/HanselminutesCompleteMP3\"><strong>subscribe to the Complete MP3 Feed here</strong></a><strong>.</strong></p>  <p><strong>Also, please do take a moment and </strong><a href=\"http://phobos.apple.com/WebObjects/MZStore.woa/wa/viewPodcast?id=117488860\"><strong>review the show on iTunes</strong></a><strong>.</strong></p>  <p><strong>Subscribe: </strong><a href=\"http://feeds.feedburner.com/Hanselminutes\"><img border=\"0\" alt=\"Subscribe to Hanselminutes\" src=\"http://www.hanselman.com/blog/content/binary/feed_2Dicon_2D16x16.png\" /></a> or <a href=\"http://phobos.apple.com/WebObjects/MZStore.woa/wa/viewPodcast?id=117488860\"><img border=\"0\" alt=\"Subscribe to my Podcast in iTunes\" src=\"http://www.hanselman.com/blog/themes/zenGarden2/itunes_subscribe.gif\" /></a> or <a href=\"zune://subscribe/?Hanselminutes=http://feeds.feedburner.com/hanselminutes\"><strong>Zune</strong></a></p>  <p>Do also <a href=\"http://www.hanselminutes.com/archives.aspx\">remember the complete archives</a> are always up and they have <strong><em>PDF Transcripts</em></strong>, a little known feature that show up a few weeks after each show. </p>  <p><a href=\"http://www.telerik.com/products/aspnet/overview.aspx?gad=CPLKy9kDEghsdEbLXRZ0NBiF1bL_AyCCkdsU\"><strong>Telerik</strong></a> is our sponsor for this show. </p>  <p><a href=\"http://www.telerik.com/products/aspnet/overview.aspx?gad=CPLKy9kDEghsdEbLXRZ0NBiF1bL_AyCCkdsU\"><strong><img border=\"0\" align=\"left\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/HanselminutesPodcast51StaticCodeAnalysis_140AB/telerikLogo%5B1%5D%5B8%5D.gif\" width=\"216\" height=\"74\" /></strong></a><strong>Building quality software is never easy. It requires skills and imagination. We cannot promise to improve your skills, but when it comes to User Interface and developer tools, we can provide the building blocks to take your application a step closer to your imagination. Explore the leading UI suites for </strong><a href=\"http://asp.net/\"><strong>ASP.NET</strong></a><strong> AJAX,</strong><a href=\"http://www.telerik.com/products/aspnet-mvc.aspx\"><strong>MVC</strong></a><strong>,</strong><a href=\"http://www.telerik.com/products/silverlight.aspx\"><strong>Silverlight</strong></a><strong>,</strong><a href=\"http://www.telerik.com/products/winforms.aspx\"><strong>Windows Forms</strong></a><strong> and </strong><a href=\"http://www.telerik.com/products/wpf.aspx\"><strong>WPF</strong></a><strong>. Enjoy developer tools like </strong><a href=\"http://www.telerik.com/products/reporting.aspx\"><strong>.NET Reporting</strong></a><strong>, </strong><a href=\"http://www.telerik.com/products/orm.aspx\"><strong>ORM</strong></a><strong>, </strong><a href=\"http://www.telerik.com/automated-testing-tools.aspx\"><strong>Automated Testing Tools</strong></a><strong>, </strong><a href=\"http://www.telerik.com/team-productivity-tools/teampulse.aspx\"><strong>Agile Project Management Tools</strong></a><strong>, and </strong><a href=\"http://www.sitefinity.com/\"><strong>Content Management Solution</strong></a><strong>. And now you can increase your productivity with </strong><a href=\"http://www.telerik.com/products/justcode.aspx\"><strong>JustCode</strong></a><strong>, Telerik’s new productivity tool for code analysis and refactoring. Visit </strong><a href=\"http://www.telerik.com/\"><strong>www.telerik.com</strong></a><strong>.</strong></p>  <p><strong><em></em></strong>As I've said before this show comes to you with the audio expertise and stewardship of <a href=\"http://weblogs.asp.net/cfranklin/archive/2006/01/11/435036.aspx\">Carl Franklin</a>. The name comes from <a href=\"http://www.paraesthesia.com/blog/comments.php?id=776_0_1_0_C\">Travis Illig</a>, but the goal of the show is simple. Avoid wasting the listener's time. (and make the commute less boring) </p>  <p>Enjoy. Who knows what'll happen in the next show?</p><br/><hr/>© 2011 Scott Hanselman. All rights reserved. <br/></div>\r\n<p><a href=\"http://feedads.g.doubleclick.net/~a/opHoHdIxMSKzY5TEimxF2WfjfGU/0/da\"><img src=\"http://feedads.g.doubleclick.net/~a/opHoHdIxMSKzY5TEimxF2WfjfGU/0/di\" border=\"0\" ismap=\"true\"></img></a><br/>\r\n<a href=\"http://feedads.g.doubleclick.net/~a/opHoHdIxMSKzY5TEimxF2WfjfGU/1/da\"><img src=\"http://feedads.g.doubleclick.net/~a/opHoHdIxMSKzY5TEimxF2WfjfGU/1/di\" border=\"0\" ismap=\"true\"></img></a></p><div class=\"feedflare\">\r\n<a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=8TDozFQh53Q:kwvS6kRJQNk:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=8TDozFQh53Q:kwvS6kRJQNk:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=8TDozFQh53Q:kwvS6kRJQNk:MjquXQBfoPI\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=MjquXQBfoPI\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=8TDozFQh53Q:kwvS6kRJQNk:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=8TDozFQh53Q:kwvS6kRJQNk:V_sGLiPBpWU\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=8TDozFQh53Q:kwvS6kRJQNk:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=8TDozFQh53Q:kwvS6kRJQNk:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=8TDozFQh53Q:kwvS6kRJQNk:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=8TDozFQh53Q:kwvS6kRJQNk:5M_9TJJRyfI\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=5M_9TJJRyfI\" border=\"0\"></img></a>\r\n</div><img src=\"http://feeds.feedburner.com/~r/ScottHanselman/~4/8TDozFQh53Q\" height=\"1\" width=\"1\"/>"
//                    }
//                },
//                {
//                    "title": "<span class=\"\">Hanselminutes Podcast 246 - Hanselminutiae-nine with Richard Campbell</span><span class=\"dj_space\"> </span>",
//                    "headlineUrl": "http://feedproxy.google.com/~r/ScottHanselman/~3/sHeiAek7pZs/HanselminutesPodcast246HanselminutiaenineWithRichardCampbell.aspx",
//                    "publicationDateTimeDescriptor": "Monday, 03 January 2011 8:27 AM GMT",
//                    "author": [
//                        {
//                            "guid": "guid_text",
//                            "class": "dj_text",
//                            "value": "author_text"
//                        },
//                        {
//                            "guid": "guid_highlight",
//                            "class": "dj_highlight",
//                            "value": "author_highlight"
//                        },
//                        {
//                            "guid": "guid_Company",
//                            "class": "dj_company",
//                            "value": "author_Company"
//                        },
//                        {
//                            "guid": "guid_Person",
//                            "class": "dj_person",
//                            "value": "author_Person"
//                        }
//                    ],
//                    "reference": {
//                        "type": "rss",
//                        "guid": "http://www.hanselman.com/blog/PermaLink.aspx?guid=625a5e7a-e64d-4650-b826-0d522134e1fa",
//                        "externalUri": "http://feedproxy.google.com/~r/ScottHanselman/~3/sHeiAek7pZs/HanselminutesPodcast246HanselminutiaenineWithRichardCampbell.aspx"
//                    },
//                    "snippet": {
//                        "value": "<div><p><img style=\"margin: 0px 0px 5px 5px; display: inline; float: right\" align=\"right\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/HanselminutesPodcast114WebsiteScalingWar_92F4/richard_headshot_web_3.jpg\" />Happy holidays! It's a totally random chat show with Richard Campbell. What's next for Windows Phone 7? Will Scott give up his iPhone? How many Kindles can one man own? Is Kinect the future of computing? All this and less on this episode.</p>  <p><strong>Download: </strong><a href=\"http://s3.amazonaws.com/hanselminutes/hanselminutes_0246.mp3\">MP3 Full Show</a><strong></strong></p>  <p><strong>NOTE: If you want to download our complete archives as a feed - that's all 246 shows, </strong><a href=\"http://feeds.feedburner.com/HanselminutesCompleteMP3\"><strong>subscribe to the Complete MP3 Feed here</strong></a><strong>.</strong></p>  <p><strong>Also, please do take a moment and </strong><a href=\"http://phobos.apple.com/WebObjects/MZStore.woa/wa/viewPodcast?id=117488860\"><strong>review the show on iTunes</strong></a><strong>.</strong></p>  <p><strong>Subscribe: </strong><a href=\"http://feeds.feedburner.com/Hanselminutes\"><img border=\"0\" alt=\"Subscribe to Hanselminutes\" src=\"http://www.hanselman.com/blog/content/binary/feed_2Dicon_2D16x16.png\" /></a> or <a href=\"http://phobos.apple.com/WebObjects/MZStore.woa/wa/viewPodcast?id=117488860\"><img border=\"0\" alt=\"Subscribe to my Podcast in iTunes\" src=\"http://www.hanselman.com/blog/themes/zenGarden2/itunes_subscribe.gif\" /></a> or <a href=\"zune://subscribe/?Hanselminutes=http://feeds.feedburner.com/hanselminutes\"><strong>Zune</strong></a></p>  <p>Do also <a href=\"http://www.hanselminutes.com/archives.aspx\">remember the complete archives</a> are always up and they have <strong><em>PDF Transcripts</em></strong>, a little known feature that show up a few weeks after each show. </p>  <p><a href=\"http://www.telerik.com/products/aspnet/overview.aspx?gad=CPLKy9kDEghsdEbLXRZ0NBiF1bL_AyCCkdsU\"><strong>Telerik</strong></a> is our sponsor for this show. </p>  <p><a href=\"http://www.telerik.com/products/aspnet/overview.aspx?gad=CPLKy9kDEghsdEbLXRZ0NBiF1bL_AyCCkdsU\"><strong><img border=\"0\" align=\"left\" src=\"http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/HanselminutesPodcast51StaticCodeAnalysis_140AB/telerikLogo%5B1%5D%5B8%5D.gif\" width=\"216\" height=\"74\" /></strong></a><strong>Building quality software is never easy. It requires skills and imagination. We cannot promise to improve your skills, but when it comes to User Interface and developer tools, we can provide the building blocks to take your application a step closer to your imagination. Explore the leading UI suites for </strong><a href=\"http://asp.net/\"><strong>ASP.NET</strong></a><strong> AJAX,</strong><a href=\"http://www.telerik.com/products/aspnet-mvc.aspx\"><strong>MVC</strong></a><strong>,</strong><a href=\"http://www.telerik.com/products/silverlight.aspx\"><strong>Silverlight</strong></a><strong>,</strong><a href=\"http://www.telerik.com/products/winforms.aspx\"><strong>Windows Forms</strong></a><strong> and </strong><a href=\"http://www.telerik.com/products/wpf.aspx\"><strong>WPF</strong></a><strong>. Enjoy developer tools like </strong><a href=\"http://www.telerik.com/products/reporting.aspx\"><strong>.NET Reporting</strong></a><strong>, </strong><a href=\"http://www.telerik.com/products/orm.aspx\"><strong>ORM</strong></a><strong>, </strong><a href=\"http://www.telerik.com/automated-testing-tools.aspx\"><strong>Automated Testing Tools</strong></a><strong>, </strong><a href=\"http://www.telerik.com/team-productivity-tools/teampulse.aspx\"><strong>Agile Project Management Tools</strong></a><strong>, and </strong><a href=\"http://www.sitefinity.com/\"><strong>Content Management Solution</strong></a><strong>. And now you can increase your productivity with </strong><a href=\"http://www.telerik.com/products/justcode.aspx\"><strong>JustCode</strong></a><strong>, Telerik’s new productivity tool for code analysis and refactoring. Visit </strong><a href=\"http://www.telerik.com/\"><strong>www.telerik.com</strong></a><strong>.</strong></p>  <p><strong><em></em></strong>As I've said before this show comes to you with the audio expertise and stewardship of <a href=\"http://weblogs.asp.net/cfranklin/archive/2006/01/11/435036.aspx\">Carl Franklin</a>. The name comes from <a href=\"http://www.paraesthesia.com/blog/comments.php?id=776_0_1_0_C\">Travis Illig</a>, but the goal of the show is simple. Avoid wasting the listener's time. (and make the commute less boring) </p>  <p>Enjoy. Who knows what'll happen in the next show?</p><br/><hr/>© 2011 Scott Hanselman. All rights reserved. <br/></div>\r\n<p><a href=\"http://feedads.g.doubleclick.net/~a/Uyti4OLfiRnW_xq4PwG8crdnglc/0/da\"><img src=\"http://feedads.g.doubleclick.net/~a/Uyti4OLfiRnW_xq4PwG8crdnglc/0/di\" border=\"0\" ismap=\"true\"></img></a><br/>\r\n<a href=\"http://feedads.g.doubleclick.net/~a/Uyti4OLfiRnW_xq4PwG8crdnglc/1/da\"><img src=\"http://feedads.g.doubleclick.net/~a/Uyti4OLfiRnW_xq4PwG8crdnglc/1/di\" border=\"0\" ismap=\"true\"></img></a></p><div class=\"feedflare\">\r\n<a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=sHeiAek7pZs:bOLsKpXiS4M:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=sHeiAek7pZs:bOLsKpXiS4M:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=sHeiAek7pZs:bOLsKpXiS4M:MjquXQBfoPI\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=MjquXQBfoPI\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=sHeiAek7pZs:bOLsKpXiS4M:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=sHeiAek7pZs:bOLsKpXiS4M:V_sGLiPBpWU\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=sHeiAek7pZs:bOLsKpXiS4M:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?i=sHeiAek7pZs:bOLsKpXiS4M:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=sHeiAek7pZs:bOLsKpXiS4M:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/ScottHanselman?a=sHeiAek7pZs:bOLsKpXiS4M:5M_9TJJRyfI\"><img src=\"http://feeds.feedburner.com/~ff/ScottHanselman?d=5M_9TJJRyfI\" border=\"0\"></img></a>\r\n</div><img src=\"http://feeds.feedburner.com/~r/ScottHanselman/~4/sHeiAek7pZs\" height=\"1\" width=\"1\"/>"
//                    }
//                }
//            ]
//                }
//            }
//        });
//        jQuery('#PortalHeadlineListControl-1').dj_PortalHeadlineList({
//            "options": {
//                "maxNumHeadlinesToShow": 0,
//                "displaySnippets": 0,
//                "displayNoResultsToken": false,
//                "truncationType": 0,
//                "debug": false
//            },
//            "tokens": {},
//            "data": {
//                "hitCount": {
//                    "exp": 0,
//                    "isPositive": true,
//                    "rawText": {
//                        "Value": "10"
//                    },
//                    "displayText": {
//                        "Value": "10"
//                    },
//                    "Value": 10
//                },
//                "resultSet": {
//                    "count": {
//                        "exp": 0,
//                        "isPositive": true,
//                        "rawText": {
//                            "Value": "10"
//                        },
//                        "displayText": {
//                            "Value": "10"
//                        },
//                        "Value": 10
//                    },
//                    "first": {
//                        "exp": 0,
//                        "isPositive": true,
//                        "rawText": {
//                            "Value": "1"
//                        },
//                        "displayText": {
//                            "Value": "1"
//                        },
//                        "Value": 1
//                    },
//                    "duplicateCount": {
//                        "exp": 0,
//                        "isPositive": true,
//                        "rawText": {
//                            "Value": "0"
//                        },
//                        "displayText": {
//                            "Value": "0"
//                        },
//                        "Value": 0
//                    },
//                    "headlines": [
//                {
//                    "title": "“Unplugged” LIDNUG online talk with me Monday ",
//                    "headlineUrl": "http://weblogs.asp.net/scottgu/archive/2011/01/23/unplugged-lidnug-online-talk-with-me-monday.aspx",
//                    "publicationDateTimeDescriptor": "Sunday, 23 January 2011 2:31 PM GMT",
//                    "reference": {
//                        "type": "atom",
//                        "guid": "<id xmlns=\"http://www.w3.org/2005/Atom\">http://weblogs.asp.net/scottgu/archive/2011/01/23/unplugged-lidnug-online-talk-with-me-monday.aspx</id>",
//                        "externalUri": "http://weblogs.asp.net/scottgu/archive/2011/01/23/unplugged-lidnug-online-talk-with-me-monday.aspx"
//                    },
//                    "snippet": [
//                        "<p>Tomorrow (Monday Jan 24th) I’m doing another <a href=\"http://lidnug-scottgu8.eventbrite.com/\" target=\"_blank\">online LIDNUG session</a>.&#160; The talk will be from 3:00pm to 4:30pm (Pacific Time).&#160; I do these talks a few times a year and they tend to be pretty fun.&#160; Attendees can ask any questions they want to me, and listen to me answer them live via LiveMeeting.&#160; We usually end up having some really good discussions on a wide variety of topics.&#160; Any topic is fair game: technical, strategy, community, college basketball, etc.</p>  <p>You can learn more and register to attend the online event for free <a href=\"http://lidnug-scottgu8.eventbrite.com/\" target=\"_blank\">here</a>. I’ll update this post with a download link to a recorded audio version of the talk after the event is over.</p>  <p>Hope to get a chance to chat with some of you there!</p>  <p>Scott</p>  <p><em>P.S. In addition to blogging, I am also now using Twitter for quick updates and to share links. Follow me at: </em><a href=\"http://www.twitter.com/scottgu\" target=\"_blank\">twitter.com/scottgu</a></p><img src=\"http://weblogs.asp.net/aggbug.aspx?PostID=7688450\" width=\"1\" height=\"1\"> "
//                    ]
//                },
//                {
//                    "title": "Microsoft Web Farm Framework 2.0 ",
//                    "headlineUrl": "http://weblogs.asp.net/scottgu/archive/2011/01/20/microsoft-web-farm-framework-2-0.aspx",
//                    "publicationDateTimeDescriptor": "Friday, 21 January 2011 12:47 AM GMT",
//                    "reference": {
//                        "type": "atom",
//                        "guid": "<id xmlns=\"http://www.w3.org/2005/Atom\">http://weblogs.asp.net/scottgu/archive/2011/01/20/microsoft-web-farm-framework-2-0.aspx</id>",
//                        "externalUri": "http://weblogs.asp.net/scottgu/archive/2011/01/20/microsoft-web-farm-framework-2-0.aspx"
//                    },
//                    "snippet": [
//                        "<font size=\"2\" face=\"arial\">   <p>The IIS team recently published the Microsoft Web Farm Framework 2.0 release to the web.&#160; You can learn more about it and download the final V2 release of it <a href=\"http://www.iis.net/download/WebFarmFramework\" target=\"_blank\">here</a>.</p>    <h3><u>What is the Web Farm Framework?</u></h3>    <p>The Microsoft Web Farm Framework is a free, fully supported, Microsoft product that enables you to easily provision and mange a farm of web servers.&#160; It enables you to automate the installation and configuration of platform components across the server farm, and enables you to automatically synchronize and deploy ASP.NET applications across them.</p>    <p>It supports integration with load balancers, and enables you to automate updates across your servers so that your site/application is never down or unavailable to customers (it can automatically pull servers one-at-a-time out of the load balancer rotation, update them, and then inject them back into rotation).</p>    <p>A few months ago <a href=\"http://weblogs.asp.net/scottgu/archive/2010/09/08/introducing-the-microsoft-web-farm-framework.aspx\" target=\"_blank\">I posted a tutorial</a> about the Microsoft Web Farm Framework that demonstrates how to configure and use it.&#160; You can read my tutorial about it <a href=\"http://weblogs.asp.net/scottgu/archive/2010/09/08/introducing-the-microsoft-web-farm-framework.aspx\" target=\"_blank\">here</a>. </p>    <h3><u>New Features Added to the Final V2 Release</u></h3>    <p>This week’s RTW release includes several additional features that were not in the previous beta.&#160; They include:</p>    <ul>     <li><strong>Workflow Builder</strong> can be used to define and schedule custom tasks that can be run on all servers in the farm. The tasks can be scheduled to run periodically or can be started manually by an administrator. An example of such task could be a msdeploy command to partially sync web site content. </li>      <li><strong>Windows Credential Store</strong> support enables you to store the administrator credentials used for server provisioning in a secure Windows Credential Store. This enables an added layer of security when dealing with credentials with the Web Farm Framework. </li>      <li><strong>Third party load balancers support</strong> via Web Farm Framework extensibility. It is now possible to configure&#160; the Web Farm Framework to integrate with hardware load balancers instead of relying on the (free) IIS Application Request Routing module. </li>      <li><strong>Improved support for advanced MSDeploy operations</strong>. More MSDeploy features can now be used with the Web Farm Framework for advanced deployment scenarios. </li>      <li><strong>Improved support for syncing large amount of files</strong>. Several issues related to syncing large amounts of files across web farm nodes have been fixed between the beta and today’s release. </li>   </ul>    <p>This week’s release also includes many bug fixes and performance optimizations.</p>    <h3><u>Learning More</u></h3>    <p>Visit the below links to learn more about the Web Farm Framework 2.0 release:</p>    <ul>     <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/09/08/introducing-the-microsoft-web-farm-framework.aspx\" target=\"_blank\">Introducing the Microsoft Web Farm Framework</a> </li>      <li><a href=\"http://www.iis.net/download/WebFarmFramework\" target=\"_blank\">Download the Web Farm Framework V2 Release</a> </li>      <li><a href=\"http://learn.iis.net/page.aspx/905/microsoft-web-farm-framework-20-for-iis-7/\" target=\"_blank\">Read the Web Farm Framework 2.0 Documentation</a> </li>      <li><a href=\"http://forums.iis.net/1167.aspx\" target=\"_blank\">Web Farm Framework Forum</a> (which the team monitors) </li>   </ul>    <h3><u>Summary</u></h3>    <p>The Microsoft Web Farm Framework simplifies the provisioning and deployment of your web server infrastructure – both the servers themselves, as well as the web applications and sites you run on top of them.&#160; </p>    <p>The Web Farm Framework enables a smoother continuous deployment workflow.&#160; It also makes it easy to seamlessly scale your infrastructure by adding servers to it without additional management overhead.&#160; Best of all it is available at no extra cost and works with all editions of Windows Server.</p>    <p>Hope this helps,</p>    <p>Scott</p>    <p>P.S. In addition to blogging, I am also now using Twitter for quick updates and to share links. Follow me at: <a href=\"http://www.twitter.com/scottgu\" target=\"_blank\">twitter.com/scottgu</a></p> </font><img src=\"http://weblogs.asp.net/aggbug.aspx?PostID=7687095\" width=\"1\" height=\"1\"> "
//                    ]
//                },
//                {
//                    "title": "Running an ASP.NET MVC 3 app on a web server that doesn’t have ASP.NET MVC 3 installed ",
//                    "headlineUrl": "http://weblogs.asp.net/scottgu/archive/2011/01/18/running-an-asp-net-mvc-3-app-on-a-web-server-that-doesn-t-have-asp-net-mvc-3-installed.aspx",
//                    "publicationDateTimeDescriptor": "Wednesday, 19 January 2011 1:33 AM GMT",
//                    "reference": {
//                        "type": "atom",
//                        "guid": "<id xmlns=\"http://www.w3.org/2005/Atom\">http://weblogs.asp.net/scottgu/archive/2011/01/18/running-an-asp-net-mvc-3-app-on-a-web-server-that-doesn-t-have-asp-net-mvc-3-installed.aspx</id>",
//                        "externalUri": "http://weblogs.asp.net/scottgu/archive/2011/01/18/running-an-asp-net-mvc-3-app-on-a-web-server-that-doesn-t-have-asp-net-mvc-3-installed.aspx"
//                    },
//                    "snippet": [
//                        "<font size=\"2\" face=\"arial\">   <p>Last week we released <a href=\"http://weblogs.asp.net/scottgu/archive/2011/01/13/announcing-release-of-asp-net-mvc-3-iis-express-sql-ce-4-web-farm-framework-orchard-webmatrix.aspx\" target=\"_blank\">several new web products</a> – including <a href=\"http://weblogs.asp.net/scottgu/archive/2011/01/13/announcing-release-of-asp-net-mvc-3-iis-express-sql-ce-4-web-farm-framework-orchard-webmatrix.aspx\" target=\"_blank\">ASP.NET MVC 3</a>.&#160; We’ve had a bunch of great feedback and a ton of downloads since then.</p>    <p>One question a few people have asked me recently is: “My web hosting provider doesn’t yet support ASP.NET MVC 3 - any idea when they will install it?”</p>    <p>The good news is that you <u>don’t need to wait</u> for them to install anything on their web-servers.&#160; As long as your web hosting provider supports .NET 4, then you can build and deploy ASP.NET MVC 3 applications on it today – without the hosting provider having to do anything to enable it.&#160; The below post describes how you can enable this.</p>    <h3><u>Some Background</u></h3>    <p>We support two ways for you to install and use the assemblies that implement ASP.NET MVC 3 on a machine:</p>    <ol>     <li>Have the ASP.NET MVC 3 assemblies installed in a central place on a machine, and have web projects reference/use the assemblies from there </li>      <li>Copy the ASP.NET MVC 3 assemblies into the \\bin folder of your web project, and have your web project reference/use the assemblies from there </li>   </ol>    <p>The first approach is the default approach we use with Visual Studio, and has the benefit of enabling us to easily service the ASP.NET MVC 3 assemblies using Windows Update (in the event of a bad bug).</p>    <p>The second approach is also fully supported, and has the benefit of not requiring ASP.NET MVC 3 to be explicitly installed on a machine in order for it to be used.&#160; Instead you can just copy/ftp your web application onto a server (with the ASP.NET MVC assemblies contained within the \\bin directory of the application) and it will just work.&#160; You should use this second approach if your web hosting provider hasn’t explicitly installed ASP.NET MVC 3 yet on their servers.</p>    <h3><u>Approach 1: GAC Based Referencing of ASP.NET MVC Assemblies</u></h3>    <p>When you install ASP.NET MVC 3 on a machine, a number of assemblies are automatically registered in the <a href=\"http://en.wikipedia.org/wiki/Global_Assembly_Cache\" target=\"_blank\">GAC</a> (global assembly cache) as part of the installation process.&#160; The GAC provides a central place that .NET assemblies can be installed and serviced (via Windows Update).&#160; Because it provides an easy way for us to update/service assemblies, ASP.NET MVC projects - <em>by default</em> - reference the assemblies that implement ASP.NET MVC 3 from it.&#160; </p>    <p>If you copy a vanilla ASP.NET MVC 3 project – that uses the <em>default approach</em> of referencing the ASP.NET MVC 3 runtime assemblies using the GAC – onto a machine that has not had ASP.NET MVC 3 installed on it, then you will see an error message like below when you run your application:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_64EB2E92.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_2A2385BC.png\" width=\"735\" height=\"301\" /></a> </p>    <p>The above error indicates that one of the assemblies required to run ASP.NET MVC 3 from the GAC cannot be found.&#160; Installing ASP.NET MVC 3 on the machine will fix it and allow your application to be run.</p>    <h3><u>Approach 2: \\Bin Directory Based Referencing of ASP.NET MVC Assemblies</u></h3>    <p>The alternative approach your projects can use is to distribute and reference the ASP.NET MVC 3 runtime assemblies from the \\bin directory of your web application.&#160; The benefit of this approach is that you <u>do not</u> need to explicitly install ASP.NET MVC 3 on a machine in order to run your web application.&#160; Instead, you can just copy/ftp your web application onto an existing .NET 4 server and it will work.&#160; This approach works for both “full trust” and “medium trust” scenarios – which means it will even work with low-cost shared hosting offers.&#160; No addition registration/installation/action is required by the hosting provider in order to enable this.</p>    <p>Enabling your web project to “bin deploy” the ASP.NET MVC 3 assemblies is easy and only takes about 2 minutes to do.&#160; Here are the steps to follow:</p>    <ul>     <li><a href=\"http://drew-prog.blogspot.com/2011/01/how-to-deploy-aspnet-mvc-3-app-to-web.html\" target=\"_blank\">Steps to Deploy an ASP.NET MVC 3 Application to a Web Hosting Provider with \\Bin deployment</a>&#160; </li>   </ul>    <p>Once configured for \\bin based deployment, an application you build with ASP.NET MVC 3 will work on any web server that has .NET 4 installed on it.&#160; Just copy/ftp it up to the web-server and it will run.&#160; You don’t need the hosting provider to do anything to enable it – this is true even for low-cost shared hosting accounts.&#160;&#160; </p>    <h3><u>Finding a ASP.NET Web Hosting Provider</u></h3>    <p>You can browse the <a href=\"http://www.microsoft.com/web/hosting/home\" target=\"_blank\">Windows Web Hosting Gallery</a> to find good ASP.NET based Windows Hosting Providers (all of which support ASP.NET 4):</p>    <p><a href=\"http://www.microsoft.com/web/hosting/home\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_6FC80FDA.png\" width=\"743\" height=\"618\" /></a> </p>    <p>The <a href=\"http://www.microsoft.com/web/hosting/home\" target=\"_blank\">Windows Web Hosting Gallery</a> allows you to filter/browse hosting offers by different countries and service level offerings.&#160; It also allows you to easily filter by “Shared Hosting”, “Virtual Hosting” and “Dedicated Hosting” offers.</p>    <p>“Shared Hosting” refers to an offer where many customers run on a single web-server and you do not have admin access on the remote server.&#160; “Virtual Hosting” offers provide you with your own Virtual Machine image on a remote-server – typically with OS admin rights and remote terminal server access to manage it.&#160; “Dedicated Hosting” offers provide you an entire physical server, and also typically provide OS admin rights and remote terminal support to it.</p>    <p>The prices for Windows based web hosting are now very cost effective, and start from as little as $2.75/month for a shared hosting offer and $23/month for a virtual hosting offer.&#160; All of the above offers are capable of running ASP.NET MVC 3 using the \\bin deployment approach.</p>    <h3><u>Summary</u></h3>    <p>You can deploy ASP.NET MVC 3 based applications to any web-server that has .NET 4 enabled on it – without having to wait for the hosting provider to explicitly install ASP.NET MVC 3 on it.&#160; Simply <a href=\"http://drew-prog.blogspot.com/2011/01/how-to-deploy-aspnet-mvc-3-app-to-web.html\" target=\"_blank\">use the steps above</a> to convert your project to use \\bin based deployment of the ASP.NET MVC 3 assemblies, and then you can copy your application onto any ASP.NET 4 based server and it will just work.</p>    <p>Hope this helps,</p>    <p>Scott</p>    <p><em>P.S.</em> <em>In addition to blogging, I am also now using Twitter for quick updates and to share links. Follow me at: </em><a href=\"http://www.twitter.com/scottgu\">twitter.com/scottgu</a></p> </font><img src=\"http://weblogs.asp.net/aggbug.aspx?PostID=7685905\" width=\"1\" height=\"1\"> "
//                    ]
//                },
//                {
//                    "title": "Announcing release of ASP.NET MVC 3, IIS Express, SQL CE 4, Web Farm Framework, Orchard, WebMatrix ",
//                    "headlineUrl": "http://weblogs.asp.net/scottgu/archive/2011/01/13/announcing-release-of-asp-net-mvc-3-iis-express-sql-ce-4-web-farm-framework-orchard-webmatrix.aspx",
//                    "publicationDateTimeDescriptor": "Thursday, 13 January 2011 1:11 PM GMT",
//                    "reference": {
//                        "type": "atom",
//                        "guid": "<id xmlns=\"http://www.w3.org/2005/Atom\">http://weblogs.asp.net/scottgu/archive/2011/01/13/announcing-release-of-asp-net-mvc-3-iis-express-sql-ce-4-web-farm-framework-orchard-webmatrix.aspx</id>",
//                        "externalUri": "http://weblogs.asp.net/scottgu/archive/2011/01/13/announcing-release-of-asp-net-mvc-3-iis-express-sql-ce-4-web-farm-framework-orchard-webmatrix.aspx"
//                    },
//                    "snippet": [
//                        "<font size=\"2\" face=\"arial\">   <p>I’m excited to announce the release today of several products:</p>    <ul>     <li>ASP.NET MVC 3 </li>      <li>NuGet </li>      <li>IIS Express 7.5 </li>      <li>SQL Server Compact Edition 4 </li>      <li>Web Deploy and Web Farm Framework 2.0 </li>      <li>Orchard 1.0 </li>      <li>WebMatrix 1.0 </li>   </ul>    <p>The above products are all free. They build upon the <a href=\"http://weblogs.asp.net/scottgu/archive/2010/04/12/visual-studio-2010-and-net-4-released.aspx\" target=\"_blank\">.NET 4 and VS 2010</a> release, and add a ton of additional value to ASP.NET (both Web Forms and MVC) and the Microsoft Web Server stack.</p>    <h3><u>ASP.NET MVC 3</u></h3>    <p>Today we are shipping the final release of ASP.NET MVC 3.&#160; You can download and install ASP.NET MVC 3 <a href=\"http://www.microsoft.com/downloads/en/details.aspx?FamilyID=d2928bc1-f48c-4e95-a064-2a455a22c8f6&amp;displaylang=en\" target=\"_blank\">here</a>.&#160; The ASP.NET MVC 3 source code (released under an OSI-compliant open source license) can also optionally be downloaded <a href=\"http://download.microsoft.com/download/3/4/A/34A8A203-BD4B-44A2-AF8B-CA2CFCB311CC/mvc3-rtm-mspl.zip\" target=\"_blank\">here</a>.</p>    <p>ASP.NET MVC 3 is a significant update that brings with it a bunch of great features.&#160; Some of the improvements include:</p>    <p><strong><u>Razor</u></strong> </p>    <p>ASP.NET MVC 3 ships with a new view-engine option called “Razor” (in addition to continuing to support/enhance the existing .aspx view engine).&#160; Razor minimizes the number of characters and keystrokes required when writing a view template, and enables a fast, fluid coding workflow. </p>    <p>Unlike most template syntaxes, with Razor you do not need to interrupt your coding to explicitly denote the start and end of server blocks within your HTML. The Razor parser is smart enough to infer this from your code. This enables a compact and expressive syntax which is clean, fast and fun to type.&#160; </p>    <p>You can learn more about Razor from some of the blog posts I’ve done about it over the last 6 months</p>    <ul>     <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/07/02/introducing-razor.aspx\" target=\"_blank\">Introducing Razor</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/10/19/asp-net-mvc-3-new-model-directive-support-in-razor.aspx\" target=\"_blank\">New @model keyword in Razor</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/10/22/asp-net-mvc-3-layouts.aspx\" target=\"_blank\">Layouts with Razor</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/11/12/asp-net-mvc-3-server-side-comments-with-razor.aspx\">Server-Side Comments with Razor</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/12/15/asp-net-mvc-3-razor-s-and-lt-text-gt-syntax.aspx\" target=\"_blank\">Razor’s @: and &lt;text&gt; syntax</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/12/16/asp-net-mvc-3-implicit-and-explicit-code-nuggets-with-razor.aspx\" target=\"_blank\">Implicit and Explicit code nuggets with Razor</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/12/30/asp-net-mvc-3-layouts-and-sections-with-razor.aspx\" target=\"_blank\">Layouts and Sections with Razor</a> </li>   </ul>    <p>Today’s release supports full code intellisense support for Razor (both VB and C#) with Visual Studio 2010 and the free Visual Web Developer 2010 Express.</p>    <p><strong><u>JavaScript Improvements</u></strong></p>    <p>ASP.NET MVC 3 enables richer JavaScript scenarios and takes advantage of emerging HTML5 capabilities.</p>    <p>The AJAX and Validation helpers in ASP.NET MVC 3 now use an <a href=\"http://www.jeremyskinner.co.uk/2010/12/27/unobtrusive-ajax-helpers-in-mvc3/\" target=\"_blank\">Unobtrusive JavaScript</a> based approach.&#160; Unobtrusive JavaScript avoids injecting inline JavaScript into HTML, and enables cleaner separation of behavior using the new HTML 5 “data-“ attribute convention (which conveniently works on older browsers as well – including IE6). This keeps your HTML tight and clean, and makes it easier to optionally swap out or customize JS libraries.&#160; </p>    <p>ASP.NET MVC 3 now includes built-in support for <a href=\"http://yobriefcase.posterous.com/aspnet-mvc3s-jsonvalueproviderfactory\" target=\"_blank\">posting JSON-based parameters</a> from client-side JavaScript to action methods on the server.&#160; This makes it easier to exchange data across the client and server, and build rich JavaScript front-ends.&#160; We think this capability will be particularly useful going forward with scenarios involving <a href=\"http://weblogs.asp.net/scottgu/archive/2010/05/07/jquery-templates-and-data-linking-and-microsoft-contributing-to-jquery.aspx\">client templates and data binding</a> (including the <a href=\"http://weblogs.asp.net/scottgu/archive/2010/10/04/jquery-templates-data-link-and-globalization-accepted-as-official-jquery-plugins.aspx\" target=\"_blank\">jQuery plugins the ASP.NET team recently contributed</a> to the jQuery project).&#160; </p>    <p>Previous releases of ASP.NET MVC included the core jQuery library.&#160; ASP.NET MVC 3 also now ships the jQuery Validate plugin (which our validation helpers use for client-side validation scenarios).&#160; We are also now shipping and including jQuery UI by default as well (which provides a rich set of client-side JavaScript UI widgets for you to use within projects).</p>    <p><strong><u>Improved Validation</u></strong></p>    <p>ASP.NET MVC 3 includes a bunch of validation enhancements that make it even easier to work with data.</p>    <p>Client-side validation is now enabled by default with ASP.NET MVC 3 (using an onbtrusive javascript implementation).&#160; Today’s release also includes built-in support for <a href=\"http://davidhayden.com/blog/dave/archive/2011/01/04/ASPNETMVC3RemoteValidationTutorial.aspx\" target=\"_blank\">Remote Validation</a> - which enables you to annotate a model class with a validation attribute that causes ASP.NET MVC to perform a remote validation call to a server method when validating input on the client.</p>    <p>The validation features introduced within .NET 4’s System.ComponentModel.DataAnnotations namespace are now supported by ASP.NET MVC 3.&#160; This includes support for the new <a href=\"http://weblogs.asp.net/scottgu/archive/2010/12/10/class-level-model-validation-with-ef-code-first-and-asp-net-mvc-3.aspx\" target=\"_blank\">IValidatableObject interface</a> – which enables you to perform model-level validation, and allows you to provide validation error messages specific to the state of the overall model, or between two properties within the model.&#160; </p>    <p>ASP.NET MVC 3 also supports the improvements made to the ValidationAttribute class in .NET 4.&#160; ValidationAttribute now supports a new IsValid overload that provides more information about the current validation context, such as what object is being validated.&#160; This enables richer scenarios where you can validate the current value based on another property of the model.&#160; We’ve shipped a <a href=\"http://davidhayden.com/blog/dave/archive/2011/01/01/CompareAttributeASPNETMVC3.aspx\" target=\"_blank\">built-in [Compare] validation attribute</a>&#160; with ASP.NET MVC 3 that uses this support and makes it easy out of the box to compare and validate two property values.</p>    <p>You can use any data access API or technology with ASP.NET MVC.&#160; This past year, though, we’ve worked closely with the .NET data team to ensure that the new <a href=\"http://weblogs.asp.net/scottgu/archive/2010/07/16/code-first-development-with-entity-framework-4.aspx\" target=\"_blank\">EF Code First library</a> works really well for ASP.NET MVC applications.&#160; These <a href=\"http://weblogs.asp.net/scottgu/archive/2010/12/08/announcing-entity-framework-code-first-ctp5-release.aspx\" target=\"_blank\">two</a> <a href=\"http://weblogs.asp.net/scottgu/archive/2010/12/10/class-level-model-validation-with-ef-code-first-and-asp-net-mvc-3.aspx\" target=\"_blank\">posts</a> of mine cover the latest EF Code First preview and demonstrates how to use it with ASP.NET MVC 3 to enable easy editing of data (with end to end client+server validation support).&#160; The final release of EF Code First will ship in the next few weeks.</p>    <p>Today we are also publishing the first preview of a new MvcScaffolding project.&#160; It enables you to easily scaffold ASP.NET MVC 3 Controllers and Views, and works great with EF Code-First (and is pluggable to support other data providers).&#160; You can learn more about it – and install it via NuGet today - from <a href=\"http://blog.stevensanderson.com/2011/01/13/scaffold-your-aspnet-mvc-3-project-with-the-mvcscaffolding-package/\" target=\"_blank\">Steve Sanderson’s MvcScaffolding blog post</a>.</p>    <p><strong><u>Output Caching</u></strong></p>    <p>Previous releases of ASP.NET MVC supported output caching content at a URL or action-method level.</p>    <p>With ASP.NET MVC V3 we are also enabling support for partial page output caching – which allows you to easily output cache regions or fragments of a response as opposed to the entire thing.&#160; This ends up being super useful in a lot of scenarios, and enables you to dramatically reduce the work your application does on the server.&#160; </p>    <p>The new partial page output caching support in ASP.NET MVC 3 enables you to easily re-use cached sub-regions/fragments of a page across multiple URLs on a site.&#160; It supports the ability to cache the content either on the web-server, or optionally cache it within a distributed cache server like Windows Server AppFabric or memcached.</p>    <p>I’ll post some tutorials on my blog that show how to take advantage of ASP.NET MVC 3’s new output caching support for partial page scenarios in the future.</p>    <p><strong><u>Better Dependency Injection</u></strong></p>    <p>ASP.NET MVC 3 provides better support for applying Dependency Injection (DI) and integrating with Dependency Injection/IOC containers.</p>    <p>With ASP.NET MVC 3 you no longer need to author custom ControllerFactory classes in order to enable DI with Controllers.&#160; You can instead just register a Dependency Injection framework with ASP.NET MVC 3 and it will resolve dependencies not only for Controllers, but also for Views, Action Filters, Model Binders, Value Providers, Validation Providers, and Model Metadata Providers that you use within your application.</p>    <p>This makes it much easier to cleanly integrate dependency injection within your projects.</p>    <p><strong><u>Other Goodies</u></strong></p>    <p>ASP.NET MVC 3 includes dozens of other nice improvements that help to both reduce the amount of code you write, and make the code you do write cleaner.&#160; Here are just a few examples: </p>    <ul>     <li>Improved New Project dialog that makes it easy to start new ASP.NET MVC 3 projects from templates. </li>      <li>Improved Add-&gt;View Scaffolding support that enables the generation of even cleaner view templates. </li>      <li>New ViewBag property that uses .NET 4’s dynamic support to make it easy to pass late-bound data from Controllers to Views. </li>      <li>Global Filters support that allows specifying cross-cutting filter attributes (like [HandleError]) across all Controllers within an app. </li>      <li>New [AllowHtml] attribute that allows for more granular request validation when binding form posted data to models. </li>      <li>Sessionless controller support that allows fine grained control over whether SessionState is enabled on a Controller. </li>      <li>New ActionResult types like HttpNotFoundResult and <a href=\"http://davidhayden.com/blog/dave/archive/2010/12/29/AspNetMvc3RedirectPermanentSEO.aspx\" target=\"_blank\">RedirectPermanent</a> for common HTTP scenarios. </li>      <li>New Html.Raw() helper to indicate that output should not be HTML encoded. </li>      <li>New Crypto helpers for salting and hashing passwords. </li>      <li>And much, much more… </li>   </ul>    <p><u><strong>Learn More about ASP.NET MVC 3</strong></u></p>    <p>We will be posting lots of tutorials and samples on the <a href=\"http://asp.net/mvc\" target=\"_blank\">http://asp.net/mvc</a> site in the weeks ahead.&#160; Below are two good ASP.NET MVC 3 tutorials available on the site today:</p>    <ul>     <li><a href=\"http://www.asp.net/mvc/tutorials/getting-started-with-mvc3-part1-cs\" target=\"_blank\">Build your First ASP.NET MVC 3 Application</a>: <a href=\"http://www.asp.net/mvc/tutorials/getting-started-with-mvc3-part1-vb \" target=\"_blank\">VB</a> and <a href=\"http://www.asp.net/mvc/tutorials/getting-started-with-mvc3-part1-cs\" target=\"_blank\">C#</a> </li>      <li><a href=\"http://www.asp.net/mvc/tutorials/mvc-music-store-part-1\" target=\"_blank\">Building the ASP.NET MVC 3 Music Store</a> </li>   </ul>    <p>We’ll post additional ASP.NET MVC 3 tutorials and videos on the <a href=\"http://asp.net/mvc\">http://asp.net/mvc</a> site in the future. Visit it regularly to find new tutorials as they are published.</p>    <p><strong><u>How to Upgrade Existing Projects</u></strong></p>    <p>ASP.NET MVC 3 is compatible with ASP.NET MVC 2 – which means it should be easy to update existing MVC projects to ASP.NET MVC 3.&#160; </p>    <p>The new features in ASP.NET MVC 3 build on top of the foundational work we’ve already done with the MVC 1 and MVC 2 releases – which means that the skills, knowledge, libraries, and books you’ve acquired are all directly applicable with the MVC 3 release.&#160; MVC 3 adds new features and capabilities – it doesn’t obsolete existing ones.</p>    <p>You can upgrade existing ASP.NET MVC 2 projects by following the <a href=\"http://go.microsoft.com/fwlink/?LinkID=208140\" target=\"_blank\">manual upgrade steps in the release notes</a>.&#160; Alternatively, you can use this <a href=\"http://blogs.msdn.com/b/marcinon/archive/2011/01/13/mvc-3-project-upgrade-tool.aspx\" target=\"_blank\">automated ASP.NET MVC 3 upgrade tool</a> to easily update your&#160; existing projects.</p>    <p><strong><u>Localized Builds</u></strong></p>    <p>Today’s ASP.NET MVC 3 release is available in English.&#160; We will be releasing localized versions of ASP.NET MVC 3 (in 9 languages) in a few days.&#160; I’ll blog pointers to the localized downloads once they are available. </p>    <h3><u>NuGet</u> </h3>    <p>Today we are also shipping NuGet – a free, open source, package manager that makes it easy for you to find, install, and use open source libraries in your projects. It works with all .NET project types (including ASP.NET Web Forms, ASP.NET MVC, WPF, WinForms, Silverlight, and Class Libraries).&#160; You can download and install it <a href=\"http://nuget.org/\" target=\"_blank\">here</a>.</p>    <p>NuGet enables developers who maintain open source projects (for example, .NET projects like Moq, NHibernate, Ninject, StructureMap, NUnit, Windsor, Raven, Elmah, etc) to package up their libraries and register them with an online gallery/catalog that is searchable.&#160; The client-side NuGet tools – which include full Visual Studio integration – make it trivial for any .NET developer who wants to use one of these libraries to easily find and install it within the project they are working on.</p>    <p>NuGet handles dependency management between libraries (for example: library1 depends on library2). It also makes it easy to update (and optionally remove) libraries from your projects later. It supports updating web.config files (if a package needs configuration settings). It also allows packages to add PowerShell scripts to a project (for example: scaffold commands). Importantly, NuGet is transparent and clean – and does not install anything at the system level. Instead it is focused on making it easy to manage libraries you use with your projects.</p>    <p>Our goal with NuGet is to make it as simple as possible to integrate open source libraries within .NET projects.&#160; </p>    <p><u><strong>NuGet Gallery</strong></u></p>    <p>This week we also launched a beta version of the <a href=\"http://nuget.org\">http://nuget.org</a> web-site – which allows anyone to easily search and browse an online gallery of open source packages available via NuGet.&#160; The site also now allows developers to optionally submit new packages that they wish to share with others.&#160; You can learn more about how to create and share a package <a href=\"http://haacked.com/archive/2011/01/12/uploading-packages-to-the-nuget-gallery.aspx\" target=\"_blank\">here</a>.</p>    <p>There are hundreds of open-source .NET projects already within the <a href=\"http://nuget.org/\" target=\"_blank\">NuGet Gallery</a> today.&#160; We hope to have thousands there in the future.</p>    <h3><u>IIS Express 7.5</u></h3>    <p>Today we are also shipping IIS Express 7.5.&#160; IIS Express is a free version of IIS 7.5 that is optimized for developer scenarios.&#160; It works for both ASP.NET Web Forms and ASP.NET MVC project types.</p>    <p>We think IIS Express combines the ease of use of the ASP.NET Web Server (aka Cassini) currently built-into Visual Studio today with the full power of IIS.&#160; Specifically:</p>    <ul>     <li>It’s lightweight and easy to install (less than 5Mb download and a quick install) </li>      <li>It <u>does not</u> require an administrator account to run/debug applications from Visual Studio </li>      <li>It enables a <u>full web-server feature set</u> – including SSL, URL Rewrite, and other IIS 7.x modules </li>      <li>It supports and enables the same extensibility model and web.config file settings that IIS 7.x support </li>      <li>It can be installed side-by-side with the full IIS web server as well as the ASP.NET Development Server (they do not conflict at all) </li>      <li>It works on Windows XP and higher operating systems – giving you a full IIS 7.x developer feature-set on all Windows OS platforms </li>   </ul>    <p>IIS Express (like the ASP.NET Development Server) can be quickly launched to run a site from a directory on disk.&#160; It <u>does not</u> require any registration/configuration steps. This makes it really easy to launch and run for development scenarios.&#160; You can also optionally redistribute IIS Express with your own applications if you want a lightweight web-server.&#160; The standard IIS Express EULA now includes redistributable rights.</p>    <p>Visual Studio 2010 SP1 adds support for IIS Express.&#160; Read my <a href=\"http://weblogs.asp.net/scottgu/archive/2011/01/03/vs-2010-sp1-beta-and-iis-developer-express.aspx\" target=\"_blank\">VS 2010 SP1 and IIS Express blog post</a> to learn more about what it enables.&#160; </p>    <h3><u>SQL Server Compact Edition 4</u></h3>    <p>Today we are also shipping SQL Server Compact Edition 4 (aka SQL CE 4).&#160; SQL CE is a free, embedded, database engine that enables easy database storage.</p>    <p><u>No Database Installation Required</u></p>    <p>SQL CE <u>does not</u> require you to run a setup or install a database server in order to use it.&#160; You can simply copy the SQL CE binaries into the \\bin directory of your ASP.NET application, and then your web application can use it as a database engine.&#160; No setup or extra security permissions are required for it to run. You do not need to have an administrator account on the machine. Just copy your web application onto any server and it will work. This is true even of medium-trust applications running in a web hosting environment.</p>    <p>SQL CE runs in-memory within your ASP.NET application and will start-up when you first access a SQL CE database, and will automatically shutdown when your application is unloaded.&#160; SQL CE databases are stored as files that live within the \\App_Data folder of your ASP.NET Applications.</p>    <p><u>Works with Existing Data APIs</u></p>    <p>SQL CE 4 works with existing .NET-based data APIs, and supports a SQL Server compatible query syntax.&#160; This means you can use existing data APIs like ADO.NET, as well as use higher-level ORMs like Entity Framework and NHibernate with SQL CE.&#160; This enables you to use the same data programming skills and data APIs you know today.</p>    <p><u>Supports Development, Testing and Production Scenarios</u></p>    <p>SQL CE can be used for development scenarios, testing scenarios, and light production usage scenarios.&#160; With the SQL CE 4 release we’ve done the engineering work to ensure that SQL CE won’t crash or deadlock when used in a multi-threaded server scenario (like ASP.NET).&#160; This is a big change from previous releases of SQL CE – which were designed for client-only scenarios and which explicitly blocked running in web-server environments.&#160; Starting with SQL CE 4 you can use it in a web-server as well.</p>    <p>There are no license restrictions with SQL CE.&#160; It is also totally free.</p>    <p><u>Tooling Support with VS 2010 SP1</u></p>    <p>Visual Studio 2010 SP1 adds support for SQL CE 4 and ASP.NET Projects.&#160; Read my <a href=\"http://weblogs.asp.net/scottgu/archive/2011/01/11/vs-2010-sp1-and-sql-ce.aspx\" target=\"_blank\">VS 2010 SP1 and SQL CE 4 blog post</a> to learn more about what it enables.&#160; </p>    <h3><u>Web Deploy and Web Farm Framework 2.0</u></h3>    <p>Today we are also releasing Microsoft Web Deploy V2 and Microsoft Web Farm Framework V2.&#160; These services provide a flexible and powerful way to deploy ASP.NET applications onto either a single server, or across a web farm of machines.</p>    <p>You can learn more about these capabilities from my previous blog posts on them:</p>    <ul>     <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/09/08/introducing-the-microsoft-web-farm-framework.aspx\" target=\"_blank\">Introducing the Microsoft Web Farm Framework</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/09/13/automating-deployment-with-microsoft-web-deploy.aspx\" target=\"_blank\">Automating Deployment with Microsoft Web Deploy</a> </li>   </ul>    <p>Visit the <a href=\"http://iis.net\" target=\"_blank\">http://iis.net</a> website to learn more and install them. Both are free.</p>    <h3><u>Orchard 1.0</u></h3>    <p>Today we are also releasing Orchard v1.0.&#160; </p>    <p>Orchard is a free, open source, community based project.&#160; It provides Content Management System (CMS) and Blogging System support out of the box, and makes it possible to easily create and manage web-sites without having to write code (site owners can customize a site through the browser-based editing tools built-into Orchard).&#160; <a href=\"http://www.orchardproject.net/docs/\" target=\"_blank\">Read these tutorials</a> to learn more about how you can setup and manage your own Orchard site.</p>    <p>Orchard itself is built as an ASP.NET MVC 3 application using Razor view templates (and by default uses SQL CE 4 for data storage).&#160; Developers wishing to extend an Orchard site with custom functionality can open and edit it as a Visual Studio project – and add new ASP.NET MVC Controllers/Views to it.&#160; </p>    <h3><u>WebMatrix 1.0</u></h3>    <p>WebMatrix is a new, free, web development tool from Microsoft that provides a suite of technologies that make it easier to enable website development.&#160; It enables a developer to start a new site by browsing and downloading an app template from an online gallery of web applications (which includes popular apps like Umbraco, DotNetNuke, Orchard, WordPress, Drupal and Joomla).&#160; Alternatively it also enables developers to create and code web sites from scratch.</p>    <p>WebMatrix is task focused and helps guide developers as they work on sites.&#160; WebMatrix includes IIS Express, SQL CE 4, and ASP.NET - providing an integrated web-server, database and programming framework combination.&#160; It also includes built-in web publishing support which makes it easy to find and deploy sites to web hosting providers.</p>    <p>You can learn more about WebMatrix from my <a href=\"http://weblogs.asp.net/scottgu/archive/2010/07/06/introducing-webmatrix.aspx\" target=\"_blank\">Introducing WebMatrix blog post</a> this summer.&#160; Visit <a href=\"http://microsoft.com/web\" target=\"_blank\">http://microsoft.com/web</a> to download and install it today.</p>    <h3><u>Summary</u></h3>    <p>I’m really excited about today’s releases – they provide a bunch of additional value that makes web development with ASP.NET, Visual Studio and the Microsoft Web Server a lot better.&#160; </p>    <p>A lot of folks worked hard to share this with you today. On behalf of my whole team – we hope you enjoy them!</p>    <p>Scott</p>    <p><em>P.S.</em> <em>In addition to blogging, I am also now using Twitter for quick updates and to share links. Follow me at: </em><a href=\"http://www.twitter.com/scottgu\">twitter.com/scottgu</a></p> </font><img src=\"http://weblogs.asp.net/aggbug.aspx?PostID=7681992\" width=\"1\" height=\"1\"> "
//                    ]
//                },
//                {
//                    "title": "VS 2010 SP1 and SQL CE ",
//                    "headlineUrl": "http://weblogs.asp.net/scottgu/archive/2011/01/11/vs-2010-sp1-and-sql-ce.aspx",
//                    "publicationDateTimeDescriptor": "Wednesday, 12 January 2011 2:10 AM GMT",
//                    "reference": {
//                        "type": "atom",
//                        "guid": "<id xmlns=\"http://www.w3.org/2005/Atom\">http://weblogs.asp.net/scottgu/archive/2011/01/11/vs-2010-sp1-and-sql-ce.aspx</id>",
//                        "externalUri": "http://weblogs.asp.net/scottgu/archive/2011/01/11/vs-2010-sp1-and-sql-ce.aspx"
//                    },
//                    "snippet": [
//                        "<font size=\"2\" face=\"arial\">   <p>Last month we <a href=\"http://blogs.msdn.com/b/jasonz/archive/2010/12/07/announcing-visual-studio-2010-service-pack-1-beta.aspx\" target=\"_blank\">released</a> the Beta of VS 2010 Service Pack 1 (SP1).&#160; You can learn more about the VS 2010 SP1 Beta from Jason Zander’s <a href=\"http://blogs.msdn.com/b/jasonz/archive/2010/12/07/announcing-visual-studio-2010-service-pack-1-beta.aspx\" target=\"_blank\">two</a> <a href=\"http://blogs.msdn.com/b/jasonz/archive/2010/12/20/visual-studio-2010-service-pack-1-beta-feedback.aspx\" target=\"_blank\">blog posts</a> about it, and from Scott Hanselman’s <a href=\"http://www.hanselman.com/blog/CommentView.aspx?guid=b1fec575-9744-48df-8778-fc533eb3a0a4\" target=\"_blank\">blog post</a> that covers some of the new capabilities enabled with it.&#160;&#160; You can download and install the VS 2010 SP1 Beta <a href=\"http://www.microsoft.com/downloads/en/details.aspx?FamilyID=11ea69cb-cf12-4842-a3d7-b32a1e5642e2&amp;displaylang=en\" target=\"_blank\">here</a>.</p>    <p>Last week <a href=\"http://weblogs.asp.net/scottgu/archive/2011/01/03/vs-2010-sp1-beta-and-iis-developer-express.aspx\" target=\"_blank\">I blogged</a> about the new <a href=\"http://weblogs.asp.net/scottgu/archive/2011/01/03/vs-2010-sp1-beta-and-iis-developer-express.aspx\" target=\"_blank\">Visual Studio support for IIS Express</a> that we are adding with VS 2010 SP1. In today’s post I’m going to talk about the new VS 2010 SP1 tooling support for SQL CE, and walkthrough some of the cool scenarios it enables.&#160; </p>    <h3><u>SQL CE – What is it and why should you care?</u></h3>    <p>SQL CE is a free, embedded, database engine that enables easy database storage.</p>    <p><u>No Database Installation Required</u></p>    <p>SQL CE <u>does not</u> require you to run a setup or install a database server in order to use it.&#160; You can simply copy the SQL CE binaries into the \\bin directory of your ASP.NET application, and then your web application can use it as a database engine.&#160; No setup or extra security permissions are required for it to run. You do not need to have an administrator account on the machine. Just copy your web application onto any server and it will work. This is true even of medium-trust applications running in a web hosting environment. </p>    <p>SQL CE runs in-memory within your ASP.NET application and will start-up when you first access a SQL CE database, and will automatically shutdown when your application is unloaded.&#160; SQL CE databases are stored as files that live within the \\App_Data folder of your ASP.NET Applications.</p>    <p><u>Works with Existing Data APIs</u></p>    <p>SQL CE 4 works with existing .NET-based data APIs, and supports a SQL Server compatible query syntax.&#160; This means you can use existing data APIs like ADO.NET, as well as use higher-level ORMs like Entity Framework and NHibernate with SQL CE.&#160; This enables you to use the same data programming skills and data APIs you know today.</p>    <p><u>Supports Development, Testing and Production Scenarios</u></p>    <p>SQL CE can be used for development scenarios, testing scenarios, and light production usage scenarios.&#160; With the SQL CE 4 release we’ve done the engineering work to ensure that SQL CE won’t crash or deadlock when used in a multi-threaded server scenario (like ASP.NET).&#160; This is a big change from previous releases of SQL CE – which were designed for client-only scenarios and which explicitly blocked running in web-server environments.&#160; Starting with SQL CE 4 you can use it in a web-server as well. </p>    <p>There are no license restrictions with SQL CE.&#160; It is also totally free.</p>    <p><u>Easy Migration to SQL Server</u></p>    <p>SQL CE is an embedded database – which makes it ideal for development, testing, and light-usage scenarios.&#160; For high-volume sites and applications you’ll probably want to migrate your database to use SQL Server Express (which is free), SQL Server or SQL Azure.&#160; These servers enable much better scalability, more development features (including features like Stored Procedures – which aren’t supported with SQL CE), as well as more advanced data management capabilities.</p>    <p>We’ll ship migration tools that enable you to optionally take SQL CE databases and easily upgrade them to use SQL Server Express, SQL Server, or SQL Azure.&#160; You will not need to change your code when upgrading a SQL CE database to SQL Server or SQL Azure.&#160; Our goal is to enable you to be able to simply change the database connection string in your web.config file and have your application just work.</p>    <h3><u>New Tooling Support for SQL CE in VS 2010 SP1</u></h3>    <p>VS 2010 SP1 includes much improved tooling support for SQL CE, and adds support for using SQL CE within ASP.NET projects for the first time.&#160; With VS 2010 SP1 you can now:</p>    <ul>     <li>Create new SQL CE Databases </li>      <li>Edit and Modify SQL CE Database Schema and Indexes </li>      <li>Populate SQL CE Databases within Data </li>      <li>Use the Entity Framework (EF) designer to create model layers against SQL CE databases </li>      <li>Use EF Code First to define model layers in code, then create a SQL CE database from them, and optionally edit the DB with VS </li>      <li>Deploy SQL CE databases to remote servers using Web Deploy and optionally convert them to full SQL Server databases </li>   </ul>    <p>You can take advantage of all of the above features from within both ASP.NET Web Forms and ASP.NET MVC based projects.</p>    <h3><u>Download</u></h3>    <p>You can enable SQL CE tooling support within VS 2010 by first <a href=\"http://www.microsoft.com/downloads/en/details.aspx?FamilyID=11ea69cb-cf12-4842-a3d7-b32a1e5642e2&amp;displaylang=en\" target=\"_blank\">installing VS 2010 SP1 (beta)</a>.</p>    <p>Once SP1 is installed, you’ll also then need to install the <a href=\"http://go.microsoft.com/fwlink/?LinkID=206994\" target=\"_blank\">SQL CE Tools for Visual Studio download</a>.&#160; This is a separate download that enables the SQL CE tooling support for VS 2010 SP1.</p>    <h3><u>Walkthrough of Two Scenarios</u></h3>    <p>In this blog post I’m going to walkthrough how you can take advantage of SQL CE and VS 2010 SP1 using both an ASP.NET Web Forms and an ASP.NET MVC based application. Specifically, we’ll walkthrough:</p>    <ul>     <li>How to create a SQL CE database using VS 2010 SP1, then use the EF4 visual designers in Visual Studio to construct a model layer from it, and then display and edit the data using an ASP.NET GridView control. </li>   </ul>    <ul>     <li>How to use an EF Code First approach to define a model layer using POCO classes and then have EF Code-First “auto-create” a SQL CE database for us based on our model classes.&#160; We’ll then look at how we can use the new VS 2010 SP1 support for SQL CE to inspect the database that was created, populate it with data, and later make schema changes to it.&#160; We’ll do all this within the context of an ASP.NET MVC based application. </li>   </ul>    <p>You can follow the two walkthroughs below on your own machine by <a href=\"http://www.microsoft.com/downloads/en/details.aspx?FamilyID=11ea69cb-cf12-4842-a3d7-b32a1e5642e2&amp;displaylang=en\" target=\"_blank\">installing VS 2010 SP1 (beta)</a> and then installing the <a href=\"http://go.microsoft.com/fwlink/?LinkID=206994\">SQL CE Tools for Visual Studio download</a> (which is a separate download that enables SQL CE tooling support for VS 2010 SP1).</p>    <h3><u>Walkthrough 1: Create a SQL CE Database, Create EF Model Classes, Edit the Data with a GridView</u></h3>    <p>This first walkthrough will demonstrate how to create and define a SQL CE database within an ASP.NET Web Form application.&#160; We’ll then build an EF model layer for it and use that model layer to enable data editing scenarios with an &lt;asp:GridView&gt; control.</p>    <p><u>Step 1: Create a new ASP.NET Web Forms Project</u></p>    <p>We’ll begin by using the File-&gt;New Project menu command within Visual Studio to create a new ASP.NET Web Forms project.&#160; We’ll use the “ASP.NET Web Application” project template option so that it has a default UI skin implemented:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_284087B6.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_386C4FAF.png\" width=\"707\" height=\"441\" /></a> </p>    <p><u>Step 2: Create a SQL CE Database</u></p>    <p>Right click on the “App_Data” folder within the created project and choose the “Add-&gt;New Item” menu command:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_6C344600.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_364F50E6.png\" width=\"240\" height=\"321\" /></a> </p>    <p>This will bring up the “Add Item” dialog box.&#160; Select the “SQL Server Compact 4.0 Local Database” item (new in VS 2010 SP1) and name the database file to create “Store.sdf”:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_4A686D6F.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_27C42EF4.png\" width=\"780\" height=\"441\" /></a> </p>    <p><em>Note that SQL CE database files have a .sdf filename extension. Place them within the /App_Data folder of your ASP.NET application to enable easy deployment.</em></p>    <p>When we clicked the “Add” button above a Store.sdf file was added to our project:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_4C091376.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_16241E5C.png\" width=\"195\" height=\"332\" /></a> </p>    <p><u>Step 3: Adding a “Products” Table</u></p>    <p>Double-clicking the “Store.sdf” database file will open it up within the Server Explorer tab.&#160; Since it is a new database there are no tables within it:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_2A3D3AE5.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_14735288.png\" width=\"233\" height=\"279\" /></a> </p>    <p>Right click on the “Tables” icon and choose the “Create Table” menu command to create a new database table.&#160; We’ll name the new table “Products” and add 4 columns to it.&#160; We’ll mark the first column as a primary key (and make it an identify column so that its value will automatically increment with each new row):</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_288C6F11.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_3271607C.png\" width=\"816\" height=\"672\" /></a> </p>    <p>When we click “ok” our new Products table will be created in the SQL CE database.</p>    <p><u>Step 4: Populate with Data</u></p>    <p>Once our Products table is created it will show up within the Server Explorer.&#160; We can right-click it and choose the “Show Table Data” menu command to edit its data:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_4A2897E2.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_6F45E24E.png\" width=\"487\" height=\"414\" /></a> </p>    <p>Let’s add a few sample rows of data to it:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_7C3FC25F.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_722B2134.png\" width=\"768\" height=\"361\" /></a> </p>    <p><u>Step 5: Create an EF Model Layer</u></p>    <p>We have a SQL CE database with some data in it – let’s now create an EF Model Layer that will provide a way for us to easily query and update data within it.</p>    <p>Let’s right-click on our project and choose the “Add-&gt;New Item” menu command.&#160; This will bring up the “Add New Item” dialog – select the “ADO.NET Entity Data Model” item within it and name it “Store.edmx”</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_1E67A819.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_5ACFF6F6.png\" width=\"806\" height=\"450\" /></a> </p>    <p>This will add a new Store.edmx item to our solution explorer and launch a wizard that allows us to quickly create an EF model:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_60AA9A8F.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_3F4AF4F3.png\" width=\"627\" height=\"558\" /></a> </p>    <p>Select the “Generate From Database” option above and click next.&#160; Choose to use the Store.sdf SQL CE database we just created and then click next again.&#160; </p>    <p>The wizard will then ask you what database objects you want to import into your model.&#160; Let’s choose to import the “Products” table we created earlier:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_36E71F9C.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_4E9E5702.png\" width=\"627\" height=\"558\" /></a> </p>    <p>When we click the “Finish” button Visual Studio will open up the EF designer.&#160; It will have a Product entity already on it that maps to the “Products” table within our SQL CE database:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_1F6C6B6B.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_19B151C5.png\" width=\"702\" height=\"450\" /></a> </p>    <p>The VS 2010 SP1 EF designer works exactly the same with SQL CE as it does already with SQL Server and SQL Express.&#160; The Product entity above will be persisted as a class (called “Product”) that we can programmatically work against within our ASP.NET application.</p>    <p><u>Step 6: Compile the Project</u></p>    <p>Before using your model layer you’ll need to build your project.&#160; Do a Ctrl+Shift+B to compile the project, or use the Build-&gt;Build Solution menu command.</p>    <p><u>Step 7: Create a Page that Uses our EF Model Layer</u></p>    <p>Let’s now create a simple ASP.NET Web Form that contains a GridView control that we can use to display and edit the our Products data (via the EF Model Layer we just created).</p>    <p>Right-click on the project and choose the Add-&gt;New Item command.&#160; Select the “Web Form from Master Page” item template, and name the page you create “Products.aspx”.&#160; Base the master page on the “Site.Master” template that is in the root of the project.</p>    <p>Add an &lt;h2&gt;Products&lt;/h2&gt; heading the new Page, and add an &lt;asp:gridview&gt; control within it:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_23964330.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_2D2E8B99.png\" width=\"751\" height=\"466\" /></a> </p>    <p>Then click the “Design” tab to switch into design-view. Select the GridView control, and then click the top-right corner to display the GridView’s “Smart Tasks” UI:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_2BE9F2BA.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_14DB717E.png\" width=\"784\" height=\"568\" /></a> </p>    <p>Choose the “New data source…” drop down option above.&#160; This will bring up the below dialog which allows you to pick your Data Source type:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_1396D89F.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_2743C233.png\" width=\"752\" height=\"560\" /></a> </p>    <p>Select the “Entity” data source option – which will allow us to easily connect our GridView to the EF model layer we created earlier.&#160; This will bring up another dialog that allows us to pick our model layer:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_0E18422E.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_6A2F6AD3.png\" width=\"699\" height=\"564\" /></a> </p>    <p>Select the “StoreEntities” option in the dropdown – which is the EF model layer we created earlier.&#160; Then click next – which will allow us to pick which entity within it we want to bind to:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_4FEF01AF.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_0D2FB677.png\" width=\"699\" height=\"564\" /></a> </p>    <p>Select the “Products” entity in the above dialog – which indicates that we want to bind against the “Product” entity class we defined earlier.&#160; Then click the “Enable automatic updates” checkbox to ensure that we can both query and update Products.&#160; When you click “Finish” VS will wire-up an &lt;asp:EntityDataSource&gt; to your &lt;asp:GridView&gt; control:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_72EF4D52.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_1D7B0863.png\" width=\"696\" height=\"461\" /></a> </p>    <p>The last two steps we’ll do will be to click the “Enable Editing” checkbox on the Grid (which will cause the Grid to display an “Edit” link on each row) and (optionally) use the Auto Format dialog to pick a UI template for the Grid.</p>    <p><u>Step 8: Run the Application</u></p>    <p>Let’s now run our application and browse to the /Products.aspx page that contains our GridView.&#160; When we do so we’ll see a Grid UI of the Products within our SQL CE database. Clicking the “Edit” link for any of the rows will allow us to edit their values:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_477B068B.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_2211131D.png\" width=\"748\" height=\"411\" /></a> </p>    <p>When we click “Update” the GridView will post back the values, persist them through our EF Model Layer, and ultimately save them within our SQL CE database.</p>    <p><u>Learn More about using EF with ASP.NET Web Forms</u></p>    <p><a href=\"http://www.asp.net/entity-framework/tutorials/the-entity-framework-and-aspnet-%E2%80%93-getting-started-part-1\" target=\"_blank\">Read this tutorial series</a> on the <a href=\"http://www.asp.net/entity-framework/tutorials/the-entity-framework-and-aspnet-%E2%80%93-getting-started-part-1\">http://asp.net</a> site to learn more about how to use EF with ASP.NET Web Forms.&#160; </p>    <p>The tutorial series uses SQL Express as the database – but the nice thing is that all of the same steps/concepts can also now also be done with SQL CE.&#160;&#160; </p>    <h3><u>Walkthrough 2: Using EF Code-First with SQL CE and ASP.NET MVC 3</u></h3>    <p>We used a database-first approach with the sample above – where we first created the database, and then used the EF designer to create model classes from the database.&#160; </p>    <p>In addition to supporting a designer-based development workflow, EF also enables a more <em>code-centric</em> option which we call “code first development”.&#160; Code-First Development enables a pretty sweet development workflow.&#160; It enables you to:</p>    <ul>     <li>Define your model objects by simply writing “plain old classes” with no base classes or visual designer required </li>      <li>Use a “convention over configuration” approach that enables database persistence without explicitly configuring anything </li>      <li>Optionally override the convention-based persistence and use a fluent code API to fully customize the persistence mapping </li>      <li>Optionally auto-create a database based on the model classes you define – allowing you to start from code first </li>   </ul>    <p>I’ve done <a href=\"http://weblogs.asp.net/scottgu/archive/2010/07/16/code-first-development-with-entity-framework-4.aspx\">several</a> <a href=\"http://weblogs.asp.net/scottgu/archive/2010/07/23/entity-framework-4-code-first-custom-database-schema-mapping.aspx\">blog</a> <a href=\"http://weblogs.asp.net/scottgu/archive/2010/08/03/using-ef-code-first-with-an-existing-database.aspx\">posts</a> <a href=\"http://weblogs.asp.net/scottgu/archive/2010/12/08/announcing-entity-framework-code-first-ctp5-release.aspx\">about</a> <a href=\"http://weblogs.asp.net/scottgu/archive/2010/12/10/class-level-model-validation-with-ef-code-first-and-asp-net-mvc-3.aspx\">EF Code First</a> in the past – I really think it is great.&#160; The good news is that it also works very well with SQL CE.</p>    <p>The combination of SQL CE, EF Code First, and the new VS tooling support for SQL CE, enables a pretty nice workflow.&#160; Below is a simple example of how you can use them to build a simple ASP.NET MVC 3 application.</p>    <p><u>Step 1: Create a new ASP.NET MVC 3 Project</u></p>    <p>We’ll begin by using the File-&gt;New Project menu command within Visual Studio to create a new ASP.NET MVC 3 project.&#160; We’ll use the “Internet Project” template so that it has a default UI skin implemented:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_22B9C947.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_26776E17.png\" width=\"662\" height=\"383\" /></a> </p>    <p><u>Step 2: Use NuGet to Install EFCodeFirst</u></p>    <p>Next we’ll use the NuGet package manager (automatically installed by ASP.NET MVC 3) to add the EFCodeFirst library to our project.&#160; We’ll use the Package Manager command shell to do this.&#160; Bring up the package manager console within Visual Studio by selecting the View-&gt;Other Windows-&gt;Package Manager Console menu command.&#160; Then type:</p>    <blockquote>     <p>install-package EFCodeFirst </p>   </blockquote>    <p>within the package manager console to download the EFCodeFirst library and have it be added to our project:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_295CACFD.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_2CAE1ED8.png\" width=\"675\" height=\"148\" /></a> </p>    <p>When we enter the above command, the EFCodeFirst library will be downloaded and added to our application:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_488F2E03.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_0C16B959.png\" width=\"271\" height=\"319\" /></a> </p>    <p><u>Step 3: Build Some Model Classes</u></p>    <p>Using a “code first” based development workflow, we will create our model classes first (even before we have a database).&#160; We create these model classes by writing code.</p>    <p>For this sample, we will right click on the “Models” folder of our project and add the below three classes to our project:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_6D1095BA.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_72FE8749.png\" width=\"476\" height=\"517\" /></a> </p>    <p>The “Dinner” and “RSVP” model classes above are “plain old CLR objects” (aka POCO).&#160; They <u>do not</u> need to derive from any base classes or implement any interfaces, and the properties they expose are standard .NET data-types.&#160; No data persistence attributes or data code has been added to them.&#160;&#160; </p>    <p>The “NerdDinners” class derives from the DbContext class (which is supplied by EFCodeFirst) and handles the retrieval/persistence of our Dinner and RSVP instances from a database.</p>    <p><u>Step 4: Listing Dinners</u></p>    <p>We’ve written all of the code necessary to implement our model layer for this simple project.&#160; </p>    <p>Let’s now expose and implement the URL: <em>/Dinners/Upcoming</em> within our project.&#160; We’ll use it to list upcoming dinners that happen in the future.</p>    <p>We’ll do this by right-clicking on our “Controllers” folder and select the “Add-&gt;Controller” menu command.&#160; We’ll name the Controller we want to create “DinnersController”.&#160; We’ll then implement an “Upcoming” action method within it that lists upcoming dinners using our model layer above.&#160; We will use a LINQ query to retrieve the data and pass it to a View to render with the code below:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_714DBB75.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_7075558B.png\" width=\"441\" height=\"294\" /></a> </p>    <p>We’ll then right-click within our Upcoming method and choose the “Add-View” menu command to create an “Upcoming” view template that displays our dinners.&#160; We’ll use the “empty” template option within the “Add View” dialog and write the below view template using Razor:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_41AF9CE9.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_55C8B972.png\" width=\"426\" height=\"250\" /></a> </p>    <p><u>Step 4: Configure our Project to use a SQL CE Database</u></p>    <p>We have finished writing all of our code – our last step will be to configure a database connection-string to use.</p>    <p>We will point our NerdDinners model class to a SQL CE database by adding the below &lt;connectionString&gt; to the web.config file at the top of our project:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_7915AE17.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_7F5C84A5.png\" width=\"530\" height=\"162\" /></a> </p>    <p>EF Code First uses a default convention where context classes will look for a connection-string that matches the DbContext class name.&#160; Because we created a “NerdDinners” class earlier, we’ve also named our connectionstring “NerdDinners”.&#160; Above we are configuring our connection-string to use SQL CE as the database, and telling it that our SQL CE database file will live within the \\App_Data directory of our ASP.NET project.</p>    <p><u>Step 5: Running our Application</u></p>    <p>Now that we’ve built our application, let’s run it!</p>    <p>We’ll browse to the <em>/Dinners/Upcoming</em> URL – doing so will display an empty list of upcoming dinners:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_6BCF2504.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_3173AF23.png\" width=\"729\" height=\"356\" /></a> </p>    <p>You might ask – but where did it query to get the dinners from? We didn’t explicitly create a database?!?</p>    <p>One of the cool features that EF Code-First supports is the ability to automatically create a database (based on the schema of our model classes) when the database we point it at doesn’t exist.&#160; Above we configured&#160; EF Code-First to point at a SQL CE database in the \\App_Data\\ directory of our project.&#160; When we ran our application, EF Code-First saw that the SQL CE database didn’t exist and automatically created it for us.</p>    <p><u>Step 6: Using VS 2010 SP1 to Explore our newly created SQL CE Database</u></p>    <p>Click the “Show all Files” icon within the Solution Explorer and you’ll see the “NerdDinners.sdf” SQL CE database file that was automatically created for us by EF code-first within the \\App_Data\\ folder:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_28A3A6D7.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_79DDEE34.png\" width=\"248\" height=\"257\" /></a> </p>    <p>We can optionally right-click on the file and “Include in Project&quot; to add it to our solution:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_06D7CE46.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_09BD0D2C.png\" width=\"470\" height=\"390\" /></a> </p>    <p>We can also double-click the file (regardless of whether it is added to the project) and VS 2010 SP1 will open it as a database we can edit within the “Server Explorer” tab of the IDE.</p>    <p>Below is the view we get when we double-click our NerdDinners.sdf SQL CE file.&#160; We can drill in to see the schema of the Dinners and RSVPs tables in the tree explorer.&#160; </p>    <p>Notice how two tables - Dinners and RSVPs – were automatically created for us within our SQL CE database.&#160; This was done by EF Code First when we accessed the NerdDinners class by running our application above:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_0E8F9B1B.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_0697F8B9.png\" width=\"249\" height=\"379\" /></a> </p>    <p>We can right-click on a Table and use the “Show Table Data” command to enter some upcoming dinners in our database:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_1325A5D5.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_58CA2FF3.png\" width=\"421\" height=\"378\" /></a> </p>    <p>We’ll use the built-in editor that VS 2010 SP1 supports to populate our table data below:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_17BBB08F.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_3F9EAFEE.png\" width=\"705\" height=\"236\" /></a> </p>    <p>And now when we hit “refresh” on the /Dinners/Upcoming URL within our browser we’ll see some upcoming dinners show up:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_45795387.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_123D1A1E.png\" width=\"726\" height=\"418\" /></a> </p>    <p><u>Step 7: Changing our Model and Database Schema</u></p>    <p>Let’s now modify the schema of our model layer and database, and walkthrough one way that the new VS 2010 SP1 Tooling support for SQL CE can make this easier.&#160; </p>    <p>With EF Code-First you typically start making database changes by modifying the model classes.&#160; For example, let’s add an additional string property called “UrlLink” to our “Dinner” class.&#160; We’ll use this to point to a link for more information about the event: <a href=\"http://weblogs.asp.net/blogs/scottgu/image_630B2E86.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_6232C89C.png\" width=\"487\" height=\"228\" /></a> </p>    <p>Now when we re-run our project, and visit the /Dinners/Upcoming URL we’ll see an error thrown:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_39B3E688.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_14F2A944.png\" width=\"611\" height=\"429\" /></a> </p>    <p>We are seeing this error because EF Code-First automatically created our database, and by default when it does this it adds a table that helps tracks whether the schema of our database is in sync with our model classes.&#160; EF Code-First helpfully throws an error when they become out of sync – making it easier to track down issues at development time that you might otherwise only find (via obscure errors) at runtime.&#160; Note that if you do not want this feature you can turn it off by changing the default conventions of your DbContext class (in this case our NerdDinners class) to not track the schema version.</p>    <p>Our model classes and database schema are out of sync in the above example – so how do we fix this?&#160; There are two approaches you can use today:</p>    <ul>     <li>Delete the database and have EF Code First automatically re-create the database based on the new model class schema (losing the data within the existing DB) </li>      <li>Modify the schema of the existing database to make it in sync with the model classes (keeping/migrating the data within the existing DB) </li>   </ul>    <p>There are a couple of ways you can do the second approach above.&#160; Below I’m going to show how you can take advantage of the new VS 2010 SP1 Tooling support for SQL CE to use a database schema tool to modify our database structure.&#160; We are also going to be supporting a “migrations” feature with EF in the future that will allow you to automate/script database schema migrations programmatically.</p>    <p><u>Step 8: Modify our SQL CE Database Schema using VS 2010 SP1</u></p>    <p>The new SQL CE Tooling support within VS 2010 SP1 makes it easy to modify the schema of our existing SQL CE database.&#160; To do this we’ll right-click on our “Dinners” table and choose the “Edit Table Schema” command:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_1439CD4D.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_36422913.png\" width=\"437\" height=\"357\" /></a> </p>    <p>This will bring up the below “Edit Table” dialog.&#160; We can rename, change or delete any of the existing columns in our table, or click at the bottom of the column listing and type to add a new column.&#160; Below I’ve added a new “UrlLink” column of type “nvarchar” (since our property is a string):</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_0A252C22.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_6714BAB1.png\" width=\"770\" height=\"634\" /></a> </p>    <p>When we click ok our database will be updated to have the new column and our schema will now match our model classes.</p>    <p>Because we are manually modifying our database schema, there is one additional step we need to take to let EF Code-First know that the database schema is in sync with our model classes.&#160; As i mentioned earlier, when a database is automatically created by EF Code-First it adds a “EdmMetadata” table to the database to track schema versions (and hash our model classes against them to detect mismatches between our model classes and the database schema):</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_259A0858.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_2A9C4607.png\" width=\"255\" height=\"341\" /></a> </p>    <p>Since we are manually updating and maintaining our database schema, we don’t need this table – and can just delete it:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_22A4A3A5.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_138DC4CB.png\" width=\"457\" height=\"345\" /></a> </p>    <p>This will leave us with just the two tables that correspond to our model classes:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_4A1B700F.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_7DE36660.png\" width=\"261\" height=\"220\" /></a> </p>    <p>And now when we re-run our /Dinners/Upcoming URL it will display the dinners correctly:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_5C178DCF.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_53B3B878.png\" width=\"728\" height=\"420\" /></a> </p>    <p>One last touch we could do would be to update our view to check for the new UrlLink property and render a &lt;a&gt; link to it if an event has one:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_526F1F99.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_7E3F7388.png\" width=\"692\" height=\"480\" /></a> </p>    <p>And now when we refresh our /Dinners/Upcoming we will see hyperlinks for the events that have a UrlLink stored in the database:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_66C4BF57.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_7A71A8EB.png\" width=\"728\" height=\"420\" /></a> </p>    <h3><u>Summary</u></h3>    <p>SQL CE provides a free, embedded, database engine that you can use to easily enable database storage.&#160; With SQL CE 4 you can now take advantage of it within ASP.NET projects and applications (both Web Forms and MVC).</p>    <p>VS 2010 SP1 provides tooling support that enables you to easily create, edit and modify SQL CE databases – as well as use the standard EF designer against them.&#160; This allows you to re-use your existing skills and data knowledge while taking advantage of an embedded database option.&#160; This is useful both for small applications (where you don’t need the scalability of a full SQL Server), as well as for development and testing scenarios – where you want to be able to rapidly develop/test your application without having a full database instance.&#160; </p>    <p>SQL CE makes it easy to later migrate your data to a full SQL Server or SQL Azure instance if you want to – without having to change any code in your application.&#160; All we would need to change in the above two scenarios is the &lt;connectionString&gt; value within the web.config file in order to have our code run against a full SQL Server.&#160; This provides the flexibility to scale up your application starting from a small embedded database solution as needed.</p>    <p>Hope this helps,</p>    <p>Scott</p>    <p><em>P.S.</em> <em>In addition to blogging, I am also now using Twitter for quick updates and to share links. Follow me at: </em><a href=\"http://www.twitter.com/scottgu\">twitter.com/scottgu</a></p> </font><img src=\"http://weblogs.asp.net/aggbug.aspx?PostID=7680886\" width=\"1\" height=\"1\"> "
//                    ]
//                },
//                {
//                    "title": "VS 2010 SP1 (Beta) and IIS Express ",
//                    "headlineUrl": "http://weblogs.asp.net/scottgu/archive/2011/01/03/vs-2010-sp1-beta-and-iis-developer-express.aspx",
//                    "publicationDateTimeDescriptor": "Tuesday, 04 January 2011 1:56 AM GMT",
//                    "reference": {
//                        "type": "atom",
//                        "guid": "<id xmlns=\"http://www.w3.org/2005/Atom\">http://weblogs.asp.net/scottgu/archive/2011/01/03/vs-2010-sp1-beta-and-iis-developer-express.aspx</id>",
//                        "externalUri": "http://weblogs.asp.net/scottgu/archive/2011/01/03/vs-2010-sp1-beta-and-iis-developer-express.aspx"
//                    },
//                    "snippet": [
//                        "<font size=\"2\" face=\"arial\">   <p>Last month we <a href=\"http://blogs.msdn.com/b/jasonz/archive/2010/12/07/announcing-visual-studio-2010-service-pack-1-beta.aspx\" target=\"_blank\">released</a> the VS 2010 Service Pack 1 (SP1) Beta.&#160; You can learn more about the VS 2010 SP1 Beta from Jason Zander’s <a href=\"http://blogs.msdn.com/b/jasonz/archive/2010/12/07/announcing-visual-studio-2010-service-pack-1-beta.aspx\" target=\"_blank\">two</a> <a href=\"http://blogs.msdn.com/b/jasonz/archive/2010/12/20/visual-studio-2010-service-pack-1-beta-feedback.aspx\" target=\"_blank\">blog posts</a> about it, and from Scott Hanselman’s <a href=\"http://www.hanselman.com/blog/CommentView.aspx?guid=b1fec575-9744-48df-8778-fc533eb3a0a4\" target=\"_blank\">blog post</a> that covers some of the new capabilities enabled with it.&#160; </p>    <p>You can download and install the VS 2010 SP1 Beta <a href=\"http://www.microsoft.com/downloads/en/details.aspx?FamilyID=11ea69cb-cf12-4842-a3d7-b32a1e5642e2&amp;displaylang=en\" target=\"_blank\">here</a>.</p>    <h3><u>IIS Express</u></h3>    <p>Earlier this summer I <a href=\"http://weblogs.asp.net/scottgu/archive/2010/06/28/introducing-iis-express.aspx\" target=\"_blank\">blogged about IIS Express</a>.&#160; IIS Express is a free version of IIS 7.5 that is optimized for developer scenarios.&#160; We think it combines the ease of use of the ASP.NET Web Server (aka Cassini) currently built-into VS today with the full power of IIS.&#160; Specifically:</p>    <ul>     <li>It’s lightweight and easy to install (less than 5Mb download and a quick install) </li>      <li>It <u>does not</u> require an administrator account to run/debug applications from Visual Studio </li>      <li>It enables a <u>full web-server feature set</u> – including SSL, URL Rewrite, and other IIS 7.x modules </li>      <li>It supports and enables the same extensibility model and web.config file settings that IIS 7.x support </li>      <li>It can be installed side-by-side with the full IIS web server as well as the ASP.NET Development Server (they do not conflict at all) </li>      <li>It works on Windows XP and higher operating systems – giving you a full IIS 7.x developer feature-set on all Windows OS platforms </li>   </ul>    <p>IIS Express (like the ASP.NET Development Server) can be quickly launched to run a site from a directory on disk.&#160; It <u>does not</u> require any registration/configuration steps. This makes it really easy to launch and run for development scenarios.</p>    <p>Visual Studio 2010 SP1 adds support for IIS Express – and you can start to take advantage of this starting with last month’s VS 2010 SP1 Beta release.</p>    <h3><u>Downloading and Installing IIS Express</u></h3>    <p>IIS Express isn’t included as part of the VS 2010 SP1 Beta.&#160; Instead it is a separate ~4MB download which you can download and install <a href=\"http://www.microsoft.com/web/gallery/install.aspx?appid=iisexpress\" target=\"_blank\">using this link</a> (it uses WebPI to install it).&#160; </p>    <p>Once IIS Express is installed, VS 2010 SP1 will enable some additional IIS Express commands and dialog options that allow you to easily use it.</p>    <h3><u>Enabling IIS Express for Existing Projects</u></h3>    <p>Visual Studio today defaults to using the built-in ASP.NET Development Server (aka Cassini) when running ASP.NET Projects:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_113B866D.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_3DE44046.png\" width=\"341\" height=\"109\" /></a> </p>    <p>Converting your existing projects to use IIS Express is really easy.&#160; You can do this by opening up the project properties dialog of an existing project, and then by clicking the “web” tab within it and selecting the “Use IIS Express” checkbox.</p>    <p>Or even simpler, just right-click on your existing project, and select the “Use IIS Express…” menu command:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_6F037AE6.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_4DA3D54A.png\" width=\"564\" height=\"519\" /></a> </p>    <p>And now when you run or debug your project you’ll see that IIS Express now starts up and runs automatically as your web-server:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_537E78E3.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_40C97F2C.png\" width=\"146\" height=\"73\" /></a> </p>    <p>You can optionally right-click on the IIS Express icon within your system tray to see/browse all of sites and applications running on it:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_7907F644.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_5814839D.png\" width=\"524\" height=\"159\" /></a> </p>    <p>Note that if you ever want to revert back to using the ASP.NET Development Server you can do this by right-clicking the project again and then select the “Use Visual Studio Development Server” option (or go into the project properties, click the web tab, and uncheck IIS Express).&#160; This will revert back to the ASP.NET Development Server the next time you run the project.</p>    <h3><u>IIS Express Properties</u></h3>    <p>Visual Studio 2010 SP1 exposes several new IIS Express configuration options that you couldn’t previously set with the ASP.NET Development Server.&#160; Some of these are exposed via the property grid of your project (select the project node in the solution explorer and then change them via the property window):</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_0933BE3E.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_2EBD3B9F.png\" width=\"311\" height=\"312\" /></a> </p>    <p>For example, enabling something like SSL support (which is not possible with the ASP.NET Development Server) can now be done simply by changing the “SSL Enabled” property to “True”:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_5BD2286D.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_73F592C8.png\" width=\"306\" height=\"231\" /></a> </p>    <p>Once this is done IIS Express will expose both an HTTP and HTTPS endpoint for the project that we can use:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_2C3409E1.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_392DE9F2.png\" width=\"488\" height=\"148\" /></a> </p>    <p><u>SSL Self Signed Certs</u></p>    <p>IIS Express ships with a self-signed SSL cert that it installs as part of setup – which removes the need for you to install your own certificate to use SSL during development.&#160; Once you change the above drop-down to enable SSL, you’ll be able to browse to your site with the appropriate https:// URL prefix and it will connect via SSL.</p>    <p>One caveat with self-signed certificates, though, is that browsers (like IE) will go out of their way to warn you that they aren’t to be trusted:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_1CDF91CD.png\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_3BB605AB.png\" width=\"640\" height=\"308\" /></a> </p>    <p>You can mark the certificate as trusted to avoid seeing dialogs like this – or just keep the certificate un-trusted and press the “continue” button when the browser warns you not to trust your local web server.</p>    <p><u>Additional IIS Settings</u></p>    <p></p>    <p></p>    <p></p>    <p>IIS Express uses its own per-user ApplicationHost.config file to configure default server behavior.&#160; Because it is per-user, it can be configured by developers who do not have admin credentials – unlike the full IIS.&#160; You can customize all IIS features and settings via it if you want ultimate server customization (for example: to use your own certificates for SSL instead of self-signed ones).</p>    <p>We recommend storing all app specific settings for IIS and ASP.NET within the web.config file which is part of your project – since that makes deploying apps easier (since the settings can be copied with the application content).&#160; IIS (since IIS 7) no longer uses the metabase, and instead uses the same web.config configuration files that ASP.NET has always supported – which makes xcopy/ftp based deployment much easier.</p>    <h3><u>Making IIS Express your Default Web Server</u></h3>    <p>Above we looked at how we can convert existing sites that use the ASP.NET Developer Web Server to instead use IIS Express.&#160; </p>    <p>You can configure Visual Studio to use IIS Express as the default web server for all new projects by clicking the Tools-&gt;Options menu&#160; command and opening up the Projects and Solutions-&gt;Web Projects node with the Options dialog:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_0EFE3C0A.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_14D8DFA3.png\" width=\"757\" height=\"440\" /></a> </p>    <p>Clicking the “Use IIS Express for new file-based web site and projects” checkbox will cause Visual Studio to use it for all new web site and projects.</p>    <h3><u>Summary</u></h3>    <p>We think IIS Express makes it even easier to build, run and test web applications.&#160; It works with all versions of ASP.NET and supports all ASP.NET application types (including obviously both ASP.NET Web Forms and ASP.NET MVC applications).&#160; Because IIS Express is based on the IIS 7.5 codebase, you have a full web-server feature-set that you can use.&#160; This means you can build and run your applications just like they’ll work on a real production web-server.&#160; In addition to supporting ASP.NET, IIS Express also supports Classic ASP and other file-types and extensions supported by IIS – which also makes it ideal for sites that combine a variety of different technologies.</p>    <p>Best of all – you <u>do not need to change any code</u> to take advantage of it.&#160; As you can see above, updating existing Visual Studio web projects to use it is trivial.&#160; You can begin to take advantage of IIS Express today using the VS 2010 SP1 Beta.</p>    <p>Hope this helps,</p>    <p>Scott</p> </font><img src=\"http://weblogs.asp.net/aggbug.aspx?PostID=7673719\" width=\"1\" height=\"1\"> "
//                    ]
//                },
//                {
//                    "title": "Links to my “Best of 2010” Posts ",
//                    "headlineUrl": "http://weblogs.asp.net/scottgu/archive/2010/12/31/links-to-my-best-of-2010-posts.aspx",
//                    "publicationDateTimeDescriptor": "Saturday, 01 January 2011 1:01 AM GMT",
//                    "reference": {
//                        "type": "atom",
//                        "guid": "<id xmlns=\"http://www.w3.org/2005/Atom\">http://weblogs.asp.net/scottgu/archive/2010/12/31/links-to-my-best-of-2010-posts.aspx</id>",
//                        "externalUri": "http://weblogs.asp.net/scottgu/archive/2010/12/31/links-to-my-best-of-2010-posts.aspx"
//                    },
//                    "snippet": [
//                        "<font size=\"2\" face=\"arial\">   <p>I hope everyone is having a Happy New Years!</p>    <p>2010 has been a busy blogging year for me (this is the 100th blog post I’ve done in 2010).&#160; Several people this week suggested I put together a summary post listing/organizing my favorite posts from the year.&#160; </p>    <p>Below is a quick listing of some of my favorite posts organized by topic area:</p>    <h3><u>VS 2010 and .NET 4</u></h3>    <p>Below is a series of posts I wrote (some in late 2009) about the VS 2010 and .NET 4 (including ASP.NET 4 and WPF 4) release we shipped in April:</p>    <ul>     <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/04/12/visual-studio-2010-and-net-4-released.aspx\" target=\"_blank\">Visual Studio 2010 and .NET 4 Released</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2009/08/25/clean-web-config-files-vs-2010-and-net-4-0-series.aspx\" target=\"_blank\">Clean Web.Config Files</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2009/08/26/starter-project-templates-vs-2010-and-net-4-0-series.aspx\" target=\"_blank\">Starter Project Templates</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2009/08/27/multi-targeting-support-vs-2010-and-net-4-series.aspx\" target=\"_blank\">Multi-targeting</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2009/08/31/multi-monitor-support-vs-2010-and-net-4-series.aspx\" target=\"_blank\">Multiple Monitor Support</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2009/09/02/code-optimized-web-development-profile-vs-2010-and-net-4-0-series.aspx\" target=\"_blank\">New Code Focused Web Profile Option</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2009/09/04/asp-net-html-javascript-snippet-support-vs-2010-and-net-4-0-series.aspx\" target=\"_blank\">HTML / ASP.NET / JavaScript Code Snippets</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2009/09/15/auto-start-asp-net-applications-vs-2010-and-net-4-0-series.aspx\" target=\"_blank\">Auto-Start ASP.NET Applications</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2009/10/13/url-routing-with-asp-net-4-web-forms-vs-2010-and-net-4-0-series.aspx\" target=\"_blank\">URL Routing with ASP.NET 4 Web Forms</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2009/10/21/searching-and-navigating-code-in-vs-2010-vs-2010-and-net-4-0-series.aspx\" target=\"_blank\">Searching and Navigating Code in VS 2010</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2009/10/22/vs-2010-code-intellisense-improvements-vs-2010-and-net-4-0-series.aspx\" target=\"_blank\">VS 2010 Code Intellisense Improvements</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2009/10/26/wpf-4-vs-2010-and-net-4-0-series.aspx\" target=\"_blank\">WPF 4</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2009/10/29/add-reference-dialog-improvements-vs-2010-and-net-4-0-series.aspx\" target=\"_blank\">Add Reference Dialog Improvements</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/01/05/asp-net-4-seo-improvements-vs-2010-and-net-4-0-series.aspx\">SEO Improvements with ASP.NET 4</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/01/27/extensible-output-caching-with-asp-net-4-vs-2010-and-net-4-0-series.aspx\" target=\"_blank\">Output Cache Extensibility with ASP.NET 4</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/02/07/built-in-charting-controls-vs-2010-and-net-4-series.aspx\" target=\"_blank\">Built-in Charting Controls for ASP.NET and Windows Forms</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/03/30/cleaner-html-markup-with-asp-net-4-web-forms-client-ids-vs-2010-and-net-4-0-series.aspx\" target=\"_blank\">Cleaner HTML Markup with ASP.NET 4 - Client IDs</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/04/02/optional-parameters-and-named-arguments-in-c-4-and-a-cool-scenario-w-asp-net-mvc-2.aspx\" target=\"_blank\">Optional Parameters and Named Arguments in C# 4 - and a cool scenarios with ASP.NET MVC 2</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/04/05/automatic-properties-collection-initializers-and-implicit-line-continuation-support-with-vb-2010.aspx\" target=\"_blank\">Automatic Properties, Collection Initializers and Implicit Line Continuation Support with VB 2010</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/04/06/new-lt-gt-syntax-for-html-encoding-output-in-asp-net-4-and-asp-net-mvc-2.aspx\" target=\"_blank\">New &lt;%: %&gt; Syntax for HTML Encoding Output using ASP.NET 4</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/04/08/javascript-intellisense-improvements-with-vs-2010.aspx\" target=\"_blank\">JavaScript Intellisense Improvements with VS 2010</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/04/21/vs-2010-debugger-improvements-breakpoints-datatips-import-export.aspx\" target=\"_blank\">VS 2010 Debugger Improvements (DataTips, BreakPoints, Import/Export)</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/04/26/box-selection-and-multi-line-editing-with-vs-2010.aspx\" target=\"_blank\">Box Selection and Multi-line Editing Support with VS 2010</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/05/03/visual-studio-2010-extension-manager-and-the-new-vs-2010-powercommands-extension.aspx\" target=\"_blank\">VS 2010 Extension Manager (and the cool new PowerCommands Extension)</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/05/10/pinning-projects-and-solutions-with-visual-studio-2010.aspx\" target=\"_blank\">Pinning Projects and Solutions</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/07/29/vs-2010-web-deployment.aspx\" target=\"_blank\">VS 2010 Web Deployment</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/08/18/debugging-tips-with-visual-studio-2010.aspx\" target=\"_blank\">Debugging Tips/Tricks with Visual Studio</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/08/24/search-and-navigation-tips-tricks-with-visual-studio.aspx\">Search and Navigation Tips/Tricks with Visual Studio</a> </li>   </ul>    <h3><u>Visual Studio </u></h3>    <p>Below are some additional Visual Studio posts I’ve done (not in the first series above) that I thought were nice:</p>    <ul>     <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/04/29/download-and-share-visual-studio-color-schemes.aspx\" target=\"_blank\">Download and Share Visual Studio Color Schemes</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/07/29/visual-studio-2010-keyboard-shortcuts.aspx\" target=\"_blank\">Visual Studio 2010 Keyboard Shortcuts</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/07/19/vs-2010-productivity-power-tools-update-with-some-cool-new-features.aspx\" target=\"_blank\">VS 2010 Productivity Power Tools</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/05/12/fun-visual-studio-2010-wallpapers.aspx\" target=\"_blank\">Fun Visual Studio 2010 Wallpapers</a> </li>   </ul>    <h3><u>Silverlight</u></h3>    <p>We shipped Silverlight 4 in April, and announced Silverlight 5 the beginning of December:</p>    <ul>     <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/04/15/silverlight-4-released.aspx\" target=\"_blank\">Silverlight 4 Released</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/05/17/silverlight-4-tools-for-vs-2010-and-wcf-ria-services-released.aspx\" target=\"_blank\">Silverlight 4 Tools for VS 2010 and WCF RIA Services Released</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/04/22/silverlight-4-training-kit.aspx\" target=\"_blank\">Silverlight 4 Training Kit</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/06/29/silverlight-pivotviewer-now-available.aspx\" target=\"_blank\">Silverlight PivotViewer Now Available</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/11/04/silverlight-questions.aspx\" target=\"_blank\">Silverlight Questions</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/12/02/announcing-silverlight-5.aspx\" target=\"_blank\">Announcing Silverlight 5</a> </li>   </ul>    <h3>Silverlight for Windows Phone 7</h3>    <p>We shipped Windows Phone 7 this fall and shipped free Visual Studio development tools with great Silverlight and XNA support in September:</p>    <ul>     <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/09/16/windows-phone-7-developer-tools-released.aspx\" target=\"_blank\">Windows Phone 7 Developer Tools Released</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/03/18/building-a-windows-phone-7-twitter-application-using-silverlight.aspx\" target=\"_blank\">Building a Windows Phone 7 Twitter Application using Silverlight</a> </li>   </ul>    <h3><u>ASP.NET MVC</u></h3>    <p>We shipped ASP.NET MVC 2 in March, and started previewing ASP.NET MVC 3 this summer.&#160; ASP.NET MVC 3 will RTM in less than 2 weeks from today:</p>    <ul>     <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/01/10/asp-net-mvc-2-strongly-typed-html-helpers.aspx\" target=\"_blank\">ASP.NET MVC 2: Strongly Typed Html Helpers</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/01/15/asp-net-mvc-2-model-validation.aspx\" target=\"_blank\">ASP.NET MVC 2: Model Validation</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/07/27/introducing-asp-net-mvc-3-preview-1.aspx\" target=\"_blank\">Introducing ASP.NET MVC 3 (Preview 1)</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/10/06/announcing-nupack-asp-net-mvc-3-beta-and-webmatrix-beta-2.aspx\" target=\"_blank\">Announcing ASP.NET MVC 3 Beta and NuGet (nee NuPack)</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/11/09/announcing-the-asp-net-mvc-3-release-candidate.aspx\" target=\"_blank\">Announcing ASP.NET MVC 3 Release Candidate 1</a>&#160; </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/12/10/announcing-asp-net-mvc-3-release-candidate-2.aspx\" target=\"_blank\">Announcing ASP.NET MVC 3 Release Candidate 2</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/07/02/introducing-razor.aspx\" target=\"_blank\">Introducing Razor – A New View Engine for ASP.NET</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/10/22/asp-net-mvc-3-layouts.aspx\" target=\"_blank\">ASP.NET MVC 3: Layouts with Razor</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/10/19/asp-net-mvc-3-new-model-directive-support-in-razor.aspx\" target=\"_blank\">ASP.NET MVC 3: New @model keyword in Razor</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/11/12/asp-net-mvc-3-server-side-comments-with-razor.aspx\" target=\"_blank\">ASP.NET MVC 3: Server-Side Comments with Razor</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/12/15/asp-net-mvc-3-razor-s-and-lt-text-gt-syntax.aspx\" target=\"_blank\">ASP.NET MVC 3: Razor’s @: and &lt;text&gt; syntax</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/12/16/asp-net-mvc-3-implicit-and-explicit-code-nuggets-with-razor.aspx\" target=\"_blank\">ASP.NET MVC 3: Implicit and Explicit code nuggets with Razor</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/12/30/asp-net-mvc-3-layouts-and-sections-with-razor.aspx\" target=\"_blank\">ASP.NET MVC 3: Layouts and Sections with Razor</a> </li>   </ul>    <h3><u>IIS and Web Server Stack</u></h3>    <p>The IIS and Web Stack teams have made a bunch of great improvements to the core web server this year:</p>    <ul>     <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/04/20/tip-trick-fix-common-seo-problems-using-the-url-rewrite-extension.aspx\" target=\"_blank\">Fix Common SEO Problems using the URL Rewrite Extension</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/09/08/introducing-the-microsoft-web-farm-framework.aspx\" target=\"_blank\">Introducing the Microsoft Web Farm Framework</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/09/13/automating-deployment-with-microsoft-web-deploy.aspx\" target=\"_blank\">Automating Deployment with Microsoft Web Deploy</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/06/28/introducing-iis-express.aspx\" target=\"_blank\">Introducing IIS Express</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/06/30/new-embedded-database-support-with-asp-net.aspx\" target=\"_blank\">SQL CE 4 (New Embedded Database Support with ASP.NET)</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/07/06/introducing-webmatrix.aspx\" target=\"_blank\">Introducing Web Matrix</a> </li>   </ul>    <h3><u>EF Code First</u></h3>    <p>EF Code First is a really nice new data option that enables a very clean code-oriented data workflow:</p>    <ul>     <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/12/08/announcing-entity-framework-code-first-ctp5-release.aspx\" target=\"_blank\">Announcing Entity Framework Code-First CTP5 Release</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/12/10/class-level-model-validation-with-ef-code-first-and-asp-net-mvc-3.aspx\" target=\"_blank\">Class-Level Model Validation with EF Code First and ASP.NET MVC 3</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/07/16/code-first-development-with-entity-framework-4.aspx\" target=\"_blank\">Code-First Development with Entity Framework 4</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/07/23/entity-framework-4-code-first-custom-database-schema-mapping.aspx\" target=\"_blank\">EF 4 Code First: Custom Database Schema Mapping</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/08/03/using-ef-code-first-with-an-existing-database.aspx\" target=\"_blank\">Using EF Code First with an Existing Database</a> </li>   </ul>    <h3><u>jQuery and AJAX Contributions</u></h3>    <p>My team began making some significant source code contributions to the jQuery project this year:</p>    <ul>     <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/10/04/jquery-templates-data-link-and-globalization-accepted-as-official-jquery-plugins.aspx\" target=\"_blank\">jQuery Templates, Data Link and Globalization Accepted as Official jQuery Plugins</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/05/07/jquery-templates-and-data-linking-and-microsoft-contributing-to-jquery.aspx\" target=\"_blank\">jQuery Templates and Data Linking (and Microsoft contributing to jQuery)</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/06/10/jquery-globalization-plugin-from-microsoft.aspx\" target=\"_blank\">jQuery Globalization Plugin from Microsoft</a> </li>   </ul>    <h3><u>Patches and Hot Fixes</u></h3>    <p>Some useful fixes you can download prior to VS 2010 SP1:</p>    <ul>     <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/06/27/patch-for-cut-copy-insufficient-memory-issue-with-vs-2010.aspx\" target=\"_blank\">Patch for Cut/Copy “Insufficient Memory” issue with VS 2010</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/08/29/patch-for-vs-2010-find-and-replace-dialog-growing.aspx\" target=\"_blank\">Patch for VS 2010 Find and Replace Dialog Growing</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/10/15/patch-for-vs-2010-scrolling-context-menu.aspx\" target=\"_blank\">Patch for VS 2010 Scrolling Context Menu</a> </li>   </ul>    <h3><u>Videos of My Talks</u></h3>    <p>Some recordings of technical talks I’ve done this year:</p>    <ul>     <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/01/02/asp-net-4-asp-net-mvc-and-silverlight-4-videos-of-my-talks-in-europe.aspx\" target=\"_blank\">ASP.NET 4, ASP.NET MVC, and Silverlight 4 Talks I did in Europe</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/05/26/my-vs-2010-and-asp-net-4-talks-online.aspx\" target=\"_blank\">VS 2010 and ASP.NET 4 Web Forms Talk in Arizona</a> </li>   </ul>    <h3><u>Other</u></h3>    <ul>     <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/01/24/about-technical-debates-both-in-general-and-regarding-asp-net-web-forms-and-asp-net-mvc-in-particular.aspx\" target=\"_blank\">About Technical Debates (and ASP.NET Web Forms and ASP.NET MVC debates in particular)</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/09/30/asp-net-security-fix-now-on-windows-update.aspx\" target=\"_blank\">ASP.NET Security Fix Now on Windows Update</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/11/21/upcoming-web-camps.aspx\" target=\"_blank\">Upcoming Web Camps</a> </li>   </ul>    <p>I’d like to say a big thank you to everyone who follows my blog – I really appreciate you reading it (the comments you post help encourage me to write it).&#160; </p>    <p>See you in the New Year!</p>    <p>Scott</p>    <p><em>P.S.</em> <em>In addition to blogging, I am also now using Twitter for quick updates and to share links. Follow me at: </em><a href=\"http://www.twitter.com/scottgu\">twitter.com/scottgu</a></p> </font><img src=\"http://weblogs.asp.net/aggbug.aspx?PostID=7671597\" width=\"1\" height=\"1\"> "
//                    ]
//                },
//                {
//                    "title": "ASP.NET MVC 3: Layouts and Sections with Razor ",
//                    "headlineUrl": "http://weblogs.asp.net/scottgu/archive/2010/12/30/asp-net-mvc-3-layouts-and-sections-with-razor.aspx",
//                    "publicationDateTimeDescriptor": "Thursday, 30 December 2010 3:27 AM GMT",
//                    "reference": {
//                        "type": "atom",
//                        "guid": "<id xmlns=\"http://www.w3.org/2005/Atom\">http://weblogs.asp.net/scottgu/archive/2010/12/30/asp-net-mvc-3-layouts-and-sections-with-razor.aspx</id>",
//                        "externalUri": "http://weblogs.asp.net/scottgu/archive/2010/12/30/asp-net-mvc-3-layouts-and-sections-with-razor.aspx"
//                    },
//                    "snippet": [
//                        "<font size=\"2\" face=\"arial\">   <p>This is another in a series of posts I’m doing that cover some of the new ASP.NET MVC 3 features:</p>    <ul>     <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/07/02/introducing-razor.aspx\" target=\"_blank\">Introducing Razor (July 2nd)</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/10/19/asp-net-mvc-3-new-model-directive-support-in-razor.aspx\">New @model keyword in Razor (Oct 19th)</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/10/22/asp-net-mvc-3-layouts.aspx\">Layouts with Razor (Oct 22nd)</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/11/12/asp-net-mvc-3-server-side-comments-with-razor.aspx\">Server-Side Comments with Razor (Nov 12th)</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/12/15/asp-net-mvc-3-razor-s-and-lt-text-gt-syntax.aspx\">Razor’s @: and &lt;text&gt; syntax (Dec 15th)</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/12/16/asp-net-mvc-3-implicit-and-explicit-code-nuggets-with-razor.aspx\" target=\"_blank\">Implicit and Explicit code nuggets with Razor (Dec 16th)</a> </li>      <li>Layouts and Sections with Razor (Today) </li>   </ul>    <p>In today’s post I’m going to go into more details about how Layout pages work with Razor.&#160; In particular, I’m going to cover how you can have multiple, non-contiguous, replaceable “sections” within a layout file – and enable views based on layouts to optionally “fill in” these different sections at runtime.&#160; The Razor syntax for doing this is clean and concise.</p>    <p>I’ll also show how you can dynamically check at runtime whether a particular layout section has been defined, and how you can provide alternate content (or even an alternate layout) in the event that a section isn’t specified within a view template.&#160; This provides a powerful and easy way to customize the UI of your site and make it clean and DRY from an implementation perspective.</p>    <h3><u>What are Layouts?</u></h3>    <p>You typically want to maintain a consistent look and feel across all of the pages within your web-site/application.&#160; ASP.NET 2.0 introduced the concept of “master pages” which helps enable this when using .aspx based pages or templates.&#160; Razor also supports this concept with a feature called “layouts” – which allow you to define a common site template, and then inherit its look and feel across all the views/pages on your site.</p>    <p>I previously discussed the basics of how layout files work with Razor in my <a href=\"http://weblogs.asp.net/scottgu/archive/2010/10/22/asp-net-mvc-3-layouts.aspx\" target=\"_blank\">ASP.NET MVC 3: Layouts with Razor</a> blog post.&#160; Today’s post will go deeper and discuss how you can define multiple, non-contiguous, replaceable regions within a layout file that you can then optionally “fill in” at runtime.</p>    <h3><u>Site Layout Scenario</u></h3>    <p>Let’s look at how we can implement a common site layout scenario with ASP.NET MVC 3 and Razor.&#160; Specifically, we’ll implement some site UI where we have a common header and footer on all of our pages.&#160; We’ll also add a “sidebar” section to the right of our common site layout.&#160; </p>    <p>On some pages we’ll customize the SideBar to contain content specific to the page it is included on:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_4672E92A.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_291D9160.png\" width=\"648\" height=\"382\" /></a> </p>    <p>And on other pages (that do not have custom sidebar content) we will fall back and provide some “default content” to the sidebar:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_0AD2DA6A.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_228A11D0.png\" width=\"704\" height=\"325\" /></a> </p>    <p>We’ll use ASP.NET MVC 3 and Razor to enable this customization in a nice, clean way.&#160; </p>    <p>Below are some step-by-step tutorial instructions on how to build the above site with ASP.NET MVC 3 and Razor.</p>    <h3><u>Part 1: Create a New Project with a Layout for the “Body” section</u></h3>    <p>We’ll begin by using the “File-&gt;New Project” menu command within Visual Studio to create a new ASP.NET MVC 3 Project.&#160; We’ll create the new project using the “Empty” template option:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_416085AE.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_473B2947.png\" width=\"639\" height=\"585\" /></a> </p>    <p>This will create a new project that has no default controllers in it:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_2A520472.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_1DE3E149.png\" width=\"685\" height=\"415\" /></a> </p>    <p><u>Creating a HomeController</u></p>    <p>We will then right-click on the “Controllers” folder of our newly created project and choose the “Add-&gt;Controller” context menu command.&#160; This will bring up the “Add Controller” dialog:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_5CD561E4.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_74F8CC3F.png\" width=\"493\" height=\"200\" /></a> </p>    <p>We’ll name the new controller we create “HomeController”.&#160; When we click the “Add” button Visual Studio will add a HomeController class to our project with a default “Index” action method that returns a view:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_5B249610.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_20C9202F.png\" width=\"750\" height=\"519\" /></a> </p>    <p>We won’t need to write any Controller logic to implement this sample – so we’ll leave the default code as-is.&#160; </p>    <p><u>Creating a View Template</u></p>    <p>Our next step will be to implement the view template associated with the HomeController’s Index action method.&#160; To implement the view template, we will right-click within the “HomeController.Index()” method and select the “Add View” command to create a view template for our home page:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_4AC91E57.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_62EC88B2.png\" width=\"525\" height=\"249\" /></a> </p>    <p>This will bring up the “Add View” dialog within Visual Studio.&#160; </p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_49185283.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_47D3B9A4.png\" width=\"511\" height=\"504\" /></a> </p>    <p>We do not need to change any of the default settings within the above dialog (the name of the template was auto-populated to Index because we invoked the “Add View” context menu command within the Index method).&#160; </p>    <p>When we click the “Add” Button within the dialog, a Razor-based “Index.cshtml” view template will be added to the \\Views\\Home\\ folder within our project.&#160; Let’s add some simple default static content to it:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_1497803B.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_0C33AAE4.png\" width=\"727\" height=\"494\" /></a> </p>    <p>Notice above how we don’t have an &lt;html&gt; or &lt;body&gt; section defined within our view template.&#160; This is because we are going to rely on a layout template to supply these elements and use it to define the common site layout and structure for our site (ensuring that it is consistent across all pages and URLs within the site).&#160; </p>    <p><u>Customizing our Layout File</u></p>    <p>Let’s open and customize the default “_Layout.cshtml” file that was automatically added to the \\Views\\Shared folder when we created our new project:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_71F341BF.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_3797CBDE.png\" width=\"809\" height=\"458\" /></a> </p>    <p>The default layout file (shown above) is pretty basic and simply outputs a title (if specified in either the Controller or the View template) and adds links to a stylesheet and jQuery.&#160; The call to “RenderBody()” indicates where the main body content of our Index.cshtml file will merged into the output sent back to the browser.</p>    <p>Let’s modify the Layout template to add a common header, footer and sidebar to the site:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_0865E047.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_273C5425.png\" width=\"748\" height=\"516\" /></a> </p>    <p>We’ll then edit the “Site.css” file within the \\Content folder of our project and add 4 CSS rules to it:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_1825754B.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_76C5CFAE.png\" width=\"685\" height=\"634\" /></a> </p>    <p>And now when we run the project and browse to the home “/” URL of our project we’ll see a page like below:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_3BFE26D8.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_73D06AFB.png\" width=\"704\" height=\"415\" /></a> </p>    <p>Notice how the content of the HomeController’s Index view template and the site’s Shared Layout template have been merged together into a single HTML response.&#160; </p>    <p>Below is what the HTML sent back from the server looks like:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_2DDF37DB.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_30A4ECCE.png\" width=\"668\" height=\"628\" /></a> </p>    <h3><u>Part 2: Adding a “SideBar” Section</u></h3>    <p>Our site so far has a layout template that has only one “section” in it – what we call the main “body” section of the response.&#160; </p>    <p>Razor also supports the ability to add additional &quot;named sections” to layout templates as well.&#160; These sections can be defined anywhere in the layout file (including within the &lt;head&gt; section of the HTML), and allow you to output dynamic content to multiple, non-contiguous, regions of the final response.</p>    <p><u>Defining the “SideBar” section in our Layout</u></p>    <p>Let’s update our Layout template to define an additional “SideBar” section of content that will be rendered within the &lt;div id=”sidebar”&gt; region of our HTML.&#160; We can do this by calling the <em>RenderSection(string sectionName, bool required)</em> helper method within our Layout.cshtml file like below:</p>    <p>&#160; <a href=\"http://weblogs.asp.net/blogs/scottgu/image_367F9067.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_4A2C79FB.png\" width=\"750\" height=\"509\" /></a> </p>    <p>The first parameter to the “RenderSection()” helper method specifies the name of the section we want to render at that location in the layout template.&#160; The second parameter is optional, and allows us to define whether the section we are rendering is required or not.&#160; If a section is “required”, then Razor will throw an error at runtime if that section is not implemented within a view template that is based on the layout file (which can make it easier to track down content errors).&#160; If a section is not required, then its presence within a view template is optional, and the above RenderSection() code will render nothing at runtime if it isn’t defined.</p>    <p>Now that we’ve made the above change to our layout file, let’s hit refresh in our browser and see what our Home page now looks like:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_5B30A7DE.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_331DF8BF.png\" width=\"704\" height=\"367\" /></a> </p>    <p>Notice how we currently have no content within our SideBar &lt;div&gt; – that is because the Index.cshtml view template doesn’t implement our new “SideBar” section yet.</p>    <p><u>Implementing the “SideBar” Section in our View Template</u></p>    <p>Let’s change our home-page so that it has a SideBar section that outputs some custom content.&#160; We can do that by opening up the Index.cshtml view template, and by adding a new “SiderBar” section to it.&#160; We’ll do this using Razor’s @section <em>SectionName</em> { } syntax:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_4AD53025.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_7E30F381.png\" width=\"756\" height=\"570\" /></a> </p>    <p>We could have put our SideBar @section declaration anywhere within the view template.&#160; I think it looks cleaner when defined at the top or bottom of the file – but that is simply personal preference.&#160; </p>    <p>You can include any content or code you want within @section declarations.&#160; Notice above how I have a C# code nugget that outputs the current time at the bottom of the SideBar section.&#160; I could have also written code that used ASP.NET MVC’s HTML/AJAX helper methods and/or accessed any strongly-typed model objects passed to the Index.cshtml view template.</p>    <p>Now that we’ve made the above template changes, when we hit refresh in our browser again we’ll see that our SideBar content – that is specific to the Home Page of our site – is now included in the page response sent back from the server:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_360337A5.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_06D14C0E.png\" width=\"704\" height=\"367\" /></a> </p>    <p>The SideBar section content has been merged into the proper location of the HTML response :</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_3A99425F.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_2058D93B.png\" width=\"647\" height=\"764\" /></a> </p>    <p></p>    <h3><u>Part 3: Conditionally Detecting if a Layout Section Has Been Implemented</u></h3>    <p>Razor provides the ability for you to conditionally check (from within a layout file) whether a section has been defined within a view template, and enables you to output an alternative response in the event that the section has not been defined.&#160; This provides a convenient way to specify default UI for optional layout sections.&#160; </p>    <p>Let’s modify our Layout file to take advantage of this capability.&#160; Below we are conditionally checking whether the “SideBar” section has been defined without the view template being rendered (using the IsSectionDefined() method), and if so we render the section.&#160; If the section has not been defined, then we now instead render some default content for the SideBar:&#160; </p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_2A3DCAA6.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_28F931C7.png\" width=\"754\" height=\"586\" /></a> </p>    <p><em>Note: You want to make sure you prefix calls to the RenderSection() helper method with a @ character – which will tell Razor to execute the HelperResult it returns and merge in the section content in the appropriate place of the output.&#160; Notice how we wrote @RenderSection(“SideBar”) above instead of just RenderSection(“SideBar”).&#160; Otherwise you’ll get an error.</em></p>    <p>Above we are simply rendering an inline static string (&lt;p&gt;Default SideBar Content&lt;/p&gt;) if the section is not defined.&#160; A real-world site would more likely refactor this default content to be stored within a separate partial template (which we’d render using the Html.RenderPartial() helper method within the else block) or alternatively use the Html.Action() helper method within the else block to encapsulate both the logic and rendering of the default sidebar.</p>    <p></p>    <p></p>    <p></p>    <p></p>    <p></p>    <p></p>    <p></p>    <p>When we hit refresh on our home-page, we will still see the same custom SideBar content we had before.&#160; This is because we implemented the SideBar section within our Index.cshtml view template (and so our Layout rendered it):</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_360337A5.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_06D14C0E.png\" width=\"704\" height=\"367\" /></a> </p>    <p>Let’s now implement a “/Home/About” URL for our site by adding a new “About” action method to our HomeController:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_63E06490.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_072D5936.png\" width=\"353\" height=\"325\" /></a> </p>    <p>The About() action method above simply renders a view back to the client when invoked.&#160; We can implement the corresponding view template for this action by right-clicking within the “About()” method and using the “Add View” menu command (like before) to create a new About.cshtml view template.&#160; </p>    <p>We’ll implement the About.cshtml view template like below. Notice that we <u>are not</u> defining a “SideBar” section within it:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_6D592306.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_32FDAD25.png\" width=\"752\" height=\"389\" /></a> </p>    <p>When we browse the /Home/About URL we’ll see the content we supplied above in the main body section of our response, and the default SideBar content will rendered:</p>    <p></p>    <p></p>    <p></p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_0AD2DA6A.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_228A11D0.png\" width=\"704\" height=\"325\" /></a> </p>    <p>The layout file determined at runtime that a custom SideBar section wasn’t present in the About.cshtml view template, and instead rendered the default sidebar content.</p>    <p><u>One Last Tweak…</u></p>    <p>Let’s suppose that at a later point we decide that instead of rendering default side-bar content, we just want to hide the side-bar entirely from pages that don’t have any custom sidebar content defined.&#160; We could implement this change simply by making a small modification to our layout so that the sidebar content (and its surrounding HTML chrome) is only rendered if the SideBar section is defined.&#160; The code to do this is below:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_6ACFF148.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_4329751E.png\" width=\"308\" height=\"118\" /></a> </p>    <p>Razor is flexible enough so that we can make changes like this and not have to modify any of our view templates (nor make change any Controller logic changes) to accommodate this.&#160; We can instead make just this one modification to our Layout file and the rest happens cleanly.&#160; This type of flexibility makes Razor incredibly powerful and productive.</p>    <h3><u>Summary</u></h3>    <p>Razor’s layout capability enables you to define a common site template, and then inherit its look and feel across all the views/pages on your site.</p>    <p>Razor enables you to define multiple, non-contiguous, “sections” within layout templates that can be “filled-in” by view templates.&#160; The @section {} syntax for doing this is clean and concise.&#160; Razor also supports the ability to dynamically check at runtime whether a particular section has been defined, and to provide alternate content (or even an alternate layout) in the event that it isn’t specified.&#160; This provides a powerful and easy way to customize the UI of your site - and make it clean and DRY from an implementation perspective.</p>    <p>Hope this helps,</p>    <p>Scott</p>    <p><em>P.S.</em> <em>In addition to blogging, I am also now using Twitter for quick updates and to share links. Follow me at: </em><a href=\"http://www.twitter.com/scottgu\" target=\"_blank\">twitter.com/scottgu</a></p> </font><img src=\"http://weblogs.asp.net/aggbug.aspx?PostID=7670370\" width=\"1\" height=\"1\"> "
//                    ]
//                },
//                {
//                    "title": "ASP.NET MVC 3: Implicit and Explicit code nuggets with Razor ",
//                    "headlineUrl": "http://weblogs.asp.net/scottgu/archive/2010/12/16/asp-net-mvc-3-implicit-and-explicit-code-nuggets-with-razor.aspx",
//                    "publicationDateTimeDescriptor": "Friday, 17 December 2010 2:23 AM GMT",
//                    "reference": {
//                        "type": "atom",
//                        "guid": "<id xmlns=\"http://www.w3.org/2005/Atom\">http://weblogs.asp.net/scottgu/archive/2010/12/16/asp-net-mvc-3-implicit-and-explicit-code-nuggets-with-razor.aspx</id>",
//                        "externalUri": "http://weblogs.asp.net/scottgu/archive/2010/12/16/asp-net-mvc-3-implicit-and-explicit-code-nuggets-with-razor.aspx"
//                    },
//                    "snippet": [
//                        "<font size=\"2\" face=\"arial\">   <p>This is another in a series of posts I’m doing that cover some of the new ASP.NET MVC 3 features:</p>    <ul>     <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/10/19/asp-net-mvc-3-new-model-directive-support-in-razor.aspx\" target=\"_blank\">New @model keyword in Razor (Oct 19th)</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/10/22/asp-net-mvc-3-layouts.aspx\" target=\"_blank\">Layouts with Razor (Oct 22nd)</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/11/12/asp-net-mvc-3-server-side-comments-with-razor.aspx\" target=\"_blank\">Server-Side Comments with Razor (Nov 12th)</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/12/15/asp-net-mvc-3-razor-s-and-lt-text-gt-syntax.aspx\" target=\"_blank\">Razor’s @: and &lt;text&gt; syntax (Dec 15th)</a> </li>      <li>Implicit and Explicit code nuggets with Razor (today) </li>   </ul>    <p>In today’s post I’m going to discuss how Razor enables you to both implicitly and explicitly define code nuggets within your view templates, and walkthrough some code examples of each of them.&#160; </p>    <h3><u>Fluid Coding with Razor</u></h3>    <h6></h6>    <p>ASP.NET MVC 3 ships with a new view-engine option called “Razor” (in addition to the existing .aspx view engine).&#160; You can learn more about Razor, why we are introducing it, and the syntax it supports from my <a href=\"http://weblogs.asp.net/scottgu/archive/2010/07/02/introducing-razor.aspx\">Introducing Razor</a> blog post.</p>    <p>Razor minimizes the number of characters and keystrokes required when writing a view template, and enables a fast, fluid coding workflow. Unlike most template syntaxes, you do not need to interrupt your coding to explicitly denote the start and end of server blocks within your HTML. The Razor parser is smart enough to infer this from your code. This enables a compact and expressive syntax which is clean, fast and fun to type.</p>    <p>For example, the Razor snippet below can be used to iterate a collection of products and output a &lt;ul&gt; list of product names that link to their corresponding product pages:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_5E9ACF1C.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_4EAB8A58.png\" width=\"520\" height=\"181\" /></a> </p>    <p>When run, the above code generates output like below:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_66CEF4B3.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_13E3E182.png\" width=\"534\" height=\"344\" /></a> </p>    <p>Notice above how we were able to embed two code nuggets within the content of the foreach loop.&#160; One of them outputs the name of the Product, and the other embeds the ProductID within a hyperlink.&#160; Notice that we didn’t have to explicitly wrap these code-nuggets - Razor was instead smart enough to <em>implicitly</em> identify where the code began and ended in both of these situations.&#160; </p>    <h3><u>How Razor Enables Implicit Code Nuggets</u></h3>    <p>Razor <u>does not</u> define its own language.&#160; Instead, the code you write within Razor code nuggets is standard C# or VB.&#160; This allows you to re-use your existing language skills, and avoid having to learn a customized language grammar.</p>    <p>The Razor parser has smarts built into it so that whenever possible you do not need to explicitly mark the end of C#/VB code nuggets you write.&#160; This makes coding more fluid and productive, and enables a nice, clean, concise template syntax.&#160; Below are a few scenarios that Razor supports where you can avoid having to explicitly mark the beginning/end of a code nugget, and instead have Razor<em> implicitly identify the code nugget scope</em> for you:</p>    <p><u>Property Access</u></p>    <p>Razor allows you to output a variable value, or a sub-property on a variable that is referenced via “dot” notation:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_130B7B98.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_247BDC70.png\" width=\"461\" height=\"43\" /></a> </p>    <p>You can also use “dot” notation to access sub-properties multiple levels deep:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_31E1EF76.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_713FA306.png\" width=\"308\" height=\"45\" /></a> </p>    <p><u>Array/Collection Indexing:</u></p>    <p>Razor allows you to index into collections or arrays:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_69B43399.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_5E1E765A.png\" width=\"536\" height=\"46\" /></a> </p>    <p><u>Calling Methods:</u></p>    <p>Razor also allows you to invoke methods:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_569306ED.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_211A44C8.png\" width=\"556\" height=\"47\" /></a> </p>    <p>Notice how for all of the scenarios above how we <u>did not</u> have to explicitly end the code nugget.&#160; Razor was able to implicitly identify the end of the code block for us.</p>    <h3><u>Razor’s Parsing Algorithm for Code Nuggets</u></h3>    <p>The below algorithm captures the core parsing logic we use to support “@” expressions within Razor, and to enable the implicit code nugget scenarios above: </p>    <ol>     <li>Parse an identifier - As soon as we see a character that isn't valid in a C# or VB identifier, we stop and move to step 2 </li>      <li>Check for brackets - If we see &quot;(&quot; or &quot;[&quot;, go to step 2.1., otherwise, go to step 3&#160; <ol>         <li>Parse until the matching &quot;)&quot; or &quot;]&quot; (we track nested &quot;()&quot; and &quot;[]&quot; pairs and ignore &quot;()[]&quot; we see in strings or comments) </li>          <li>Go back to step 2 </li>       </ol>     </li>      <li>Check for a &quot;.&quot; - If we see one, go to step 3.1, otherwise, DO NOT ACCEPT THE &quot;.&quot; as code, and go to step 4        <ol>         <li>If the character AFTER the &quot;.&quot; is a valid identifier, accept the &quot;.&quot; and go back to step 1, otherwise, go to step 4 </li>       </ol>     </li>      <li>Done! </li>   </ol>    <p><u>Differentiating between code and content</u></p>    <p>Step 3.1 is a particularly interesting part of the above algorithm, and enables Razor to differentiate between scenarios where an identifier is being used as part of the code statement, and when it should instead be treated as static content:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_00930516.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_0DF9181C.png\" width=\"461\" height=\"43\" /></a> </p>    <p>Notice how in the snippet above we have ? and ! characters at the end of our code nuggets.&#160; These are both legal C# identifiers – but Razor is able to implicitly identify that they should be treated as static string content as opposed to being part of the code expression because there is whitespace after them.&#160; This is pretty cool and saves us keystrokes.</p>    <h3><u>Explicit Code Nuggets in Razor</u></h3>    <p>Razor is smart enough to implicitly identify a lot of code nugget scenarios.&#160; But there are still times when you want/need to be more explicit in how you scope the code nugget expression.&#160; The @(expression) syntax allows you to do this:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_6D71D869.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_65E668FC.png\" width=\"298\" height=\"41\" /></a> </p>    <p>You can write any C#/VB code statement you want within the @() syntax.&#160; Razor will treat the wrapping () characters as the explicit scope of the code nugget statement.&#160; Below are a few scenarios where we could use the explicit code nugget feature:</p>    <p><u>Perform Arithmetic Calculation/Modification:</u></p>    <p>You can perform arithmetic calculations within an explicit code nugget:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_455F294A.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_52C53C50.png\" width=\"374\" height=\"47\" /></a> </p>    <p><u>Appending Text to a Code Expression Result: </u></p>    <p>You can use the explicit expression syntax to append static text at the end of a code nugget without having to worry about it being incorrectly parsed as code:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_602B4F56.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_2AB28D31.png\" width=\"423\" height=\"42\" /></a> </p>    <p>Above we have embedded a code nugget within an &lt;img&gt; element’s src attribute.&#160; It allows us to link to images with URLs like “/Images/Beverages.jpg”.&#160; Without the explicit parenthesis, Razor would have looked for a “.jpg” property on the CategoryName (and raised an error).&#160; By being explicit we can clearly denote where the code ends and the text begins.</p>    <p><u>Using Generics and Lambdas</u></p>    <p>Explicit expressions also allow us to use generic types and generic methods within code expressions – and enable us to avoid the &lt;&gt; characters in generics from being ambiguous with tag elements.</p>    <h3><u>One More Thing….Intellisense within Attributes</u></h3>    <p>We have used code nuggets within HTML attributes in several of the examples above.&#160; One nice feature supported by the Razor code editor within Visual Studio is the ability to still get VB/C# intellisense when doing this.</p>    <p>Below is an example of C# code intellisense when using an implicit code nugget within an &lt;a&gt; href=”” attribute:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_23271DC4.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_3020FDD5.png\" width=\"611\" height=\"308\" /></a> </p>    <p>Below is an example of C# code intellisense when using an explicit code nugget embedded in the middle of a &lt;img&gt; src=”” attribute:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_3D1ADDE6.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_0E552544.png\" width=\"570\" height=\"235\" /></a> </p>    <p>Notice how we are getting full code intellisense for both scenarios – despite the fact that the code expression is embedded within an HTML attribute (something the existing .aspx code editor doesn’t support).&#160; This makes writing code even easier, and ensures that you can take advantage of intellisense everywhere.</p>    <h3><u>Summary</u></h3>    <p>Razor enables a clean and concise templating syntax that enables a very fluid coding workflow.&#160; Razor’s ability to implicitly scope code nuggets reduces the amount of typing you need to perform, and leaves you with really clean code.</p>    <p>When necessary, you can also explicitly scope code expressions using a @(expression) syntax to provide greater clarity around your intent, as well as to disambiguate code statements from static markup.</p>    <p>Hope this helps,</p>    <p>Scott</p>    <p><i>P.S. In addition to blogging, I am also now using Twitter for quick updates and to share links. Follow me at: </i><a href=\"http://www.twitter.com/scottgu\">twitter.com/scottgu</a></p> </font><img src=\"http://weblogs.asp.net/aggbug.aspx?PostID=7662855\" width=\"1\" height=\"1\"> "
//                    ]
//                },
//                {
//                    "title": "ASP.NET MVC 3: Razor’s @: and <text> syntax ",
//                    "headlineUrl": "http://weblogs.asp.net/scottgu/archive/2010/12/15/asp-net-mvc-3-razor-s-and-lt-text-gt-syntax.aspx",
//                    "publicationDateTimeDescriptor": "Thursday, 16 December 2010 2:48 AM GMT",
//                    "reference": {
//                        "type": "atom",
//                        "guid": "<id xmlns=\"http://www.w3.org/2005/Atom\">http://weblogs.asp.net/scottgu/archive/2010/12/15/asp-net-mvc-3-razor-s-and-lt-text-gt-syntax.aspx</id>",
//                        "externalUri": "http://weblogs.asp.net/scottgu/archive/2010/12/15/asp-net-mvc-3-razor-s-and-lt-text-gt-syntax.aspx"
//                    },
//                    "snippet": [
//                        "<font size=\"2\" face=\"arial\">   <p>This is another in a series of posts I’m doing that cover some of the new ASP.NET MVC 3 features:</p>    <ul>     <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/10/19/asp-net-mvc-3-new-model-directive-support-in-razor.aspx\" target=\"_blank\">New @model keyword in Razor (Oct 19th)</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/10/22/asp-net-mvc-3-layouts.aspx\" target=\"_blank\">Layouts with Razor (Oct 22nd)</a> </li>      <li><a href=\"http://weblogs.asp.net/scottgu/archive/2010/11/12/asp-net-mvc-3-server-side-comments-with-razor.aspx\" target=\"_blank\">Server-Side Comments with Razor (Nov 12th)</a> </li>      <li>Razor’s @: and &lt;text&gt; syntax (today) </li>   </ul>    <p>In today’s post I’m going to discuss two useful syntactical features of the new Razor view-engine – the @: and &lt;text&gt; syntax support.</p>    <h3><u>Fluid Coding with Razor</u></h3>    <h5></h5>    <p>ASP.NET MVC 3 ships with a new view-engine option called “Razor” (in addition to the existing .aspx view engine).&#160; You can learn more about Razor, why we are introducing it, and the syntax it supports from my <a href=\"http://weblogs.asp.net/scottgu/archive/2010/07/02/introducing-razor.aspx\" target=\"_blank\">Introducing Razor</a> blog post.&#160; </p>    <p>Razor minimizes the number of characters and keystrokes required when writing a view template, and enables a fast, fluid coding workflow. Unlike most template syntaxes, you do not need to interrupt your coding to explicitly denote the start and end of server blocks within your HTML. The Razor parser is smart enough to infer this from your code. This enables a compact and expressive syntax which is clean, fast and fun to type. </p>    <p>For example, the Razor snippet below can be used to iterate a list of products:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_6D82A5EB.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_0CC54CBF.png\" width=\"317\" height=\"154\" /></a> </p>    <p>When run, it generates output like:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_40F97605.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_2B2F8DA8.png\" width=\"358\" height=\"284\" /></a>&#160;</p>    <p>One of the techniques that Razor uses to implicitly identify when a code block ends is to look for tag/element content to denote the beginning of a content region.&#160; For example, in the code snippet above Razor automatically treated the inner &lt;li&gt;&lt;/li&gt; block within our foreach loop as an HTML content block because it saw the opening &lt;li&gt; tag sequence and knew that it couldn’t be valid C#.&#160; </p>    <p>This particular technique – using tags to identify content blocks within code – is one of the key ingredients that makes Razor so clean and productive with scenarios involving HTML creation. </p>    <h3><u>Using @: to explicitly indicate the start of content</u></h3>    <p>Not all content container blocks start with a tag element tag, though, and there are scenarios where the Razor parser can’t <em>implicitly</em> detect a content block.</p>    <p>Razor addresses this by enabling you to <em>explicitly</em> indicate the beginning of a line of content by using the @: character sequence within a code block.&#160; The @: sequence indicates that the line of content that follows should be treated as a content block:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_51253DFE.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_1D7CD1A0.png\" width=\"434\" height=\"82\" /></a> </p>    <p>As a more practical example, the below snippet demonstrates how we could output a “(Out of Stock!)” message next to our product name if the product is out of stock:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_756A2280.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_5B29B95C.png\" width=\"313\" height=\"240\" /></a> </p>    <p>Because I am not wrapping the (Out of Stock!) message in an HTML tag element, Razor can’t implicitly determine that the content within the @if block is the start of a content block.&#160; We are using the @: character sequence to explicitly indicate that this line within our code block should be treated as content.</p>    <p><u>Using Code Nuggets within @: content blocks</u></p>    <p>In addition to outputting static content, you can also have code nuggets embedded within a content block that is initiated using a @: character sequence.&#160; </p>    <p>For example, we have two @: sequences in the code snippet below:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_455FD0FF.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_395DE0CB.png\" width=\"378\" height=\"259\" /></a> </p>    <p>Notice how within the second @: sequence we are emitting the number of units left within the content block (e.g. - “(Only 3 left!”). We are doing this by embedding a @p.UnitsInStock code nugget within the line of content.</p>    <h3><u>Multiple Lines of Content</u></h3>    <p>Razor makes it easy to have multiple lines of content wrapped in an HTML element.&#160; For example, below the inner content of our @if container is wrapped in an HTML &lt;p&gt; element – which will cause Razor to treat it as content: </p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_483D7C6E.png\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_6E332CC4.png\" width=\"284\" height=\"167\" /></a> </p>    <p>For scenarios where the multiple lines of content are not wrapped by an outer HTML element, you can use multiple @: sequences:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_51814B26.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_37AD14F7.png\" width=\"290\" height=\"117\" /></a> </p>    <p>Alternatively, Razor also allows you to use a &lt;text&gt; element to explicitly identify content:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_6FEB8C0F.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_4EF81968.png\" width=\"448\" height=\"176\" /></a> </p>    <p>The &lt;text&gt; tag is an element that is treated specially by Razor. It causes Razor to interpret the inner contents of the &lt;text&gt; block as content, and to <u>not render</u> the containing &lt;text&gt; tag element (meaning only the inner contents of the &lt;text&gt; element will be rendered – the tag itself will not).&#160; This makes it convenient when you want to render multi-line content blocks that are not wrapped by an HTML element.&#160; </p>    <p>The &lt;text&gt; element can also optionally be used to denote single-lines of content, if you prefer it to the more concise @: sequence:</p>    <p><a href=\"http://weblogs.asp.net/blogs/scottgu/image_7C0D0636.png\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://weblogs.asp.net/blogs/scottgu/image_thumb_4D474D94.png\" width=\"327\" height=\"200\" /></a> </p>    <p>The above code will render the same output as the @: version we looked at earlier.&#160; Razor will automatically omit the &lt;text&gt; wrapping element from the output and just render the content within it.&#160; </p>    <h3><u>Summary</u></h3>    <p>Razor enables a clean and concise templating syntax that enables a very fluid coding workflow.&#160; Razor’s smart detection of &lt;tag&gt; elements to identify the beginning of content regions is one of the reasons that the Razor approach works so well with HTML generation scenarios, and it enables you to avoid having to explicitly mark the beginning/ending of content regions in about 95% of if/else and foreach scenarios. </p>    <p>Razor’s @: and &lt;text&gt; syntax can then be used for scenarios where you want to avoid using an HTML element within a code container block, and need to more explicitly denote a content region.</p>    <p>Hope this helps,</p>    <p>Scott</p>    <p><i>P.S. In addition to blogging, I am also now using Twitter for quick updates and to share links. Follow me at: </i><a href=\"http://www.twitter.com/scottgu\" target=\"_blank\">twitter.com/scottgu</a></p> </font><img src=\"http://weblogs.asp.net/aggbug.aspx?PostID=7662500\" width=\"1\" height=\"1\"> "
//                    ]
//                }
//            ]
//                }
//            }
//        });
       
//        jQuery('#PortalHeadlineListControl-0').dj_PortalHeadlineList({
//            "options": {
//                "maxNumHeadlinesToShow": 0,
//                "displaySnippets": 0,
//                "displayNoResultsToken": false,
//                "truncationType": 0,
//                "debug": false
//            },
//            "tokens": {},
//            "data": {
//                "hitCount": {
//                    "exp": 0,
//                    "isPositive": true,
//                    "rawText": {
//                        "Value": "10"
//                    },
//                    "displayText": {
//                        "Value": "10"
//                    },
//                    "Value": 10
//                },
//                "resultSet": {
//                    "count": {
//                        "exp": 0,
//                        "isPositive": true,
//                        "rawText": {
//                            "Value": "10"
//                        },
//                        "displayText": {
//                            "Value": "10"
//                        },
//                        "Value": 10
//                    },
//                    "first": {
//                        "exp": 0,
//                        "isPositive": true,
//                        "rawText": {
//                            "Value": "1"
//                        },
//                        "displayText": {
//                            "Value": "1"
//                        },
//                        "Value": 1
//                    },
//                    "duplicateCount": {
//                        "exp": 0,
//                        "isPositive": true,
//                        "rawText": {
//                            "Value": "0"
//                        },
//                        "displayText": {
//                            "Value": "0"
//                        },
//                        "Value": 0
//                    },
//                    "headlines": [
//                {
//                    "title": "Sprechen Sie ASP.NET MVC? ",
//                    "headlineUrl": "http://feeds.haacked.com/~r/haacked/~3/v2VIZKTLjh8/sprechen-sie-asp-net-mvc.aspx",
//                    "publicationDateTimeDescriptor": "Friday, 21 January 2011 9:11 PM GMT",
//                    "reference": {
//                        "type": "rss",
//                        "guid": "http://haacked.com/archive/2011/01/21/sprechen-sie-asp-net-mvc.aspx",
//                        "externalUri": "http://feeds.haacked.com/~r/haacked/~3/v2VIZKTLjh8/sprechen-sie-asp-net-mvc.aspx"
//                    },
//                    "snippet": [
//                        "<p>Ni hao ma!</p>  <p>Hot on the heels of <a title=\"ASP.NET MVC 3\" href=\"http://haacked.com/archive/2011/01/13/aspnetmvc3-released.aspx\">the RTM release of ASP.NET MVC 3</a>, we now have localized versions of ASP.NET MVC in 9 languages! The installation links within the Web Platform Installer was updated. If you want to download the installer yourself, you can go to the <a title=\"ASP.NET MVC 3 Download Details\" href=\"http://www.microsoft.com/downloads/en/details.aspx?FamilyID=d2928bc1-f48c-4e95-a064-2a455a22c8f6&amp;displaylang=en\">English download page</a> and select your language or click on one of the nine languages below:</p>  <ul>   <li><a title=\"Download ASP.NET MVC in Chinese (Simplified)\" href=\"http://www.microsoft.com/downloads/details.aspx?FamilyID=d2928bc1-f48c-4e95-a064-2a455a22c8f6&amp;displayLang=zh-cn\">Chinese (Simplified)</a> </li>    <li><a title=\"Download ASP.NET MVC in Chinese (Traditional)\" href=\"http://www.microsoft.com/downloads/details.aspx?FamilyID=d2928bc1-f48c-4e95-a064-2a455a22c8f6&amp;displayLang=zh-tw\">Chinese (Traditional)</a> </li>    <li><a title=\"Download ASP.NET MVC in French\" href=\"http://www.microsoft.com/downloads/details.aspx?FamilyID=d2928bc1-f48c-4e95-a064-2a455a22c8f6&amp;displayLang=fr\">French</a> </li>    <li><a title=\"Download ASP.NET MVC in German\" href=\"http://www.microsoft.com/downloads/details.aspx?FamilyID=d2928bc1-f48c-4e95-a064-2a455a22c8f6&amp;displayLang=de\">German</a> </li>    <li><a title=\"Download ASP.NET MVC in Italian\" href=\"http://www.microsoft.com/downloads/details.aspx?displaylang=it&amp;FamilyID=d2928bc1-f48c-4e95-a064-2a455a22c8f6\">Italian</a> </li>    <li><a title=\"Download ASP.NET MVC in Japanese\" href=\"http://www.microsoft.com/downloads/details.aspx?FamilyID=d2928bc1-f48c-4e95-a064-2a455a22c8f6&amp;displayLang=ja-nec\">Japanese</a> </li>    <li><a title=\"Download ASP.NET MVC in Korean\" href=\"http://www.microsoft.com/downloads/ko-kr/details.aspx?FamilyID=d2928bc1-f48c-4e95-a064-2a455a22c8f6\">Korean</a> </li>    <li><a title=\"Download ASP.NET MVC in Russian\" href=\"http://www.microsoft.com/downloads/ru-ru/details.aspx?displaylang=ru&amp;FamilyID=d2928bc1-f48c-4e95-a064-2a455a22c8f6\">Russian</a> </li>    <li><a title=\"Download ASP.NET MVC in Spanish\" href=\"http://www.microsoft.com/downloads/details.aspx?FamilyID=d2928bc1-f48c-4e95-a064-2a455a22c8f6&amp;displayLang=es\">Spanish</a> </li> </ul>  <p>If you speak one of these nine languages, you can now develop with ASP.NET MVC in your native language. Salud!</p>  <div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px\" id=\"scid:0767317B-992E-4b12-91E0-4F059A8CECA8:910b8182-c0e9-46ca-8cea-b9c4bd5c1ee4\" class=\"wlWriterEditableSmartContent\">Tags: <a href=\"http://haacked.com/tags/aspnetmvc/default.aspx\" rel=\"tag\">aspnetmvc</a>,<a href=\"http://haacked.com/tags/localization/default.aspx\" rel=\"tag\">localization</a>,<a href=\"http://haacked.com/tags/language/default.aspx\" rel=\"tag\">language</a></div><img src=\"http://haacked.com/aggbug/18759.aspx\" width=\"1\" height=\"1\" />\r\n<p><a href=\"http://feedads.g.doubleclick.net/~a/GvLCR2ZJnQA5PG0xkUf3tM68kIY/0/da\"><img src=\"http://feedads.g.doubleclick.net/~a/GvLCR2ZJnQA5PG0xkUf3tM68kIY/0/di\" border=\"0\" ismap=\"true\"></img></a><br/>\r\n<a href=\"http://feedads.g.doubleclick.net/~a/GvLCR2ZJnQA5PG0xkUf3tM68kIY/1/da\"><img src=\"http://feedads.g.doubleclick.net/~a/GvLCR2ZJnQA5PG0xkUf3tM68kIY/1/di\" border=\"0\" ismap=\"true\"></img></a></p><div class=\"feedflare\">\r\n<a href=\"http://feeds.haacked.com/~ff/haacked?a=v2VIZKTLjh8:cEWsKOOiQdA:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/haacked?i=v2VIZKTLjh8:cEWsKOOiQdA:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.haacked.com/~ff/haacked?a=v2VIZKTLjh8:cEWsKOOiQdA:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/haacked?i=v2VIZKTLjh8:cEWsKOOiQdA:V_sGLiPBpWU\" border=\"0\"></img></a> <a href=\"http://feeds.haacked.com/~ff/haacked?a=v2VIZKTLjh8:cEWsKOOiQdA:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/haacked?d=G79ilh31hkQ\" border=\"0\"></img></a>\r\n</div><img src=\"http://feeds.feedburner.com/~r/haacked/~4/v2VIZKTLjh8\" height=\"1\" width=\"1\"/> "
//                    ]
//                },
//                {
//                    "title": "NuGet Logo Stickers ",
//                    "headlineUrl": "http://feeds.haacked.com/~r/haacked/~3/fjN4XJkwsq4/nuget-logo-stickers.aspx",
//                    "publicationDateTimeDescriptor": "Thursday, 20 January 2011 5:54 PM GMT",
//                    "reference": {
//                        "type": "rss",
//                        "guid": "http://haacked.com/archive/2011/01/20/nuget-logo-stickers.aspx",
//                        "externalUri": "http://feeds.haacked.com/~r/haacked/~3/fjN4XJkwsq4/nuget-logo-stickers.aspx"
//                    },
//                    "snippet": [
//                        "<p>Last night I got a little treat in the mail from the <a title=\"StickerMule\" href=\"http://stickermule.com/\">kind folks at StickerMule</a>. I really appreciate how they <a title=\"Open Source support is not just code\" href=\"http://lozanotek.com/blog/archive/2010/08/05/open_source_support_is_not_just_code.aspx\">support open source projects</a> with such great stickers. </p>  <p><img style=\"background-image: none; border-right-width: 0px; margin: 0px 5px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"NuGet-Stickers-550x365\" border=\"0\" alt=\"NuGet-Stickers-550x365\" src=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/NuGet-Logo-Stickers_8914/NuGet-Stickers-550x365_2a301498-8cb6-469f-8104-d92a654789cd.jpg\" width=\"554\" height=\"369\" /> <em class=\"caption\">Look at all those little NuGets!</em></p>  <p>Just in time as I have a few events I’ll be going to where I can hand some out such as <a title=\"Web Camps Argentina/Brazil\" href=\"http://haacked.com/archive/2010/12/21/see-me-in-brazil-and-argentina-in-march.aspx\">Web Camps Argentina/Brazil</a>, the MVP Summit, and if I’m selected, Mix 2011.</p>  <p>After that, I need to figure out the best way to give the rest out since I won’t be travelling a whole lot this year. We’ll need to have a <a title=\"Nerd Dinner\" href=\"http://nerddinner.com/\">Nerd Dinner</a> or something. I’ll give some to <a title=\"Scott Hanselman\" href=\"http://hanselman.com/\">Scott Hanselman</a> since he travels a lot too.</p>  <div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px\" id=\"scid:0767317B-992E-4b12-91E0-4F059A8CECA8:6201129d-418d-4810-a1e2-bc1d12456a92\" class=\"wlWriterEditableSmartContent\">Tags: <a href=\"http://haacked.com/tags/nuget/default.aspx\" rel=\"tag\">nuget</a>,<a href=\"http://haacked.com/tags/stickers/default.aspx\" rel=\"tag\">stickers</a>,<a href=\"http://haacked.com/tags/stickermule/default.aspx\" rel=\"tag\">stickermule</a></div><img src=\"http://haacked.com/aggbug/18758.aspx\" width=\"1\" height=\"1\" />\r\n<p><a href=\"http://feedads.g.doubleclick.net/~a/zGbxrEDlj0faLrIRiwdgvq6PgtI/0/da\"><img src=\"http://feedads.g.doubleclick.net/~a/zGbxrEDlj0faLrIRiwdgvq6PgtI/0/di\" border=\"0\" ismap=\"true\"></img></a><br/>\r\n<a href=\"http://feedads.g.doubleclick.net/~a/zGbxrEDlj0faLrIRiwdgvq6PgtI/1/da\"><img src=\"http://feedads.g.doubleclick.net/~a/zGbxrEDlj0faLrIRiwdgvq6PgtI/1/di\" border=\"0\" ismap=\"true\"></img></a></p><div class=\"feedflare\">\r\n<a href=\"http://feeds.haacked.com/~ff/haacked?a=fjN4XJkwsq4:_iTfC9uBW8E:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/haacked?i=fjN4XJkwsq4:_iTfC9uBW8E:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.haacked.com/~ff/haacked?a=fjN4XJkwsq4:_iTfC9uBW8E:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/haacked?i=fjN4XJkwsq4:_iTfC9uBW8E:V_sGLiPBpWU\" border=\"0\"></img></a> <a href=\"http://feeds.haacked.com/~ff/haacked?a=fjN4XJkwsq4:_iTfC9uBW8E:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/haacked?d=G79ilh31hkQ\" border=\"0\"></img></a>\r\n</div><img src=\"http://feeds.feedburner.com/~r/haacked/~4/fjN4XJkwsq4\" height=\"1\" width=\"1\"/> "
//                    ]
//                },
//                {
//                    "title": "Building a Self Updating Site Using NuGet ",
//                    "headlineUrl": "http://feeds.haacked.com/~r/haacked/~3/Z7vDlt5eK7g/building-a-self-updating-site-using-nuget.aspx",
//                    "publicationDateTimeDescriptor": "Sunday, 16 January 2011 2:56 AM GMT",
//                    "reference": {
//                        "type": "rss",
//                        "guid": "http://haacked.com/archive/2011/01/15/building-a-self-updating-site-using-nuget.aspx",
//                        "externalUri": "http://feeds.haacked.com/~r/haacked/~3/Z7vDlt5eK7g/building-a-self-updating-site-using-nuget.aspx"
//                    },
//                    "snippet": [
//                        "<p>For those of you who enjoy learning about a technology via screencast, I’ve recorded a video to accompany and complement this blog post. The screencast shows you what this package does, and the blog post covers more of the implementation details.</p>  <p><object width=\"560\" height=\"340\"><param name=\"movie\" value=\"http://www.youtube.com/v/Opr_sKPMmcw?fs=1&amp;hl=en_US&amp;hd=1\" /><param name=\"allowFullScreen\" value=\"true\" /><param name=\"allowscriptaccess\" value=\"always\" /><embed src=\"http://www.youtube.com/v/Opr_sKPMmcw?fs=1&amp;hl=en_US&amp;hd=1\" type=\"application/x-shockwave-flash\" allowscriptaccess=\"always\" allowfullscreen=\"true\" width=\"560\" height=\"340\" /></object></p>  <p>A key feature of any package manager is the ability to let you know when there’s an update available for a package and let you easily install that update.</p>  <p>For example, when we deployed <a title=\"ASP.NET MVC 3 RC2 and NuGet RC released\" href=\"http://haacked.com/archive/2010/12/10/asp-net-mvc-3-release-candidate-2.aspx\">the release candidate for NuGet</a>, the Visual Studio Extension Manager displayed the release in the <strong>Updates</strong> section.</p>  <p><a href=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/Building-a-Self-Updating-Site-Using-NuGe_88E2/extension-manager-update-available_2.png\" rel=\"lightbox\"><img style=\"background-image: none; border-right-width: 0px; margin: 0px 5px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"Extension Manager Displaying NuGet as an Available Updates\" border=\"0\" alt=\"Extension Manager Displaying NuGet as an Available Updates\" src=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/Building-a-Self-Updating-Site-Using-NuGe_88E2/extension-manager-update-available_thumb.png\" width=\"550\" height=\"386\" /></a></p>  <p>Likewise, <a href=\"http://nuget.codeplex.com/\">NuGet</a> lets you easily see updates for installed packages. You can either run the <code>List-Package –Updates</code> command:</p>  <p><a href=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/Building-a-Self-Updating-Site-Using-NuGe_88E2/list-package-updates_2.png\" rel=\"lightbox\"><img style=\"background-image: none; border-right-width: 0px; margin: 0px 5px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"list-package-updates\" border=\"0\" alt=\"list-package-updates\" src=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/Building-a-Self-Updating-Site-Using-NuGe_88E2/list-package-updates_thumb.png\" width=\"550\" height=\"266\" /></a></p>  <p>Or you can click on the <strong>Updates</strong> node of the Add Package dialog:</p>  <p><a href=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/Building-a-Self-Updating-Site-Using-NuGe_88E2/updates-tab_2.png\" rel=\"lightbox\"><img style=\"background-image: none; border-right-width: 0px; margin: 0px 5px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"updates-tab\" border=\"0\" alt=\"updates-tab\" src=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/Building-a-Self-Updating-Site-Using-NuGe_88E2/updates-tab_thumb.png\" width=\"550\" height=\"319\" /></a></p>  <p>This feature is very handy when using Visual Studio to develop software such as <a title=\"Subtext's Project Homepage\" href=\"http://subtextproject.com/\">Subtext</a>, an open source blog engine I run in my spare time. But I started thinking about the users of Subtext and the hoops they jump through to upgrade Subtext itself. </p>  <p>Wouldn’t it be nice if Subtext could notify users when a new version is available and let them install it directly from the admin section of the running website completely outside of Visual Studio? Why yes, that would be nice.</p>  <h2>NuGet to the Rescue!</h2>  <p>Well my friends, that’s where <a title=\"NuGet CodePlex project\" href=\"http://nuget.codeplex.com/\">NuGet</a> comes into play. While most people know NuGet as a Visual Studio extension for pulling in and referencing libraries in your project, there’s a core API that’s completely agnostic of the hosting environment whether it be Visual Studio, PowerShell, or other. That core API is implemented in the assemly, <em><strong>NuGet.Core.dll</strong></em>.</p>  <p>This assembly allows us to take advantage of many of the features of NuGet outside of Visual Studio such as within a running web site!</p>  <p>The basic concept is this:</p>  <ol>   <li>Package up the first version of a website as a NuGet package. </li>    <li>Install this package in the website itself. I know, crazy talk, right? </li>    <li>Add a custom NuGet client that runs inside the website and checks for updates to the one package that’s installed. </li>    <li>When the next version of the website is ready, package it up and deploy it to the package feed for the website. Now, the users of the website can be notified that an update is available.s </li> </ol>  <p>I should point out a brief note about step #2, because this is going to be confusing. When I say install the package in the website, I mean to contrast that with installing a package into your Web Application Project for the website.</p>  <p>When you install a package into your Web Application Project, you use the standard NuGet client within Visual Studio. But when you deploy your website, the custom NuGet client within the live website will install the website package into a different location. In the example I’ll show you, that location is within the <code><em>App_Data\\packages</em></code> folder.</p>  <h2>The AutoUpdate Package</h2>  <p>Earlier this week, I gave an online presentation to the <a title=\"C4MVC Website\" href=\"http://www.c4mvc.net/\">Community For MVC (C4MVC)</a> user’s group on NuGet. During that talk I demonstrated a prototype package I wrote called <em>AutoUpdate</em>. This package adds a new area to the target website named “Installation”. It also adds a <em><a title=\"NuSpec Format Docs\" href=\"http://nuget.codeplex.com/documentation?title=Nuspec%20Format\">nuspec file</a></em> to the root of the application to make it easy to package up the website as a NuGet Package.</p>  <p>The steps to use the package are very easy.</p>  <ol>   <li><code>Install-Package AutoUpdate</code>. </li>    <li>In Web.config, modify the appSetting <code>PackageSource</code> to point to your package source. In my demo, I just pointed it to a folder on my machine for demonstration purposes. But this source is where you would publish updates for your package. </li>    <li>In the Package Console, run the <code>New-Package</code> script (This creates packages up the website in a NuPkg file). </li>    <li>Copy the package into the <em>App_Data\\Packages</em> folder of the site. </li>    <li>When you are ready to publish the next version as an update, increment the version number in the <em>nuspec</em> file and run the <code>New-Package</code> script again. </li>    <li>Deploy the updated package to the package source. </li>    <li>Now, when your users visit <em>/installation/updates/check</em> within the web site, they’ll be notified that an update is available and will be able to install the update. </li> </ol>  <h2>The Results</h2>  <p>Lets see the results of installing the <em>AutoUpdate</em> package and I’ll highlight some of the code that makes the package work. The following screenshot shows a very basic sample application I wrote.</p>  <p><img style=\"background-image: none; border-right-width: 0px; margin: 0px 5px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"home-page\" border=\"0\" alt=\"home-page\" src=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/Building-a-Self-Updating-Site-Using-NuGe_88E2/home-page_3.png\" width=\"581\" height=\"489\" /></p>  <p>The homepage here has a link to check for updates which links to an action within the area installed by the <em>AutoUpdate</em> package. That action contains the logic to check for updates for this application’s package.</p>  <p>Clicking on that link requires me to login first and then I get to this page:</p>  <p><a href=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/Building-a-Self-Updating-Site-Using-NuGe_88E2/update-available_2.png\" rel=\"lightbox\"><img style=\"background-image: none; border-right-width: 0px; margin: 0px 5px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"update-available\" border=\"0\" alt=\"update-available\" src=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/Building-a-Self-Updating-Site-Using-NuGe_88E2/update-available_thumb.png\" width=\"535\" height=\"480\" /></a></p>  <p>As I mentioned in the steps before, I packaged up the first version of the application as a package and “installed” it into the <em>App_Data</em> folder.</p>  <p>That yellow bar above is the result of an asynchronous JSON request to see if an update is available. It’s a little redundant on this page, but I could have it show up on every page within the admin as a notification.</p>  <h2>Under the Hood</h2>  <p>Let’s take a look at the controller that responds to that asynchronous request.</p>  <div class=\"dropshadow code\">   <div class=\"innerbox\">     <pre class=\"csharpcode\"><span class=\"kwrd\">public</span> ActionResult Check(<span class=\"kwrd\">string</span> packageId) {\r\n  var projectManager = GetProjectManager();\r\n  var installed = GetInstalledPackage(projectManager, packageId);\r\n  var update = projectManager.GetUpdate(installed);\r\n\r\n  var installationState = <span class=\"kwrd\">new</span> InstallationState {\r\n    Installed = installed,\r\n    Update = update\r\n  };\r\n\r\n  <span class=\"kwrd\">if</span> (Request.IsAjaxRequest()) {\r\n    var result = <span class=\"kwrd\">new</span> { \r\n      Version = (update != <span class=\"kwrd\">null</span> ? update.Version.ToString() : <span class=\"kwrd\">null</span>), \r\n      UpdateAvailable = (update != <span class=\"kwrd\">null</span>)\r\n    };\r\n    <span class=\"kwrd\">return</span> Json(result, JsonRequestBehavior.AllowGet);\r\n  }\r\n\r\n  <span class=\"kwrd\">return</span> View(installationState);\r\n}</pre>\r\n  </div>\r\n</div>\r\n\r\n<p class=\"clear\">The logic here is pretty straightforward. We grab a project manager. We then grab a reference to the current installed package representing this application. And then we check to see if there’s an update available. If there isn’t an update, the <code>GetUpdate</code> method returns false. There’s a couple of methods here that I wrote we need to look at.</p>\r\n\r\n<p>The first method very simply retrieves a project manager. I encapsulated it into a method since I call it in a couple different places.</p>\r\n\r\n<div class=\"dropshadow code\">\r\n  <div class=\"innerbox\">\r\n    <pre class=\"csharpcode\"><span class=\"kwrd\">private</span> WebProjectManager GetProjectManager() {\r\n  <span class=\"kwrd\">string</span> feedUrl = <span class=\"str\">@\"D:\\dev\\hg\\AutoUpdateDemo\\test-package-source\"</span>;\r\n  <span class=\"kwrd\">string</span> siteRoot = Request.MapPath(<span class=\"str\">\"~/\"</span>);\r\n\r\n  <span class=\"kwrd\">return</span> <span class=\"kwrd\">new</span> WebProjectManager(feedUrl, siteRoot);\r\n}</pre>\r\n  </div>\r\n</div>\r\n\r\n<p class=\"clear\">There’s a couple things to note here. I hard coded the <code>feedUrl</code> for demonstration purposes to point to a directory on my machine. This is a nice demonstrations that NuGet can simply treat a directory containing packages as a package source.</p>\r\n\r\n<p class=\"clear\">For your auto-updating web application, that should point to a custom feed you host specifically for your website. Or, point it to the official NuGet feed and put your website up there. It’s up to you.</p>\r\n\r\n<p>This method returns an instance of <code>WebProjectManager</code>. This is a class that I had to copy from the <em>System.Web.WebPages.Administration.dll</em> assembly because it’s marked internal. I don’t know why it’s internal, so I’ll see if we can fix that. It’s not my fault so please direct your hate mail elsewhere. <img style=\"border-bottom-style: none; border-right-style: none; border-top-style: none; border-left-style: none\" class=\"wlEmoticon wlEmoticon-smile\" alt=\"Smile\" src=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/Building-a-Self-Updating-Site-Using-NuGe_88E2/wlEmoticon-smile_2.png\" /></p>\r\n\r\n<p>What is the web project manager? Well the <a title=\"WebMatrix\" href=\"http://www.asp.net/WebMatrix\">WebMatrix product</a> which includes the ASP.NET Web Pages framework includes a web-based NuGet client for simple web sites. This allows packages to be installed into a running website. I’m just stealing that code and re-purposing it for my own needs.</p>\r\n\r\n<p>Now, we just need to use the project manager to query the package source to see if there’s an update available. This is really easy.</p>\r\n\r\n<div class=\"dropshadow code\">\r\n  <div class=\"innerbox\">\r\n    <pre class=\"csharpcode\"><span class=\"kwrd\">private</span> IPackage GetInstalledPackage(WebProjectManager projectManager, <br />    <span class=\"kwrd\">string</span> packageId) {\r\n  var installed = projectManager.GetInstalledPackages(<span class=\"str\">\"AutoUpdate.Web\"</span>)<br />    .Where(p =&gt; p.Id == packageId);\r\n\r\n  var installedPackages = installed.ToList();\r\n  <span class=\"kwrd\">return</span> installedPackages.First();\r\n}</pre>\r\n  </div>\r\n</div>\r\n\r\n<p class=\"clear\">What’s really cool is that we can just send a LINQ query to the server because we’re running OData on the server, it’ll run that query on the server and send us back the packages that fulfill the query. </p>\r\n\r\n<p>That’s all the code necessary to check for updates. The next step is to write an action method to handle the upgrade. That’s pretty easy too.</p>\r\n\r\n<div class=\"dropshadow code\">\r\n  <div class=\"innerbox\">\r\n    <pre class=\"csharpcode\"><span class=\"kwrd\">public</span> ActionResult Upgrade(<span class=\"kwrd\">string</span> packageId) {\r\n  var projectManager = GetProjectManager();\r\n  var installed = GetInstalledPackage(projectManager, packageId);\r\n  var update = projectManager.GetUpdate(installed);\r\n  projectManager.UpdatePackage(update);\r\n\r\n  <span class=\"kwrd\">if</span> (Request.IsAjaxRequest()) {\r\n    <span class=\"kwrd\">return</span> Json(<span class=\"kwrd\">new</span> { \r\n      Success = <span class=\"kwrd\">true</span>, \r\n      Version = update.Version.ToString()\r\n    }, JsonRequestBehavior.AllowGet);\r\n  }\r\n  <span class=\"kwrd\">return</span> View(update);\r\n}</pre>\r\n  </div>\r\n</div>\r\n\r\n<p class=\"clear\">This code starts off the same way that our code to check for the update does, but instead of simply returning the update, we call <code>projectManager.UpdatePackage</code> on the update. That method call updates the website to the latest version. </p>\r\n\r\n<p>The rest of the method is simply concerned with returning the result of the upgrade.</p>\r\n\r\n<h2>Try it Yourself</h2>\r\n\r\n<p>If you would like to try it yourself, please keep a one big caveat in mind. This is rough proof of concept quality code. I hope to shape it into something more robust over time and publish it in the main package feed. Until then, I’ll post it here for people to try out. If there’s a lot of interest, I’ll post the source on <a title=\"CodePlex open source hosting\" href=\"http://codeplex.com/\">CodePlex.com</a>.</p>\r\n\r\n<p>So with that in mind, give the <em>AutoUpdate</em> package a try</p>\r\n\r\n<blockquote>\r\n  <p><strong><font face=\"Consolas\">install-package AutoUpdate</font></strong></p>\r\n</blockquote>\r\n\r\n<p>and give me some feedback!</p>\r\n\r\n<div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px\" id=\"scid:0767317B-992E-4b12-91E0-4F059A8CECA8:384f72c1-fb4d-4fff-b404-1b25145d82bf\" class=\"wlWriterEditableSmartContent\">Tags: <a href=\"http://haacked.com/tags/aspnetmvc/default.aspx\" rel=\"tag\">aspnetmvc</a>, <a href=\"http://haacked.com/tags/asp.net/default.aspx\" rel=\"tag\">asp.net</a>, <a href=\"http://haacked.com/tags/nuget/default.aspx\" rel=\"tag\">nuget</a>, <a href=\"http://haacked.com/tags/subtext/default.aspx\" rel=\"tag\">subtext</a>, <a href=\"http://haacked.com/tags/autoupdate/default.aspx\" rel=\"tag\">autoupdate</a></div><img src=\"http://haacked.com/aggbug/18757.aspx\" width=\"1\" height=\"1\" />\r\n<p><a href=\"http://feedads.g.doubleclick.net/~a/3PgWuct1lR-D32mnJs6JGy5ebAY/0/da\"><img src=\"http://feedads.g.doubleclick.net/~a/3PgWuct1lR-D32mnJs6JGy5ebAY/0/di\" border=\"0\" ismap=\"true\"></img></a><br/>\r\n<a href=\"http://feedads.g.doubleclick.net/~a/3PgWuct1lR-D32mnJs6JGy5ebAY/1/da\"><img src=\"http://feedads.g.doubleclick.net/~a/3PgWuct1lR-D32mnJs6JGy5ebAY/1/di\" border=\"0\" ismap=\"true\"></img></a></p><div class=\"feedflare\">\r\n<a href=\"http://feeds.haacked.com/~ff/haacked?a=Z7vDlt5eK7g:yfRnnRlBrZ4:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/haacked?i=Z7vDlt5eK7g:yfRnnRlBrZ4:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.haacked.com/~ff/haacked?a=Z7vDlt5eK7g:yfRnnRlBrZ4:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/haacked?i=Z7vDlt5eK7g:yfRnnRlBrZ4:V_sGLiPBpWU\" border=\"0\"></img></a> <a href=\"http://feeds.haacked.com/~ff/haacked?a=Z7vDlt5eK7g:yfRnnRlBrZ4:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/haacked?d=G79ilh31hkQ\" border=\"0\"></img></a>\r\n</div><img src=\"http://feeds.feedburner.com/~r/haacked/~4/Z7vDlt5eK7g\" height=\"1\" width=\"1\"/> "
//                    ]
//                },
//                {
//                    "title": "ASP.NET MVC 3 and NuGet 1.0 Released (Including Source Code!) ",
//                    "headlineUrl": "http://feeds.haacked.com/~r/haacked/~3/hT7EuJiCPrU/aspnetmvc3-released.aspx",
//                    "publicationDateTimeDescriptor": "Thursday, 13 January 2011 1:30 PM GMT",
//                    "reference": {
//                        "type": "rss",
//                        "guid": "http://haacked.com/archive/2011/01/13/aspnetmvc3-released.aspx",
//                        "externalUri": "http://feeds.haacked.com/~r/haacked/~3/hT7EuJiCPrU/aspnetmvc3-released.aspx"
//                    },
//                    "snippet": [
//                        "<p>The changing of the year is a time of celebration as people reflect thoughtfully on the past year and grow excited with anticipation for what’s to come in the year ahead.</p>  <p>Today, there’s one less thing to anticipate as we announce the final release of ASP.NET MVC 3 and NuGet 1.0!</p>  <p><a title=\"Double Rainbow: CC by attribution\" href=\"http://www.flickr.com/photos/nicholas_t/281820290/\"><img style=\"background-image: none; border-right-width: 0px; margin: 0px 5px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"double-rainbow\" border=\"0\" alt=\"double-rainbow\" src=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/ASP.NET-MVC-3-RTM_11308/double-rainbow_3.jpg\" width=\"504\" height=\"379\" /></a>     <br /><em class=\"caption\">Oh yeah, this never gets old.</em></p>  <p><strong><a title=\"Install ASP.NET MVC 3 via Web PI\" href=\"http://www.microsoft.com/web/gallery/install.aspx?appid=MVC3\">Install it via Web Platform Installer</a></strong> or <a title=\"Download Details Page\" href=\"http://go.microsoft.com/fwlink/?LinkID=208140\">download the installer directly</a> to run it yourself.</p>  <p>Here are a few helpful resources for learning more about this release:</p>  <ul>   <li><a title=\"What's new in ASP.NET MVC 3\" href=\"http://asp.net/mvc/mvc3#overview\">What’s New in ASP.NET MVC 3</a> </li>    <li><a title=\"ASP.NET MVC 3 Release Notes\" href=\"http://www.asp.net/learn/whitepapers/mvc3-release-notes\">ASP.NET MVC 3 Release Notes</a> </li>    <li><a title=\"ASP.NET MVC 3 MSDN Docs\" href=\"http://go.microsoft.com/fwlink/?LinkId=205717\">MSDN Documentation</a> </li>    <li><a title=\"NuGet Project Homepage\" href=\"http://nuget.codeplex.com/\">NuGet Project Homepage</a> </li>    <li>The <a title=\"MVC Music Store\" href=\"http://www.asp.net/mvc/tutorials/mvc-music-store-part-1\">MVC Music Store Tutorial</a> and associated <a title=\"MVC Music Store CodePlex Project\" href=\"http://mvcmusicstore.codeplex.com\">CodePlex project</a>. </li> </ul>  <p>Those links will provide more details about what’s new in ASP.NET MVC 3, but I’ll give a quick bullet list of some of the deliciousness you have to look forward to. Again, visit the links above for full details.</p>  <ul>   <li><a title=\"Razor View Engine\" href=\"http://weblogs.asp.net/scottgu/archive/2010/07/02/introducing-razor.aspx\">Razor view engine</a> which provides a very streamlined syntax for writing clean and concise views. </li>    <li>Improved support for <a title=\"Service Location in ASP.NET MVC\" href=\"http://bradwilson.typepad.com/blog/2010/07/service-location-pt1-introduction.html\">Dependency Injection</a> </li>    <li>Global Action Filters </li>    <li>jQuery based <a title=\"Unobtrusive Ajax\" href=\"http://bradwilson.typepad.com/blog/2010/10/mvc3-unobtrusive-ajax.html\">Unobtrusive Ajax</a> and <a title=\"Unobtrusive Validation\" href=\"http://bradwilson.typepad.com/blog/2010/10/mvc3-unobtrusive-validation.html\">Client Validation</a>. </li>    <li><code>ViewBag</code> property for dynamic access to <code>ViewData</code>. </li>    <li>Support for view engine selection in the New Project and Add View dialog </li>    <li>And much more! </li> </ul>  <p>For those of you wishing to upgrade an ASP.NET MVC 2 application to ASP.NET MVC 3, check out Marcin Dobosz’s post about our <a title=\"MVC 3 Project Upgrader\" href=\"http://blogs.msdn.com/b/marcinon/archive/2011/01/13/mvc-3-project-upgrade-tool.aspx\">ASP.NET MVC 3 Projct upgrader tool</a>. The tool itself can be found on <a title=\"ASP.NET MVC 3 Project Upgrader\" href=\"http://aspnet.codeplex.com/releases/view/59008\">our CodePlex website</a>.</p>  <h2>NuGet 1.0 RTM</h2>  <p>Also included in this release is the 1.0 release of NuGet. I’ll let you in on a little secret though, if you upgraded NuGet via the Visual Studio Extension Gallery, then you’ve been running the 1.0 release for a little while now.</p>  <p>If you already have an older version of NuGet installed, the ASP.NET MVC 3 installer cannot upgrade it. Instead launch the VS Extension manager (within Visual Studio go to the <em>Tools</em> menu and select <em>Extension Manager</em>) and click on the <em>Updates</em> tab.</p>  <p>Just recently we announced the Beta release of our NuGet Gallery. Opening the door to the gallery will make it very easy to publish packages, so what are you waiting for!?</p>  <ul>   <li><a title=\"Introducing the NuGet Gallery\" href=\"http://blog.davidebbo.com/2011/01/introducing-nuget-gallery.html\">Introducing the NuGet Gallery</a> </li>    <li><a title=\"Uploading Packages\" href=\"http://haacked.com/archive/2011/01/12/uploading-packages-to-the-nuget-gallery.aspx\">Uploading Packages to the NuGet Gallery</a> </li> </ul>  <p>At this point I’m obligated to point out that everything about NuGet is open source and we’re <a title=\"NuGet UpForGrabs Items\" href=\"http://haacked.com/archive/2010/10/14/nupack-up-for-grabs-items.aspx\">always looking for contributors</a>. If you’re interested in contributing, but are finding impediments to it, let us know what we can improve to make it easier to get involved. Here’s the full list of OSS projects that make up the NuGet client and the server piece:</p>  <ul>   <li><a href=\"http://nuget.codeplex.com/\">http://nuget.codeplex.com/</a> This the project I run. </li>    <li><a href=\"http://orchardgallery.codeplex.com/\">http://orchardgallery.codeplex.com/</a> This project is an Orchard module that powers the front-end of Nuget.org (and the upcoming Orchard Gallery). Brad Millington of the Orchard Project heads that up. </li>    <li><a href=\"http://galleryserver.codeplex.com/\">http://galleryserver.codeplex.com/</a> powers the back-end services such as our OData package feed and the WCF endpoints for publishing packages. </li> </ul>  <h2>Show Me The Open Source Code!</h2>  <p>As we did with ASP.NET MVC 1.0 and ASP.NET MVC 2, the source for the ASP.NET MVC 3 assembly is being released under the OSI certified Ms-PL license. The <a title=\"ASP.NET MVC 3 Source Code under Ms-PL\" href=\"http://download.microsoft.com/download/3/4/A/34A8A203-BD4B-44A2-AF8B-CA2CFCB311CC/mvc3-rtm-mspl.zip\">Ms-PL licensed source code</a> is available as a zip file at the download center.</p>  <p>If you’d like to see the source code for ASP.NET Web Pages and our MVC Futures project, we posted <a title=\"Source Code\" href=\"http://aspnet.codeplex.com/releases/view/58781\">that on CodePlex.com too</a>.</p>  <h2>What’s Next?</h2>  <p>So what’s next? Well you can probably count as well as I can, so it’s time to start getting planning for ASP.NET MVC 4 and NuGet 2.0 in full gear. Though this time around, with NuGet now available, we have the means to easily distribute a lot of smaller releases throughout the year as packages, with the idea that many of these may make their way back into the core product. I’m sure you’ll see a lot of experimentation in that regard.</p>  <div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px\" id=\"scid:0767317B-992E-4b12-91E0-4F059A8CECA8:edfa5c28-84a7-4139-b1fc-8be98a280fd8\" class=\"wlWriterEditableSmartContent\">Tags: <a href=\"http://haacked.com/tags/asp.net/default.aspx\" rel=\"tag\">asp.net</a>, <a href=\"http://haacked.com/tags/aspnetmvc/default.aspx\" rel=\"tag\">aspnetmvc</a>, <a href=\"http://haacked.com/tags/nuget-gallery/default.aspx\" rel=\"tag\">nuget-gallery</a>, <a href=\"http://haacked.com/tags/oss/default.aspx\" rel=\"tag\">oss</a></div><img src=\"http://haacked.com/aggbug/18756.aspx\" width=\"1\" height=\"1\" />\r\n<p><a href=\"http://feedads.g.doubleclick.net/~a/sdULtfJuq3jfeMPyIqE8KRCVhdQ/0/da\"><img src=\"http://feedads.g.doubleclick.net/~a/sdULtfJuq3jfeMPyIqE8KRCVhdQ/0/di\" border=\"0\" ismap=\"true\"></img></a><br/>\r\n<a href=\"http://feedads.g.doubleclick.net/~a/sdULtfJuq3jfeMPyIqE8KRCVhdQ/1/da\"><img src=\"http://feedads.g.doubleclick.net/~a/sdULtfJuq3jfeMPyIqE8KRCVhdQ/1/di\" border=\"0\" ismap=\"true\"></img></a></p><div class=\"feedflare\">\r\n<a href=\"http://feeds.haacked.com/~ff/haacked?a=hT7EuJiCPrU:iWJpCKQSDF0:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/haacked?i=hT7EuJiCPrU:iWJpCKQSDF0:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.haacked.com/~ff/haacked?a=hT7EuJiCPrU:iWJpCKQSDF0:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/haacked?i=hT7EuJiCPrU:iWJpCKQSDF0:V_sGLiPBpWU\" border=\"0\"></img></a> <a href=\"http://feeds.haacked.com/~ff/haacked?a=hT7EuJiCPrU:iWJpCKQSDF0:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/haacked?d=G79ilh31hkQ\" border=\"0\"></img></a>\r\n</div><img src=\"http://feeds.feedburner.com/~r/haacked/~4/hT7EuJiCPrU\" height=\"1\" width=\"1\"/> "
//                    ]
//                },
//                {
//                    "title": "Uploading Packages To The NuGet Gallery ",
//                    "headlineUrl": "http://feeds.haacked.com/~r/haacked/~3/d3n_Bf3DHOI/uploading-packages-to-the-nuget-gallery.aspx",
//                    "publicationDateTimeDescriptor": "Wednesday, 12 January 2011 9:54 AM GMT",
//                    "reference": {
//                        "type": "rss",
//                        "guid": "http://haacked.com/archive/2011/01/12/uploading-packages-to-the-nuget-gallery.aspx",
//                        "externalUri": "http://feeds.haacked.com/~r/haacked/~3/d3n_Bf3DHOI/uploading-packages-to-the-nuget-gallery.aspx"
//                    },
//                    "snippet": [
//                        "<p>As <a title=\"David Ebbo's Blog\" href=\"http://blog.davidebbo.com/\" rel=\"co-worker friend met\">David Ebbo</a> blogged today, the <a title=\"Introducing the NuGet Gallery\" href=\"http://blog.davidebbo.com/2011/01/introducing-nuget-gallery.html\">NuGet Gallery is now open to the public</a>. The goal of the NuGet Gallery is to be the hub for NuGet users and package authors alike. Users should be able to search and discover packages with detailed information on each one and eventually rate them. Package authors can register for an API key and upload packages.</p>  <p>We’re not quite where we want to be with the gallery, but we’re moving in the right direction. If you want to see us get there more quickly, feel free to lend a hand. The gallery is running on <a title=\"Orchard Gallery\" href=\"http://orchardgallery.codeplex.com/\">fully open source code</a>!</p>  <p>In this blog post, I wanted to cover step by step what it takes to create and upload a package.</p>  <h2>Create Your Package</h2>  <p>Well the first step is to create a package so you have something to upload. If you’re well acquainted with creating packages, feel free to skip this section, but you may learn a few tips if you stick with it.</p>  <p>I’ll start with a simple example that I did recently. The <a title=\"XML-RPC.NET\" href=\"http://www.xml-rpc.net/\">XML-RPC.NET library</a> by Charles Cook is very useful for implementing XML-RPC Services and clients. It powers the <a title=\"MetaWeblog API\" href=\"http://www.xmlrpc.com/metaWeblogApi\">MetaWeblog API</a> support in <a title=\"Subtext Blog Engine\" href=\"http://subtextproject.com/\">Subtext</a>. As a courtesy, I recently asked Charles if he would mind if I created a NuGet package for his library for him, to which he said yes!</p>  <p>So on my machine, I created a folder named after the latest 2.5 release, <em>xmlrpcnet.2.5.0</em>. Here’s the directory structure I ended up with.</p>  <p><img style=\"background-image: none; border-right-width: 0px; margin: 0px 5px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"package-folder-structure\" border=\"0\" alt=\"package-folder-structure\" src=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/beeb4862c29d_13D5F/package-folder-structure_3.png\" width=\"304\" height=\"114\" /></p>  <p>By convention, the <em>lib</em> folder is where you place assemblies that will get added as referenced assemblies to the target project when installing this package. Since this assembly only supports .NET 2.0 and above, I put it in the net20 subfolder of the lib folder.</p>  <p>The other required file is the <a title=\"NuSpec Format\" href=\"http://nuget.codeplex.com/documentation?title=Nuspec%20Format\">.nuspec file</a>, which contains the metadata used to build the package. Let’s take a look at the contents of that file.</p>  <div class=\"dropshadow code\">   <div class=\"innerbox\">     <pre class=\"csharpcode\"><span class=\"kwrd\">&lt;?</span><span class=\"html\">xml</span> <span class=\"attr\">version</span><span class=\"kwrd\">=\"1.0\"</span> <span class=\"attr\">encoding</span><span class=\"kwrd\">=\"utf-8\"</span>?<span class=\"kwrd\">&gt;</span> \r\n<span class=\"kwrd\">&lt;</span><span class=\"html\">package</span><span class=\"kwrd\">&gt;</span> \r\n  <span class=\"kwrd\">&lt;</span><span class=\"html\">metadata</span><span class=\"kwrd\">&gt;</span> \r\n    <span class=\"kwrd\">&lt;</span><span class=\"html\">id</span><span class=\"kwrd\">&gt;</span>xmlrpcnet<span class=\"kwrd\">&lt;/</span><span class=\"html\">id</span><span class=\"kwrd\">&gt;</span> \r\n    <span class=\"kwrd\">&lt;</span><span class=\"html\">version</span><span class=\"kwrd\">&gt;</span>2.5.0<span class=\"kwrd\">&lt;/</span><span class=\"html\">version</span><span class=\"kwrd\">&gt;</span> \r\n    <span class=\"kwrd\">&lt;</span><span class=\"html\">authors</span><span class=\"kwrd\">&gt;</span>Charles Cook<span class=\"kwrd\">&lt;/</span><span class=\"html\">authors</span><span class=\"kwrd\">&gt;</span> \r\n    <span class=\"kwrd\">&lt;</span><span class=\"html\">owners</span><span class=\"kwrd\">&gt;</span>Phil Haack<span class=\"kwrd\">&lt;/</span><span class=\"html\">owners</span><span class=\"kwrd\">&gt;</span>\r\n    <span class=\"kwrd\">&lt;</span><span class=\"html\">description</span><span class=\"kwrd\">&gt;</span>A client and server XML-RPC library for .Net.<span class=\"kwrd\">&lt;/</span><span class=\"html\">description</span><span class=\"kwrd\">&gt;</span> \r\n    <span class=\"kwrd\">&lt;</span><span class=\"html\">projectUrl</span><span class=\"kwrd\">&gt;</span>http://www.xml-rpc.net/<span class=\"kwrd\">&lt;/</span><span class=\"html\">projectUrl</span><span class=\"kwrd\">&gt;</span>\r\n    <span class=\"kwrd\">&lt;</span><span class=\"html\">licenseUrl</span><span class=\"kwrd\">&gt;</span>http://www.opensource.org/licenses/mit-license.php<span class=\"kwrd\">&lt;/</span><span class=\"html\">licenseUrl</span><span class=\"kwrd\">&gt;</span>\r\n    <span class=\"kwrd\">&lt;</span><span class=\"html\">tags</span><span class=\"kwrd\">&gt;</span>xml-rpc xml rpc .net20 .net35 .net40<span class=\"kwrd\">&lt;/</span><span class=\"html\">tags</span><span class=\"kwrd\">&gt;</span>\r\n    <span class=\"kwrd\">&lt;</span><span class=\"html\">language</span><span class=\"kwrd\">&gt;</span>en-US<span class=\"kwrd\">&lt;/</span><span class=\"html\">language</span><span class=\"kwrd\">&gt;</span> \r\n  <span class=\"kwrd\">&lt;/</span><span class=\"html\">metadata</span><span class=\"kwrd\">&gt;</span> \r\n<span class=\"kwrd\">&lt;/</span><span class=\"html\">package</span><span class=\"kwrd\">&gt;</span></pre>\r\n  </div>\r\n</div>\r\n\r\n<p class=\"clear\">There’s a couple of things I want to call out here. Notice that I specified Charles Cook in the <em>authors</em> element, but put my own name in the <em>owners</em> element. Authors represent the authors of the library within the package, while the owner typically represents the person who created the package itself. This allows people to know who to contact if there’s a problem with the package vs a problem with the library within the package.</p>\r\n\r\n<p class=\"clear\">In general, we hope that most of the time, the authors and the owners are one and the same. For example, someday I’d love to help Charles take ownership of his packages. Until that day, I’m happy to create and upload them myself.</p>\r\n\r\n<p class=\"clear\">If somebody creates a package for a library that you authored and uploads it to NuGet, assume it’s a favor they did to get your library out there. If you wish to take ownership, feel free to contact them and they can assign the packages over to you. This is the type of thing we’d like to see resolved by the community and not via some policy rules on the gallery site. This is a case where the gallery could do a lot to make this sort of interaction easier, but does not have such features in place yet.</p>\r\n\r\n<p class=\"clear\">With this in place, it’s time to create the package. To do that, we’ll need the <a title=\"NuGet Console Application\" href=\"http://nuget.codeplex.com/releases/57303/download/197743\">NuGet.exe console application</a>. Copy it to a utility directory and add it to your path, or copy it to the parent folder of the package folder.</p>\r\n\r\n<p class=\"clear\"><img style=\"background-image: none; border-right-width: 0px; margin: 0px 5px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"nuget-dir\" border=\"0\" alt=\"nuget-dir\" src=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/beeb4862c29d_13D5F/nuget-dir_3.png\" width=\"165\" height=\"43\" /></p>\r\n\r\n<p class=\"clear\">Now, open a command prompt and navigate to the directory and run the <em>nuget pack</em> command.</p>\r\n\r\n<p class=\"clear\"><code>nuget pack path-to-nuspec-file</code></p>\r\n\r\n<p class=\"clear\">Here’s a screenshot of what I did:</p>\r\n\r\n<p class=\"clear\"><a href=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/beeb4862c29d_13D5F/nuget-pack_4.png\" rel=\"lightbox\"><img style=\"border-right-width: 0px; margin: 0px 5px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"nuget-pack\" border=\"0\" alt=\"nuget-pack\" src=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/beeb4862c29d_13D5F/nuget-pack_thumb_1.png\" width=\"549\" height=\"396\" /></a></p>\r\n\r\n<p class=\"clear\"><strong>Pro tip:</strong> What I really did was add a batch file I call <em>build.cmd</em> in the same directory that I put the <em>NuGet.exe</em> file. The contents of the batch file is a single line:</p>\r\n\r\n<div class=\"dropshadow code\">\r\n  <div class=\"innerbox\"><code>for /r %%x in (*.nuspec) do nuget pack \"%%x\" -o d:\\packages\\</code> </div>\r\n</div>\r\n\r\n<p class=\"clear\">What that does is run the <em>nuget pack</em> command on every subdirectory of the current directory. I have a folder that contains multiple packages that I’m working on and I can easily rebuild them all with this batch file.</p>\r\n\r\n<p class=\"clear\">Ok, so now we have the package, let’s publish it! But first, we have to create an account on the NuGet Gallery website.</p>\r\n\r\n<h2>Register and Upload</h2>\r\n\r\n<p>The first step is to register for an account at <a title=\"http://nuget.org/Users/Account/Register\" href=\"http://nuget.org/Users/Account/Register\">http://nuget.org/Users/Account/Register</a>. Once you have an account, click on the <a title=\"Contribute Tab\" href=\"http://nuget.org/Contribute/Index\">Contribute tab</a>. This page gives you several options for managing packages (<em>click to enlarge</em>).</p>\r\n\r\n<p><a href=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/beeb4862c29d_13D5F/contribute-tab_2.png\" rel=\"lightbox\"><img style=\"background-image: none; border-right-width: 0px; margin: 0px 5px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"contribute-tab\" border=\"0\" alt=\"contribute-tab\" src=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/beeb4862c29d_13D5F/contribute-tab_thumb.png\" width=\"554\" height=\"374\" /></a></p>\r\n\r\n<p>To upload your package, click on the <a title=\"New Submission Page\" href=\"http://nuget.org/Contribute/NewSubmission\">Add New Package link</a>.</p>\r\n\r\n<p><a href=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/beeb4862c29d_13D5F/upload-package_2.png\" rel=\"lightbox\"><img style=\"background-image: none; border-right-width: 0px; margin: 0px 5px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"upload-package\" border=\"0\" alt=\"upload-package\" src=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/beeb4862c29d_13D5F/upload-package_thumb.png\" width=\"550\" height=\"370\" /></a></p>\r\n\r\n<p>Notice there’s two options. At this point, you can simply browse for the package you created and upload it and you’re done. In a matter of a few minutes, it should appear in the public feed.</p>\r\n\r\n<p>The second option allows you to host your package file in a location other than the NuGet gallery such as <a title=\"CodePlex\" href=\"http://codeplex.com/\">CodePlex.com</a>, <a title=\"Google Code\" href=\"http://code.google.com/\">Google Code</a>, etc. Simply enter the the direct URL to the package and when someone tries to install your package, the NuGet client will redirect the download request to the external package URL.</p>\r\n\r\n<h2>Submit From The Command Line</h2>\r\n\r\n<p>Ok, that’s pretty easy. But you’re a command line junky, right? Or perhaps you’re automating package submission.</p>\r\n\r\n<p>Well you’re in luck, it’s pretty easy to submit your package directly from the command line. But first, you’re going to need an API key.</p>\r\n\r\n<p>Visit the My Account page (<a title=\"http://nuget.org/Contribute/MyAccount\" href=\"http://nuget.org/Contribute/MyAccount\">http://nuget.org/Contribute/MyAccount</a>) and make a note of your API key (click image below to enlarge it).</p>\r\n\r\n<p><a href=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/beeb4862c29d_13D5F/nuget-gallery-api-key_2.png\" rel=\"lightbox\"><img style=\"background-image: none; border-right-width: 0px; margin: 0px 5px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"nuget-gallery-api-key\" border=\"0\" alt=\"nuget-gallery-api-key\" src=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/beeb4862c29d_13D5F/nuget-gallery-api-key_thumb.png\" width=\"550\" height=\"370\" /></a></p>\r\n\r\n<p>Be sure to keep that API key secret! Don’t give it out like I just did. If you do happen to accidentally leak your API key, you can click the <em>Generate New Key</em> button, again like I just did. <em>You didn’t really think I’d let you know my API key, did you?</em></p>\r\n\r\n<p>Now, using the same <em>NuGet.exe</em> command line tool we downloaded earlier, we can push the package to the gallery using the <em>nuget push</em> command.</p>\r\n<code>\r\n  <p>nuget push path-to-nupkg api-key –source http://packages.nuget.org/v1/</p>\r\n</code>\r\n\r\n<p>Here’s a screenshot of the exact command I ran.</p>\r\n\r\n<p><img style=\"background-image: none; border-right-width: 0px; margin: 0px 5px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"publishing-nupkg\" border=\"0\" alt=\"publishing-nupkg\" src=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/beeb4862c29d_13D5F/publishing-nupkg_3.png\" width=\"549\" height=\"396\" /></p>\r\n\r\n<p>Shoot! There I go showing off my secret API key again! I better regenerate that.</p>\r\n\r\n<p>As you can see, this command uploaded my package and published it to the feed. I can login and visit the <a title=\"My Packages\" href=\"http://nuget.org/Contribute/MyPackages\">Manage My Contributions</a> page to see this package and even make changes to it if necessary.</p>\r\n\r\n<h2>Moving Forward</h2>\r\n\r\n<p>We’re still working out the kinks in the site and hopefully, by the time you read this blog post, this particular issue will be fixed. Also, we’re planning to update the NuGet.exe client and make the NuGet gallery be the default source so that the <code>–source</code> flag is not required.</p>\r\n\r\n<p>As David mentioned, the site was primarily developed as a CodePlex.com project by the Nimble Pros in a very short amount of time. There’s two major components to the site. There’s the <a title=\"Orchard Gallery\" href=\"http://orchardgallery.codeplex.com/\">front-end Orchard Gallery</a> built as an <a title=\"Orchard\" href=\"http://orchard.codeplex.com/\">Orchard</a> module. This powers the gallery website that you see when you visit <a href=\"http://nuget.org/\">http://nuget.org/</a>. There’s also <a title=\"Gallery Server Project\" href=\"http://galleryserver.codeplex.com/\">the back-end gallery server</a> which hosts the OData feed used to browse and search for packages as well as the WCF service endpoint for publishing packages.</p>\r\n\r\n<p>Each of these components are open source projects which means if you really wanted to, you could take the code and host your own gallery website. Orchard will be using the same code to host its own gallery of Orchard modules.</p>\r\n\r\n<p>Also, these projects accept contributions! I personally haven’t spent much time in the code, but I hope to find some free time to chip in myself.</p>\r\n\r\n<div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px\" id=\"scid:0767317B-992E-4b12-91E0-4F059A8CECA8:55aa603b-17e7-40ff-92af-fea19fbc8108\" class=\"wlWriterEditableSmartContent\">Tags: <a href=\"http://haacked.com/tags/nuget/default.aspx\" rel=\"tag\">nuget</a>, <a href=\"http://haacked.com/tags/orchard/default.aspx\" rel=\"tag\">orchard</a>, <a href=\"http://haacked.com/tags/nuget-gallery/default.aspx\" rel=\"tag\">nuget-gallery</a></div><img src=\"http://haacked.com/aggbug/18755.aspx\" width=\"1\" height=\"1\" />\r\n<p><a href=\"http://feedads.g.doubleclick.net/~a/vDvrRZZbub78wFRSplpE-T5qTAA/0/da\"><img src=\"http://feedads.g.doubleclick.net/~a/vDvrRZZbub78wFRSplpE-T5qTAA/0/di\" border=\"0\" ismap=\"true\"></img></a><br/>\r\n<a href=\"http://feedads.g.doubleclick.net/~a/vDvrRZZbub78wFRSplpE-T5qTAA/1/da\"><img src=\"http://feedads.g.doubleclick.net/~a/vDvrRZZbub78wFRSplpE-T5qTAA/1/di\" border=\"0\" ismap=\"true\"></img></a></p><div class=\"feedflare\">\r\n<a href=\"http://feeds.haacked.com/~ff/haacked?a=d3n_Bf3DHOI:5a40QZELFuU:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/haacked?i=d3n_Bf3DHOI:5a40QZELFuU:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.haacked.com/~ff/haacked?a=d3n_Bf3DHOI:5a40QZELFuU:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/haacked?i=d3n_Bf3DHOI:5a40QZELFuU:V_sGLiPBpWU\" border=\"0\"></img></a> <a href=\"http://feeds.haacked.com/~ff/haacked?a=d3n_Bf3DHOI:5a40QZELFuU:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/haacked?d=G79ilh31hkQ\" border=\"0\"></img></a>\r\n</div><img src=\"http://feeds.feedburner.com/~r/haacked/~4/d3n_Bf3DHOI\" height=\"1\" width=\"1\"/> "
//                    ]
//                },
//                {
//                    "title": "Grouping Routes Part 2 ",
//                    "headlineUrl": "http://feeds.haacked.com/~r/haacked/~3/RKD7DwGW630/grouping-routes-part-2.aspx",
//                    "publicationDateTimeDescriptor": "Sunday, 09 January 2011 11:43 PM GMT",
//                    "reference": {
//                        "type": "rss",
//                        "guid": "http://haacked.com/archive/2011/01/09/grouping-routes-part-2.aspx",
//                        "externalUri": "http://feeds.haacked.com/~r/haacked/~3/RKD7DwGW630/grouping-routes-part-2.aspx"
//                    },
//                    "snippet": [
//                        "<p>In <a title=\"Grouping Routes\" href=\"http://haacked.com/archive/2010/12/02/grouping-routes-part-1.aspx\">part 1 of this series</a>, we looked at the scenario for grouping routes and how we can implement matching incoming requests with a grouped set of routes.</p>  <p>In this blog post, I’ll flesh out the implementation of URL Generation.</p>  <h3>Url Generation Implementation</h3>  <p>URL generation for a group route is tricky, especially when using named routes because the individual routes that make up the group aren’t in the main route collection.</p>  <p>As I noted before, the only route that’s actually added to the route table is the <code>GroupRoute</code>. Thus if you supply a route name for one of the child routes (such as “r1”) during URL generation, you’ll get a null URL.</p>  <p>Interestingly enough, in this case, if you don’t use named routes when using URL generation, everything works just fine. However, since I <a title=\"Named Routes to the rescue\" href=\"http://haacked.com/archive/2010/11/21/named-routes-to-the-rescue.aspx\">heartily recommend using named routes all the time</a>, I should cover that situation. </p>  <p>So what we need to do here is supply two route names during URL generation. One for the group route, and one for the child route. How do we supply the child route name? We’re going to have to supply it in the route values. Here’s an example of generating an URL in this manner:</p>  <div class=\"dropshadow code\">   <div class=\"innerbox\">     <pre class=\"csharpcode\"><span class=\"asp\">@</span>Html.RouteLink(<span class=\"str\">\"Hello World Child\"</span>, <span class=\"str\">\"group\"</span>,<br /> <span class=\"kwrd\">new</span> { __RouteName = <span class=\"str\">\"hello-world3\"</span> }) </pre>\r\n  </div>\r\n</div>\r\n\r\n<p class=\"clear\">Note that the second parameter, “group”, refers to the route name for the <code>GroupRoute</code> that we registered. The route value <em>__RouteName</em> is passed into the <code>GroupRoute</code> so that it can look in its own collection of routes for the matching child route. </p>\r\n\r\n<p>In the following code sample, I’ve highlighted the essential part of the URL generation logic within the <code>GroupRoute</code> class.</p>\r\n\r\n<div class=\"dropshadow code\">\r\n  <div class=\"innerbox\">\r\n    <pre class=\"csharpcode\"><span class=\"kwrd\">public</span> <span class=\"kwrd\">override</span> VirtualPathData GetVirtualPath(RequestContext \r\n    requestContext, RouteValueDictionary values) {\r\n  <font style=\"background-color: #ffff00\"><span class=\"kwrd\">string</span> routeName = values.GetRouteName();\r\n  var virtualPath = ChildRoutes.GetVirtualPath(requestContext, \r\n    routeName <span class=\"kwrd\">as</span> <span class=\"kwrd\">string</span>, values.WithoutRouteName());\r\n</font>  <span class=\"kwrd\">if</span> (virtualPath != <span class=\"kwrd\">null</span>) {\r\n    <span class=\"kwrd\">string</span> rewrittenVirtualPath = \r\n      virtualPath.VirtualPath.WithoutApplicationPath(requestContext);\r\n    <span class=\"kwrd\">string</span> directoryPath = VirtualPath.WithoutTildePrefix(); <span class=\"rem\">// remove tilde</span>\r\n    rewrittenVirtualPath = rewrittenVirtualPath.Insert(0, \r\n    directoryPath.WithoutTrailingSlash());\r\n    virtualPath.VirtualPath = rewrittenVirtualPath.Remove(0, 1);\r\n  }\r\n\r\n  <span class=\"kwrd\">return</span> virtualPath;\r\n}</pre>\r\n  </div>\r\n</div>\r\n\r\n<p class=\"clear\">The code grabs the route name for the child route from the supplied route values. Notice that I’m using an extension method I wrote in my <a title=\"Get the route name for a route\" href=\"http://haacked.com/archive/2010/11/28/getting-the-route-name-for-a-route.aspx\">last blog post</a>. </p>\r\n\r\n<p>The block of code after the highlighted portion rewrites the virtual path back to the <em>full</em> virtual path for the parent <em>GroupRoute</em>. This ensures that the virtual path that’s eventually returned to the caller will actually work, since the individual routes within the group don’t have a clue that they’re within a group.</p>\r\n\r\n<p>In a follow-up blog post, I’ll wrap up this series and provide access to the full source code.</p>\r\n\r\n<div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px\" id=\"scid:0767317B-992E-4b12-91E0-4F059A8CECA8:8815324b-903a-405a-9c31-956c74edf173\" class=\"wlWriterEditableSmartContent\">Tags: <a href=\"http://haacked.com/tags/routing/default.aspx\" rel=\"tag\">routing</a>, <a href=\"http://haacked.com/tags/grouproute/default.aspx\" rel=\"tag\">grouproute</a></div><img src=\"http://haacked.com/aggbug/18754.aspx\" width=\"1\" height=\"1\" />\r\n<p><a href=\"http://feedads.g.doubleclick.net/~a/ydKCmtKMRxPc7SdDyovQStlpgqM/0/da\"><img src=\"http://feedads.g.doubleclick.net/~a/ydKCmtKMRxPc7SdDyovQStlpgqM/0/di\" border=\"0\" ismap=\"true\"></img></a><br/>\r\n<a href=\"http://feedads.g.doubleclick.net/~a/ydKCmtKMRxPc7SdDyovQStlpgqM/1/da\"><img src=\"http://feedads.g.doubleclick.net/~a/ydKCmtKMRxPc7SdDyovQStlpgqM/1/di\" border=\"0\" ismap=\"true\"></img></a></p><div class=\"feedflare\">\r\n<a href=\"http://feeds.haacked.com/~ff/haacked?a=RKD7DwGW630:u-heOJmgezM:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/haacked?i=RKD7DwGW630:u-heOJmgezM:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.haacked.com/~ff/haacked?a=RKD7DwGW630:u-heOJmgezM:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/haacked?i=RKD7DwGW630:u-heOJmgezM:V_sGLiPBpWU\" border=\"0\"></img></a> <a href=\"http://feeds.haacked.com/~ff/haacked?a=RKD7DwGW630:u-heOJmgezM:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/haacked?d=G79ilh31hkQ\" border=\"0\"></img></a>\r\n</div><img src=\"http://feeds.feedburner.com/~r/haacked/~4/RKD7DwGW630\" height=\"1\" width=\"1\"/> "
//                    ]
//                },
//                {
//                    "title": "Razor Syntax Quick Reference ",
//                    "headlineUrl": "http://feeds.haacked.com/~r/haacked/~3/q-fB2p99_F8/razor-syntax-quick-reference.aspx",
//                    "publicationDateTimeDescriptor": "Friday, 07 January 2011 7:13 AM GMT",
//                    "reference": {
//                        "type": "rss",
//                        "guid": "http://haacked.com/archive/2011/01/06/razor-syntax-quick-reference.aspx",
//                        "externalUri": "http://feeds.haacked.com/~r/haacked/~3/q-fB2p99_F8/razor-syntax-quick-reference.aspx"
//                    },
//                    "snippet": [
//                        "<p>I gave a presentation to another team at Microsoft yesterday on ASP.NET MVC and the Razor view engine and someone asked if there was a reference for the Razor syntax.</p>  <p>It turns out, there is a pretty <a title=\"Razor Guide\" href=\"http://www.asp.net/webmatrix/tutorials/2-introduction-to-asp-net-web-programming-using-the-razor-syntax\">good guide about Razor</a> available, but it’s focused on covering the basics of web programming using Razor and inline pages and not just the Razor syntax.</p>  <p>So I thought it might be handy to write up a a really concise quick reference about the Razor syntax.</p>  <table class=\"matrix\"><tbody>     <tr>       <th valign=\"top\" width=\"183\">Syntax/Sample</th>        <th valign=\"top\" width=\"149\">Razor</th>        <th valign=\"top\" width=\"217\">Web Forms Equivalent (or remarks)</th>     </tr>      <tr>       <td valign=\"top\" width=\"183\">Code Block</td>        <td valign=\"top\" width=\"149\">         <pre class=\"csharpcode\"><span class=\"asp\">@{</span> \r\n  <span class=\"rzr\"><span class=\"kwrd\">int</span> x = 123;</span> \r\n  <span class=\"rzr\"><span class=\"kwrd\">string</span> y = <span class=\"str\">\"because.\"</span>;</span>\r\n<span class=\"asp\">}</span></pre>\r\n      </td>\r\n\r\n      <td valign=\"top\" width=\"217\">\r\n        <pre class=\"csharpcode\"><span class=\"asp\">&lt;%</span>\r\n  <span class=\"kwrd\">int</span> x = 123; \r\n  <span class=\"kwrd\">string</span> y = <span class=\"str\">\"because.\"</span>; \r\n<span class=\"asp\">%&gt;</span></pre>\r\n      </td>\r\n    </tr>\r\n\r\n    <tr>\r\n      <td valign=\"top\" width=\"183\">Expression (Html Encoded)</td>\r\n\r\n      <td valign=\"top\" width=\"149\">\r\n        <pre class=\"csharpcode\"><span class=\"kwrd\">&lt;</span><span class=\"html\">span</span><span class=\"kwrd\">&gt;</span><span class=\"asp\">@</span><span class=\"rzr\">model.Message</span><span class=\"kwrd\">&lt;/</span><span class=\"html\">span</span><span class=\"kwrd\">&gt;</span></pre>\r\n      </td>\r\n\r\n      <td valign=\"top\" width=\"217\">\r\n        <pre class=\"csharpcode\"><span class=\"kwrd\">&lt;</span><span class=\"html\">span</span><span class=\"kwrd\">&gt;</span><span class=\"asp\">&lt;%</span>: model.Message <span class=\"asp\">%&gt;</span><span class=\"kwrd\">&lt;/</span><span class=\"html\">span</span><span class=\"kwrd\">&gt;</span></pre>\r\n      </td>\r\n    </tr>\r\n\r\n    <tr>\r\n      <td valign=\"top\" width=\"183\">Expression (Unencoded)</td>\r\n\r\n      <td valign=\"top\" width=\"149\">\r\n        <pre class=\"csharpcode\"><span class=\"kwrd\">&lt;</span><span class=\"html\">span</span><span class=\"kwrd\">&gt;<br /></span><span class=\"asp\">@</span><span class=\"rzr\">Html.Raw(model.Message)<br /></span><span class=\"kwrd\">&lt;/</span><span class=\"html\">span</span><span class=\"kwrd\">&gt;</span></pre>\r\n      </td>\r\n\r\n      <td valign=\"top\" width=\"217\">\r\n        <pre class=\"csharpcode\"><span class=\"kwrd\">&lt;</span><span class=\"html\">span</span><span class=\"kwrd\">&gt;</span><span class=\"asp\">&lt;%</span>= model.Message <span class=\"asp\">%&gt;</span><span class=\"kwrd\">&lt;/</span><span class=\"html\">span</span><span class=\"kwrd\">&gt;</span></pre>\r\n      </td>\r\n    </tr>\r\n\r\n    <tr>\r\n      <td valign=\"top\" width=\"183\">Combining Text and markup</td>\r\n\r\n      <td valign=\"top\" width=\"149\">\r\n        <pre class=\"csharpcode\"><span class=\"asp\">@</span><span class=\"rzr\"><span class=\"kwrd\">foreach</span>(var item <span class=\"kwrd\">in</span> items) {</span>\r\n  <span class=\"kwrd\">&lt;</span><span class=\"html\">span</span><span class=\"kwrd\">&gt;</span><span class=\"asp\">@</span><span class=\"rzr\">item.Prop</span><span class=\"kwrd\">&lt;/</span><span class=\"html\">span</span><span class=\"kwrd\">&gt;</span> \r\n<span class=\"rzr\">}</span></pre>\r\n      </td>\r\n\r\n      <td valign=\"top\" width=\"217\">\r\n        <pre class=\"csharpcode\"><span class=\"asp\">&lt;%</span> <span class=\"kwrd\">foreach</span>(var item <span class=\"kwrd\">in</span> items) { <span class=\"asp\">%&gt;</span>\r\n  <span class=\"kwrd\">&lt;</span><span class=\"html\">span</span><span class=\"kwrd\">&gt;</span>&lt;%: item.Prop %&gt;<span class=\"kwrd\">&lt;/</span><span class=\"html\">span</span><span class=\"kwrd\">&gt;</span>\r\n<span class=\"asp\">&lt;%</span> } <span class=\"asp\">%&gt;</span></pre>\r\n      </td>\r\n    </tr>\r\n\r\n    <tr>\r\n      <td valign=\"top\" width=\"183\">Mixing code and Plain text</td>\r\n\r\n      <td valign=\"top\" width=\"149\">\r\n        <pre class=\"csharpcode\"><span class=\"asp\">@</span><span class=\"rzr\"><span class=\"kwrd\">if</span> (foo) {</span>\r\n  <span class=\"kwrd\">&lt;</span><span class=\"html\">text</span><span class=\"kwrd\">&gt;</span>Plain Text<span class=\"kwrd\">&lt;/</span><span class=\"html\">text</span><span class=\"kwrd\">&gt;</span> \r\n<span class=\"rzr\">}</span></pre>\r\n      </td>\r\n\r\n      <td valign=\"top\" width=\"217\">\r\n        <pre class=\"csharpcode\"><span class=\"asp\">&lt;%</span> <span class=\"kwrd\">if</span> (foo) { <span class=\"asp\">%&gt;</span> \r\n  Plain Text \r\n<span class=\"asp\">&lt;%</span> } <span class=\"asp\">%&gt;</span></pre>\r\n      </td>\r\n    </tr>\r\n\r\n    <tr>\r\n      <td valign=\"top\" width=\"183\">Mixing code and plain text (alternate)</td>\r\n\r\n      <td valign=\"top\" width=\"149\">\r\n        <pre class=\"csharpcode\"><span class=\"asp\">@</span><span class=\"rzr\"><span class=\"kwrd\">if</span> (foo) {</span>\r\n  <span class=\"asp\">@:</span>Plain Text is <span class=\"asp\">@</span><span class=\"rzr\">bar</span>\r\n<span class=\"rzr\">}</span></pre>\r\n      </td>\r\n\r\n      <td valign=\"top\" width=\"217\">Same as above</td>\r\n    </tr>\r\n\r\n    <tr>\r\n      <td valign=\"top\" width=\"183\">Email Addresses</td>\r\n\r\n      <td valign=\"top\" width=\"149\">\r\n        <pre class=\"csharpcode\">Hi philha@example.com</pre>\r\n      </td>\r\n\r\n      <td valign=\"top\" width=\"217\">Razor recognizes basic email format and is smart enough not to treat the @ as a code delimiter</td>\r\n    </tr>\r\n\r\n    <tr>\r\n      <td valign=\"top\" width=\"183\">Explicit Expression</td>\r\n\r\n      <td valign=\"top\" width=\"149\">\r\n        <pre class=\"csharpcode\"><span class=\"kwrd\">&lt;</span><span class=\"html\">span</span><span class=\"kwrd\">&gt;</span>ISBN<span class=\"asp\">@(</span><span class=\"rzr\">isbnNumber</span><span class=\"asp\">)</span><span class=\"kwrd\">&lt;/</span><span class=\"html\">span</span><span class=\"kwrd\">&gt;</span></pre>\r\n      </td>\r\n\r\n      <td valign=\"top\" width=\"217\">In this case, we need to be explicit about the expression by using parentheses.</td>\r\n    </tr>\r\n\r\n    <tr>\r\n      <td valign=\"top\" width=\"183\">Escaping the @ sign</td>\r\n\r\n      <td valign=\"top\" width=\"149\">\r\n        <pre class=\"csharpcode\"><span class=\"kwrd\">&lt;</span><span class=\"html\">span</span><span class=\"kwrd\">&gt;</span>In Razor, you use the \r\n@@foo to display the value \r\nof foo<span class=\"kwrd\">&lt;/</span><span class=\"html\">span</span><span class=\"kwrd\">&gt;</span></pre>\r\n      </td>\r\n\r\n      <td valign=\"top\" width=\"217\">@@ renders a single @ in the response.</td>\r\n    </tr>\r\n    <tr>\r\n      <td valign=\"top\" width=\"183\">Server side Comment</td>\r\n\r\n      <td valign=\"top\" width=\"149\">\r\n        <pre class=\"csharpcode\"><span class=\"asp\">@*</span>\r\n<span class=\"rem\">This is a server side \r\nmultiline comment </span>\r\n<span class=\"asp\">*@</span></pre>\r\n      </td>\r\n\r\n      <td valign=\"top\" width=\"217\">\r\n        <pre class=\"csharpcode\"><span class=\"asp\">&lt;%</span><span class=\"rem\">--\r\nThis is a server side \r\nmultiline comment\r\n--</span><span class=\"asp\">%&gt;</span></pre>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td valign=\"top\" width=\"183\">Mixing expressions and text</td>\r\n\r\n      <td valign=\"top\" width=\"149\">\r\n        <pre class=\"csharpcode\">Hello <span class=\"asp\">@</span>title. <span class=\"asp\">@</span>name.</pre>\r\n      </td>\r\n\r\n      <td valign=\"top\" width=\"217\">\r\n        <pre class=\"csharpcode\">Hello <span class=\"asp\">&lt;%</span>: title <span class=\"asp\">%&gt;</span>. <span class=\"asp\">&lt;%</span>: name <span class=\"asp\">%&gt;</span>.</pre>\r\n      </td>\r\n    </tr>\r\n\r\n  </tbody></table>\r\n\r\n<p>Notice in the last example that Razor is smart enough to know that the ending period is a literal text punctuation and not meant to indicate that it’s trying to call a method or property of the expression.</p>\r\n\r\n<p>Let me know if there are other examples you think should be placed in this guide. I hope you find this helpful.</p>\r\n\r\n<div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px\" id=\"scid:0767317B-992E-4b12-91E0-4F059A8CECA8:5c68c00c-ef55-4c04-8c65-aedbe6270614\" class=\"wlWriterSmartContent\">Tags: <a href=\"http://haacked.com/tags/aspnetmvc/default.aspx\" rel=\"tag\">aspnetmvc</a>, <a href=\"http://haacked.com/tags/asp.net/default.aspx\" rel=\"tag\">asp.net</a>, <a href=\"http://haacked.com/tags/razor/default.aspx\" rel=\"tag\">razor</a></div><img src=\"http://haacked.com/aggbug/18753.aspx\" width=\"1\" height=\"1\" />\r\n<p><a href=\"http://feedads.g.doubleclick.net/~a/p_RubKfQbnw1LI9494B2xn23Af8/0/da\"><img src=\"http://feedads.g.doubleclick.net/~a/p_RubKfQbnw1LI9494B2xn23Af8/0/di\" border=\"0\" ismap=\"true\"></img></a><br/>\r\n<a href=\"http://feedads.g.doubleclick.net/~a/p_RubKfQbnw1LI9494B2xn23Af8/1/da\"><img src=\"http://feedads.g.doubleclick.net/~a/p_RubKfQbnw1LI9494B2xn23Af8/1/di\" border=\"0\" ismap=\"true\"></img></a></p><div class=\"feedflare\">\r\n<a href=\"http://feeds.haacked.com/~ff/haacked?a=q-fB2p99_F8:EqAVteDRBZQ:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/haacked?i=q-fB2p99_F8:EqAVteDRBZQ:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.haacked.com/~ff/haacked?a=q-fB2p99_F8:EqAVteDRBZQ:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/haacked?i=q-fB2p99_F8:EqAVteDRBZQ:V_sGLiPBpWU\" border=\"0\"></img></a> <a href=\"http://feeds.haacked.com/~ff/haacked?a=q-fB2p99_F8:EqAVteDRBZQ:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/haacked?d=G79ilh31hkQ\" border=\"0\"></img></a>\r\n</div><img src=\"http://feeds.feedburner.com/~r/haacked/~4/q-fB2p99_F8\" height=\"1\" width=\"1\"/> "
//                    ]
//                },
//                {
//                    "title": "Top 10 Blogging Clich&eacute;s of 2010 ",
//                    "headlineUrl": "http://feeds.haacked.com/~r/haacked/~3/jKB7VT766YQ/top-ten-blogging-cliches.aspx",
//                    "publicationDateTimeDescriptor": "Monday, 03 January 2011 5:25 AM GMT",
//                    "reference": {
//                        "type": "rss",
//                        "guid": "http://haacked.com/archive/2011/01/02/top-ten-blogging-cliches.aspx",
//                        "externalUri": "http://feeds.haacked.com/~r/haacked/~3/jKB7VT766YQ/top-ten-blogging-cliches.aspx"
//                    },
//                    "snippet": [
//                        "<p>Dear Reader, I apologize for not blogging much lately. I know, total #fail, but I’ve been so f***ing busy lately. I thought I would start off this new year right with a top ten list FTW!</p>  <p>Without further ado, I present my list of the top 10 blogging clichés of 2010. These are things yours truly would <strong>never ever</strong> do, right?<a title=\"Shore and rocks near Front Street in Lahaina by Beneeb on sxc.hu\" href=\"http://www.sxc.hu/photo/1245904\"><img style=\"border-right-width: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; margin-left: auto; border-left-width: 0px; margin-right: auto\" title=\"stones-on-a-beach\" border=\"0\" alt=\"stones-on-a-beach\" src=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/MyTop10BloggingClichesof2009_123D2/stones-on-a-beach_3.jpg\" width=\"554\" height=\"416\" /></a></p>  <ol>   <li><strong>The random photo:</strong> Starting off the list is a very common one that even gets the very best bloggers, including a random photo in the blog post completely irrelevant to the topic at hand as if trying to meet a stock photography quota for the month. Perhaps you own stock in the <a title=\"Stock Exchange\" href=\"http://sxc.hu/\">stock xchng</a> (or perhaps I should!). At least <em>try</em> to make the photo slightly relevant so it adds something to the post. </li>    <li><strong>“Dear Reader”: </strong>Is there a more patronizingly boorish phrase to use to refer to those reading your blog than “Dear Reader”. Do you know if the person reading your blog is dear? Seriously, he or she could be a total prick who’s only redeeming quality is that he or she clicks on your AdSense link so you can buy a cup of coffee in two years. Do you realize that the person reading the blog might be me? I’m a total jerk and I don’t click on your ad links, but you just complimented me. Ha! When I read a blog post that uses the phrase “Dear Reader” what I see in my head is “Dear random person that I hope clicks on my ads”. I’ve used it <a title=\"Dear Reader\" href=\"http://haacked.com/search.aspx?q=Dear%20Reader\">at least five times</a>. Don’t be like me. </li>    <li><strong>Apologizing for not posting regularly:</strong> I have a dirty little secret, nobody gives a flying f*** whether or not you’re posting regularly (unless you’re <a title=\"XKCD.com\" href=\"http://xkcd.com/\">Randall Munroe</a>, then we absolutely do care), <a title=\"Stop Apologizing for not blogging\" href=\"http://melly.me/stop-apologizing-for-not-blogging\">so stop apologizing for it</a>. They’re all using some sort of RSS aggregator in the first place so they didn’t even have a clue to how lame you are up until the point that just reminded them. Great job Sport! </li>    <li><strong>Using f*** when you really meant to say “fuck”:</strong> It’s just a fucking word! If you really mean to use it for emphasis, just fucking use it! Nobody, in the history of humanity, ever lost his sight, hearing, or sanity from reading the word fuck. Not to mention that you’re not fooling anyone when you type f***. Do you really have such a low opinion of your readers that you think they’re sitting there thinking “Gee, I wonder wonder what word that could be? Good thing he asterisked the fuck out of that word because I might go blind if he had spelled it out.” </li>    <li><strong>Overusing the word “fuck”:</strong> Whoa nelly! Just because it’s ok to unmask those asterisks from time to time doesn’t mean we should go overboard here. Slowly back away from the “F” key. The word is meant to be very lightly sprinkled to pack a powerful punch when you need it. It’s not meant to be poured liberally like salt in a futile attempt to salvage taste from your awful cooking. </li>    <li><strong>“Wah wah, I’m so busy.”: </strong>You know what, we’re all fucking busy, so shut your pie hole about it already. </li>    <li><strong>“Hinting at a super secret project you can’t reveal just yet.”:</strong> Yeah yeah, we get it. You know something we don’t know so you’re going to rub our faces in it like a bad little doggy who just did a no-no. Bad doggy! This may even be the reason you’re “so busy”. Well I have news for you…wait for it. Wait for it. Nobody cares! Maybe your project really is the next big thing since that little plastic triangle thingy that holds the pizza box up away from the cheese. Really, that thing is awesome! Maybe your project is better than that, but if you can’t talk about it yet, you’re just wasting bandwidth. Once again, shut your pie hole until you <em>can</em> talk about it. </li>    <li><strong>Top ten lists, for all values of “ten”: </strong>Top ten (or eight, or eleven, or any number) lists are a cop out. You know it, I know it, and your readers know it. Top ten lists are what happens when a blogger is in the middle of writing a blog post apologizing for not posting regularly and thinks, “What the f*** am I apologizing for?! I know, I’ll write a top ten list of the varieties of lint I found in my belly button.” Yeah, you’ll make the front page of Reddit, but at what cost of your soul, dear reader? What cost? </li>    <li><strong>Name Dropping: </strong>So just last year I was chatting with my friends <a title=\"CodingHorror\" href=\"http://codinghorror.com/\">Jeff Atwood</a> (aka CodingHorror), George Clooney, and <a title=\"Miguel's Blog\" href=\"http://tirania.org/blog/\">Miguel De Icaza</a> (aka Mr. Mono) about how lame it is to name drop. There’s nothing lamer than that except for name dropping about fictitious events that never happened. Seriously, nobody is going to change their opinion of how lame you are just because you happened to have seen the neighbor of the third cousin of <a title=\"Bruce Schneier's Blog\" href=\"http://www.schneier.com/\">Bruce Schneier</a> from across the conference hall floor (but if you did, high five right atcha!). </li>    <li><strong>“FTW!”</strong> Yes, we all know you’re so hard core and like to express your enthusiasm while simultaneously tweaking your nose at the powers that be, but seriously now. You’re all growed up and it’s time to lay this one to rest, in the same way you no longer play with your GI Joes except when the wife has the kids at her mother’s. One exception to this rule, it’s perfectly fine to use it on Twitter, but only because of its brevity and only until we come up with something better. </li> </ol>  <p>Yes, some of these clichés were also noted back in 2007 as <a title=\"Blogging Cliches\" href=\"http://www.codinghorror.com/blog/archives/000834.html\">reported in CodingHorror</a>, but apparently nobody got the memo as they were still going strong in 2010. Now it is 2011 and I’ve made a new years resolution to avoid such blogging clichés. How am I doing so far?</p>  <p>Probably about as well as my resolution to stop procrastinating, which I made <em>after</em> the new year, so I’m not off to a good start on that one either. <img style=\"border-bottom-style: none; border-right-style: none; border-top-style: none; border-left-style: none\" class=\"wlEmoticon wlEmoticon-winkingsmile\" alt=\"Winking smile\" src=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/MyTop10BloggingClichesof2009_123D2/wlEmoticon-winkingsmile_2.png\" /></p>  <p class=\"footnote\"><em>Before you flame me about this blog post, this was all in good fun. I love top 10 lists for binary values of 10!</em></p>  <div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px\" id=\"scid:0767317B-992E-4b12-91E0-4F059A8CECA8:66b2ea40-5df8-4eec-8929-f928ebcb5a63\" class=\"wlWriterEditableSmartContent\">Tags: <a href=\"http://haacked.com/tags/humor/default.aspx\" rel=\"tag\">humor</a>, <a href=\"http://haacked.com/tags/meta-blogging/default.aspx\" rel=\"tag\">meta-blogging</a>, <a href=\"http://haacked.com/tags/meta-meta-blogging/default.aspx\" rel=\"tag\">meta-meta-blogging</a></div><img src=\"http://haacked.com/aggbug/18752.aspx\" width=\"1\" height=\"1\" />\r\n<p><a href=\"http://feedads.g.doubleclick.net/~a/l51fxyMLNnwcLOFESO01qwFzw94/0/da\"><img src=\"http://feedads.g.doubleclick.net/~a/l51fxyMLNnwcLOFESO01qwFzw94/0/di\" border=\"0\" ismap=\"true\"></img></a><br/>\r\n<a href=\"http://feedads.g.doubleclick.net/~a/l51fxyMLNnwcLOFESO01qwFzw94/1/da\"><img src=\"http://feedads.g.doubleclick.net/~a/l51fxyMLNnwcLOFESO01qwFzw94/1/di\" border=\"0\" ismap=\"true\"></img></a></p><div class=\"feedflare\">\r\n<a href=\"http://feeds.haacked.com/~ff/haacked?a=jKB7VT766YQ:C2_mtpcp-Ns:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/haacked?i=jKB7VT766YQ:C2_mtpcp-Ns:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.haacked.com/~ff/haacked?a=jKB7VT766YQ:C2_mtpcp-Ns:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/haacked?i=jKB7VT766YQ:C2_mtpcp-Ns:V_sGLiPBpWU\" border=\"0\"></img></a> <a href=\"http://feeds.haacked.com/~ff/haacked?a=jKB7VT766YQ:C2_mtpcp-Ns:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/haacked?d=G79ilh31hkQ\" border=\"0\"></img></a>\r\n</div><img src=\"http://feeds.feedburner.com/~r/haacked/~4/jKB7VT766YQ\" height=\"1\" width=\"1\"/> "
//                    ]
//                },
//                {
//                    "title": "End Of Year 2010 Extravaganza ",
//                    "headlineUrl": "http://feeds.haacked.com/~r/haacked/~3/ATU_a_sDKkI/end-of-year-2010-extravaganza.aspx",
//                    "publicationDateTimeDescriptor": "Friday, 31 December 2010 12:46 AM GMT",
//                    "reference": {
//                        "type": "rss",
//                        "guid": "http://haacked.com/archive/2010/12/30/end-of-year-2010-extravaganza.aspx",
//                        "externalUri": "http://feeds.haacked.com/~r/haacked/~3/ATU_a_sDKkI/end-of-year-2010-extravaganza.aspx"
//                    },
//                    "snippet": [
//                        "<p>It’s the end of the year and it’s time for the annual year in review blog post. I know what you’re thinking, but don’t worry, you remembered to turn off the stove before leaving.</p>  <p>You’re also probably thinking, “do we really need an end of year blog post from everyone?”. I asked on <a title=\"Quora\" href=\"http://quora.com/\">Quora</a>, and the answer is a definitive no, we don’t. This is my absolutely <strong>unnecessary</strong> self indulgent end of year blog post. I wouldn’t have it any other way, would you?</p>  <p>I didn’t want to settle with an ordinary “Ho hum bore you to tears 2010 Year in Review Blog Post”. Mainly because I hate to see you cry. Really. Please stop. What I wanted was nothing short of nuclear supernova fireworks, dancing panda bears, and double rainbow fish that shoot sparks out their butts. In short, a blow your monocle off spectacular end of year review blog post!</p>  <p>Unfortunately, I waited too long and everybody was booked. So all I could get was this dancing panda.</p> <object width=\"480\" height=\"385\"><param name=\"movie\" value=\"http://www.youtube.com/v/CtMweQ3cIIQ?fs=1&amp;hl=en_US\" /><param name=\"allowFullScreen\" value=\"true\" /><param name=\"allowscriptaccess\" value=\"always\" /><embed src=\"http://www.youtube.com/v/CtMweQ3cIIQ?fs=1&amp;hl=en_US\" type=\"application/x-shockwave-flash\" allowscriptaccess=\"always\" allowfullscreen=\"true\" width=\"480\" height=\"385\" /></object>  <p>This has been a great but somewhat crazy year for me. It’s kind of insane to think that in the same year we released the RTM for ASP.NET MVC 2, we also released not one, but count ‘em, two release candidates for ASP.NET MVC 3!</p>  <p>Also in this year, we started a new open source package manager, <a title=\"NuGet Package Manager\" href=\"http://nuget.codeplex.com/\">NuGet</a>, which <em>accepts external contributions</em>. My how the pendulum swings over here.</p>  <h2>What I Liked In 2010</h2>  <p>2010 presented me with a lot of things to like.</p>  <ul>   <li><strong>Podcast:</strong> In general, I feel the same way <a title=\"Podcasting == Verbal Incontinence\" href=\"http://www.hanselman.com/blog/PodcastingVerbalIncontinence.aspx\">Scott Hanselman feels about Podcasts</a> when he said “Sorry folks, PodCasting = Verbal Incontinence.  I'm just not feeling it.” This makes for delicious irony that he’s involved in my favorite podcast of 2010, <a title=\"This Developer's Life\" href=\"http://thisdeveloperslife.com/\">This Developer’s Life</a>. Started by friend <a title=\"Rob Conery's Blog\" href=\"http://blog.wekeroad.com/\">Rob Conery</a>, I describe it as focusing on the more human side of software and it’s pretty much the only podcast I subscribe to. </li>    <li><strong>Video:</strong> <a title=\"Motivation\" href=\"http://www.youtube.com/watch?v=u6XAPnuFjJc&amp;feature=player_embedded\">RSA Animate – Drive: The surprising truth about what motivates us</a>. I absolutely love how this video uses a unique animation style to present on the topic of motivation. </li>    <li><strong>Book:</strong> I didn’t read a lot of books in 2010, but one that stood out was <a title=\"Rocket Surgery Made Easy on Amazon.com\" href=\"http://www.amazon.com/gp/product/0321657292?ie=UTF8&amp;tag=youvebeenhaac-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0321657292\">Rocket Surgery Made Easy: The Do-It-Yourself Guide to Finding and Fixing Usability Problems</a>, which is Steve Krug’s worthy follow-up to <a title=\"Don't Make Me Think\" href=\"http://www.amazon.com/exec/obidos/ASIN/0321344758/youvebeenhaac-20\">Don’t Make Me Think</a>. You owe it to the users of your software to read and absorb these books.</li>    <li><strong>Blog:</strong> Nothing really did it for me this year. As always, I enjoyed <a title=\"CodingHorror\" href=\"http://codinghorror.com/\">CodingHorror</a>, but I found a read a much wider variety of blog posts due to Twitter and unfortunately didn’t remember to bookmark my favorite of the year. I’ll try better next year. <img style=\"border-bottom-style: none; border-right-style: none; border-top-style: none; border-left-style: none\" class=\"wlEmoticon wlEmoticon-smile\" alt=\"Smile\" src=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/Year-In-Review-2010-Edition_12A01/wlEmoticon-smile_2.png\" /></li>    <li><strong>Gadgets:</strong> This is a tie between my iPhone 4 and my <a title=\"Kinect on Amazon.com\" href=\"http://www.amazon.com/gp/product/B002BSA298?ie=UTF8&amp;tag=youvebeenhaac-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B002BSA298\">Kinect</a>. I am on my phone all the time. Perhaps too much. Ok, definitely too much. I now have a WP7 Samsung Focus at home, but I haven’t had any time to play with it yet. We recently got a Kinect and I am totally hooked on <a title=\"Dance Central\" href=\"http://www.amazon.com/gp/product/B002I0HBOI?ie=UTF8&amp;tag=youvebeenhaac-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B002I0HBOI\">Dance Central</a>. The part that really hooked me is that they show where your score ranks among the scores of your friends on X-Box live after each dance. I’m determined to destroy my friends with my fresh moves. </li>    <li><strong>My Kids: </strong>Seriously, they’re cool! (I like my wife too, but she doesn’t like her picture plastered on the web. My kids get no choice.) <img style=\"border-bottom-style: none; border-right-style: none; border-top-style: none; border-left-style: none\" class=\"wlEmoticon wlEmoticon-winkingsmile\" alt=\"Winking smile\" src=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/Year-In-Review-2010-Edition_12A01/wlEmoticon-winkingsmile_2.png\" /><a href=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/Year-In-Review-2010-Edition_12A01/Me-and-the-kids_4.jpg\" rel=\"lightbox\"><img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: block; float: none; margin-left: auto; border-top: 0px; margin-right: auto; border-right: 0px; padding-top: 0px\" title=\"Me-and-the-kids\" border=\"0\" alt=\"Me-and-the-kids\" src=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/Year-In-Review-2010-Edition_12A01/Me-and-the-kids_thumb_1.jpg\" width=\"554\" height=\"394\" /></a></li> </ul>  <h2>Memorable Moments/Trips of 2010</h2>  <p>Here are some memorable moments from 2010 that I happened to blog about. I’m sure there are many others memorable moments I forgot to blog about.</p>  <ul>   <li><strong>February</strong> I <a title=\"Visiting Austin\" href=\"http://haacked.com/archive/2010/02/28/austin-texas-great-for-geeks.aspx\">visited Austin Texas for the first time</a>. I spoke at the Austin .NET User Group as well as at Dell and enjoyed the fine taste of Rudy’s BBQ. I spent every moment reminding Texans that if Alaska were split in half to make two states, Texas would be the third largest state in the union. </li>    <li><strong>March</strong> We <a title=\"ASP.NET MVC 2 RTM\" href=\"http://haacked.com/archive/2010/03/11/aspnet-mvc2-released.aspx\">released ASP.NET MVC 2</a> which was shortly followed with the <a title=\"ASP.NET MVC 2 Source Code\" href=\"http://haacked.com/archive/2010/03/12/ms-pl-source-release-for-system-web-mvc-2.aspx\">source code release of System.Web.Mvc.dll</a> under the Ms-PL license. I was allowed exactly two breaths of relief before getting started on ASP.NET MVC 3. In the same month, I <a title=\"Good times at Mix 10\" href=\"http://haacked.com/archive/2010/03/22/good-times-and-vibes-at-mix-10.aspx\">attended the Mix 10 conference</a> in Las Vegas and met <a title=\"John Resig's Blog\" href=\"http://ejohn.org/\" rel=\"met\">John Resig</a> and <a title=\"Douglas Crockford's Website\" href=\"http://www.crockford.com/\">Douglas Crockford</a> for the first time. I gave two talks, one of them co-presented with <a title=\"Scott Hanselman's Blog\" href=\"http://hanselman.com/\">Scott Hanselman</a> which is always a good time. </li>    <li><strong>April</strong> I <a title=\"Closed Source Viral License\" href=\"http://haacked.com/archive/2010/03/31/a-new-closed-source-viral-license.aspx\">attempted an April Fool’s joke</a>. I’ve been told many times I should leave comedy to the experts, but I don’t see the fun in that. </li>    <li><strong>June</strong> The Subtext team and I <a title=\"Subtext 2.5 released!\" href=\"http://haacked.com/archive/2010/06/06/subtext-2-5-released.aspx\">released version 2.5 of Subtext</a>. The pace of work on Subtext has really slowed down as work has kept me busier and busier, but we’re still improving it and getting closer to another release. Also in June, I <a title=\"Alaska Trip\" href=\"http://haacked.com/archive/2010/06/27/back-from-alaska.aspx\">took my son to Alaska</a> to visit his grandparents as a little vacation. While there, I spoke at the Alaska .NET User Group. No moose were in attendance. </li>    <li><strong>July</strong> We released the <a title=\"ASP.NET MVC 3 Preview 1 Released\" href=\"http://haacked.com/archive/2010/07/27/aspnetmvc3-preview1-released.aspx\">first preview of ASP.NET MVC 3</a>. This was the first public disclosure of the new streamlined Razor syntax for views. Nobody was cut in the process. </li>    <li><strong>August</strong> After a five year absence, I <a title=\"Attention Denizens of Black Rock City\" href=\"http://haacked.com/archive/2010/08/29/attention-denizens-of-black-rock-city.aspx\">returned to Black Rock City</a> for the Burning Man festival. As best as I can tell, I did not die while there. </li>    <li><strong>September </strong>I <a title=\"Web Camp LA Trip Report\" href=\"http://www.jamessenior.com/2010/09/16/web-camp-la-trip-report-2/\">presented at Web Camp L.A</a>. In the evening, I visited my old friends and we went curling. Yeah, seriously. </li>    <li><strong>October</strong> We publicly <a title=\"Introducing NuGet\" href=\"http://haacked.com/archive/2010/10/06/introducing-nupack-package-manager.aspx\">announced the NuGet package manager</a> project (it was initially called NuPack). This was a project I had been working on at the same time as ASP.NET MVC 3. To me, this project was very significant as it’s an open source project that accepts external contributions! But don’t worry, we also reject some too. </li>    <li><strong>December</strong> We <a title=\"ASP.NET MVC 3 RC 2\" href=\"http://haacked.com/archive/2010/12/10/asp-net-mvc-3-release-candidate-2.aspx\">released the second release candidate</a> for ASP.NET MVC 3. </li> </ul>  <h2>My Top 3 Posts (Using the <a title=\"Ayende Formula\" href=\"http://ayende.com/Blog/archive/2007/03/09/Calculating-most-popular-posts-with-SubText.aspx\">Ayende Formula</a>)</h2>  <p>With Subtext 2.5, the <a title=\"Calculating popular blog posts with Subtext\" href=\"http://ayende.com/Blog/archive/2007/03/09/Calculating-most-popular-posts-with-SubText.aspx\">Ayende Formula</a>, as we call it, is now integrated into the Subtext admin dashboard which makes compiling this list very easy!</p>  <p>Interestingly enough, this list doesn’t correspond to the posts that I think are most interesting. But that’s typically the case. I have bad taste.</p>  <ul>   <li><a title=\"ASP.NET MVC 2 Optional URL Parameters\" href=\"http://haacked.com/archive/2010/02/12/asp-net-mvc-2-optional-url-parameters.aspx\">ASP.NET MVC 2 Optional URL Parameters</a> Covers using <code>UrlParameter.Optional</code> for optional Routing paramreters in ASP.NET MVC 2 (<em>36 comments, 40,542 Web views, 23,818 aggregator views</em>). </li>    <li><a title=\"Sending JSON\" href=\"http://haacked.com/archive/2010/04/15/sending-json-to-an-asp-net-mvc-action-method-argument.aspx\">Sending JSON to an ASP.NET MVC Action Method Argument</a> This post covers posting JSON to an action method in ASP.NET MVC 2. Some of the code presented in this post is now built-in with ASP.NET MVC 3. (<em>39 comments, 37,668 web views, 21,899 aggregator views</em>) </li>    <li><a title=\"Razor View Syntax\" href=\"http://haacked.com/archive/2010/07/03/razor-view-syntax.aspx\">Razor View Syntax</a> This post gave a little bit of the backstory about the new Razor syntax our team built for ASP.NET MVC as well as a new product, ASP.NET Web Pages. (<em>43 comments, 27640 web views, 23234 aggregator views</em>) </li> </ul>  <h2>My Top 3 Posts (Using the Haack Formula)</h2>  <p>The Haack Formula just involves me arbitrarily picking my personal favorites.</p>  <ul>   <li><a title=\"Not Paid To Write Code\" href=\"http://haacked.com/archive/2010/08/26/not-paid-to-write-code.aspx\">We’re Not Paid To Write Code</a> I argue that there’s something else that we’re really being paid to do, and it’s not Solitaire. </li>    <li><a title=\"Not Really Interested in Lean\" href=\"http://haacked.com/archive/2010/12/20/not-really-interested-in-lean.aspx\">Not Really Interested in Lean</a> There’s something else I’m really interested in, lean is just a means to get there. </li>    <li><a title=\"Arrogance\" href=\"http://haacked.com/archive/2010/06/06/is-arrogance-a-factor-in-success.aspx\">Is Arrogance a Factor in Success</a> I argue that Joy is more important. </li> </ul>  <h2>Enough About Me, What about You?</h2>  <p>Yes, I get self absorbed. But let’s set that aside a moment and talk about you (insomuch as it pertains to me Me ME!). How you doin’?</p>  <p>According to Google Analytics:</p>  <ul>   <li><strong>Hello Visitors!</strong> 1,308,414 of you (absolute unique visitors) made 1,972,239 visits to my blog came from 219 countries/territories. Most of you came from the United States (676,050) followed by the United Kingdom (170,814) with India (140,732) in third place. </li>    <li><strong>Browser of choice: </strong>40.94% of you use Firefox, 29.2% use IE, and 23.07% of you use Chrome. Probably not even worth mentioning, but 3.43% of you use Safari and  2.32% of you use Opera. Opera?! </li>    <li><strong>Operating System:</strong> Not surprisingly, 90.64% of you are on Windows. 5.11% on a Mac and 2.62% on Linux. The mobile devices are a tiny percentage, but I would imagine that’ll pick up a lot next year. </li>    <li><strong>What you read:</strong> The blog post most visited in 2010 was written in 2009, <a title=\"Using jQuery Grid with MVC\" href=\"http://haacked.com/archive/2009/04/14/using-jquery-grid-with-asp.net-mvc.aspx\">Using jQuery Grid with ASP.NET MVC</a> with 93,715 page views. </li>    <li><strong>How’d you get here:</strong> As usual, most of you came here via Google search results (1,120,983), which probably means most of you aren’t reading this. <img style=\"border-bottom-style: none; border-right-style: none; border-top-style: none; border-left-style: none\" class=\"wlEmoticon wlEmoticon-winkingsmile\" alt=\"Winking smile\" src=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/Year-In-Review-2010-Edition_12A01/wlEmoticon-winkingsmile_2.png\" /> In second place, many of you came here directly (254,533) via typing the URL to this blog in an address bar (or clicking on a bookmark, etc.). <a title=\"StackOverflow\" href=\"http://stackoverflow.com/\">StackOverflow.com</a> had a strong showing coming in third with 85,002 visits referred. </li> </ul>  <h2>Podcasts/Videos</h2>  <p>This next list is more for me than for you as I was curious about the various interviews and talks I gave online. It’s the kind of list I wouldn’t expect anyone but myself and my mother to be interested in. In fact, I’m pretty sure my mother doesn’t care.</p>  <p>Suffice to say, there were plenty of opportunities for me to be aghast at the sound of my own voice.</p>  <ul>   <li><a title=\".NET Rocks\" href=\"http://www.dotnetrocks.com/default.aspx?showNum=533\">.NET Rocks #533 Phil Haack Introduces MVC 2</a> In this podcast, I talk about ASP.NET MVC 2 which we had just released. </li>    <li><a title=\"C4MVC Presentation\" href=\"http://www.viddler.com/explore/c4mvc/videos/36/\">C4MVC – Phil Haack – ASP.NET MVC 2 – Web Development Safari</a> This is a recording of an online talk I gave to the virtual ASP.NET MVC user group, C4MVC (Community for MVC). </li>    <li><a title=\".NET Rocks Show 543\" href=\"http://www.dotnetrocks.com/default.aspx?showNum=543\">.NET Rocks #543 Phil Haack Live in Mountain View</a> Carl and Richard took their show on the road and I was their first guest on the .NET Rocks roadshow. During the show I mistakenly gave out some interesting stats about Visual Studio. Those stats actually applied to the entire .NET Framework. </li>    <li><a title=\"Hanselminutes Podcast\" href=\"http://www.hanselminutes.com/default.aspx?showID=242\">Hanselminutes #224 ASP.NET MVC 3 Preview 1 with Phil Haack</a> this is a podcast I recorded with Scott Hanselman. </li>    <li><a title=\"MvcConf\" href=\"http://www.viddler.com/explore/mvcconf/videos/4/\">haack-mvc3</a> This is a talk recorded from a virtual online conference put on by the Community for MVC (C4MVC) called MvcConf. It was a free online conference that was well put together and well received by the audience. </li>    <li><a title=\"Web Camps\" href=\"http://channel9.msdn.com/Shows/Web+Camps+TV/Web-Camps-TV-1-ASPNET-MVC-3-Preview-1-and-Razor-Tips-with-Phil-Haack\">Web Camps TV #1 – ASP.NET MVC 3 Preview 1 and Razor Tips with Phil Haack</a> This is a brief video where I demo ASP.NET MVC 3 and Razor. What’s notable to me in this video is that the shirt I’m wearing isn’t mine. I was wearing a white shirt with stripes and it was causing some moiré pattern effects so I had to borrow a t-shirt. </li>    <li><a title=\"ASP.NET MVC 3\" href=\"http://channel9.msdn.com/Blogs/Glucose/Hanselminutes-on-9-ASPNET-MVC-3-and-NEW-ASPNET-Futures-with-Phil-Haack-and-Morgan-the-Intern\">Hanselminutes on 9 – ASP.NET MVC 3 and NEW ASP.NET Futures with Phil Haack and Morgan the Intern</a> This is a nearly unwatchable video that goes back and forth between me and the intern, Morgan, with whom I shared my office. Even so, it’s a very candid video with some funny moments. </li>    <li><a title=\"Web Camps TV #8\" href=\"http://channel9.msdn.com/Shows/Web+Camps+TV/Web-Camps-TV-8-NuPack-with-Phil-Haack\">Web Camps TV #8 – NuPack with Phil Haack</a> this was recorded before we changed the name to NuGet. </li>    <li><a title=\"Hanselminutes Podcast\" href=\"http://www.hanselminutes.com/default.aspx?showID=257\">Hanselminutes 238 ASP.NET MVC 3 RC and NuGet Package Management with Phil Haack</a> I’m back on the couch in this podcast recorded during the PDC conference with Scott Hanselman. What was interesting about this podcast was it was accidentally posted around a week before intended. So we talked about the release candidate of ASP.NET MVC in the past tense <em>before</em> it was released. </li>    <li><a title=\".NET Rocks\" href=\"http://www.dotnetrocks.com/default.aspx?showNum=606\">.NET Rocks #606 Phil Haack on Razor, MVC, NuPack, and More!</a> Once again I chat with Carl and Richard about ASP.NET MVC, but this time we talk about ASP.NET MVC 3. </li> </ul>  <p>Well if you’ve read this far, wow! you must really be bored on your holiday break. But seriously, if you’re a regular reader of my blog, thanks for sticking around! I think 2011 is going to be an interesting year as well and I’m looking forward to it.</p>  <p>Let me know if you have suggestions on how I can make my blog suck less.</p>  <div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px\" id=\"scid:0767317B-992E-4b12-91E0-4F059A8CECA8:dc644c02-fb01-4e1c-89ff-4e862c179cd6\" class=\"wlWriterEditableSmartContent\">Tags: <a href=\"http://haacked.com/tags/end-of-year/default.aspx\" rel=\"tag\">end-of-year</a>, <a href=\"http://haacked.com/tags/year-in-review/default.aspx\" rel=\"tag\">year-in-review</a></div><img src=\"http://haacked.com/aggbug/18751.aspx\" width=\"1\" height=\"1\" />\r\n<p><a href=\"http://feedads.g.doubleclick.net/~a/21kUYH04-98G7_9j9gmw31JSKrI/0/da\"><img src=\"http://feedads.g.doubleclick.net/~a/21kUYH04-98G7_9j9gmw31JSKrI/0/di\" border=\"0\" ismap=\"true\"></img></a><br/>\r\n<a href=\"http://feedads.g.doubleclick.net/~a/21kUYH04-98G7_9j9gmw31JSKrI/1/da\"><img src=\"http://feedads.g.doubleclick.net/~a/21kUYH04-98G7_9j9gmw31JSKrI/1/di\" border=\"0\" ismap=\"true\"></img></a></p><div class=\"feedflare\">\r\n<a href=\"http://feeds.haacked.com/~ff/haacked?a=ATU_a_sDKkI:EDWUzvtJB3Q:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/haacked?i=ATU_a_sDKkI:EDWUzvtJB3Q:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.haacked.com/~ff/haacked?a=ATU_a_sDKkI:EDWUzvtJB3Q:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/haacked?i=ATU_a_sDKkI:EDWUzvtJB3Q:V_sGLiPBpWU\" border=\"0\"></img></a> <a href=\"http://feeds.haacked.com/~ff/haacked?a=ATU_a_sDKkI:EDWUzvtJB3Q:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/haacked?d=G79ilh31hkQ\" border=\"0\"></img></a>\r\n</div><img src=\"http://feeds.feedburner.com/~r/haacked/~4/ATU_a_sDKkI\" height=\"1\" width=\"1\"/> "
//                    ]
//                },
//                {
//                    "title": "ASP.NET MVC 3 Extensionless URLs on IIS 6 ",
//                    "headlineUrl": "http://feeds.haacked.com/~r/haacked/~3/mem07saFFaQ/asp-net-mvc-3-extensionless-urls-on-iis-6.aspx",
//                    "publicationDateTimeDescriptor": "Wednesday, 22 December 2010 11:16 PM GMT",
//                    "reference": {
//                        "type": "rss",
//                        "guid": "http://haacked.com/archive/2010/12/22/asp-net-mvc-3-extensionless-urls-on-iis-6.aspx",
//                        "externalUri": "http://feeds.haacked.com/~r/haacked/~3/mem07saFFaQ/asp-net-mvc-3-extensionless-urls-on-iis-6.aspx"
//                    },
//                    "snippet": [
//                        "<p>A lot <a title=\"ASP.NET MVC on IIS 6 Walkthrough\" href=\"http://haacked.com/archive/2008/11/26/asp.net-mvc-on-iis-6-walkthrough.aspx\">has been written</a> about how to get ASP.NET MVC running on IIS 6 with extensionless URLs. Up until now, the story hasn’t been very pretty. When running ASP.NET MVC on ASP.NET 4, it gets a lot easier.</p>  <p>To be fair, the part that makes it easier has nothing to do with ASP.NET MVC 3 and everything to do with a little known new feature of ASP.NET 4 creatively called the <strong>ASP.NET 4 Extensionless URL feature</strong>. ASP.NET MVC 3 requires ASP.NET 4 so it naturally benefits from this new feature.</p>  <p>If you have a server running IIS 6, ASP.NET 4, and ASP.NET MVC 3 (or even ASP.NET MVC 2. I haven’t tried ASP.NET MVC 1.0), your website should <em>just work</em> with the default extensionless URLs generated by ASP.NET MVC applications. No need to configure wildcard mappings nor *.mvc mappings. In fact, you don’t even need to set RAMMFAR to true. RAMMFAR is our pet name for the <code>runAllManagedModulesForAllRequests</code> setting within the <code>system.webserver</code> setting in web.config. You can feel free to set this to false.</p>  <div class=\"dropshadow code\">   <div class=\"innerbox\">     <pre class=\"csharpcode\"><span class=\"kwrd\">&lt;</span><span class=\"html\">modules</span> <span class=\"attr\">runAllManagedModulesForAllRequests</span><span class=\"kwrd\">=\"false\"</span><span class=\"kwrd\">/&gt;</span></pre>\r\n  </div>\r\n</div>\r\n\r\n<p class=\"clear\">When installing ASP.NET 4, this is enabled by default. So if you have a hosting provider still using IIS 6, but does have ASP.NET 4 installed, then this should work for you, unless…</p>\r\n\r\n<h2>How does this work?</h2>\r\n\r\n<p>To be honest, it’s a bit of voodoo magic as far as I can tell and there’s a lot of caveats when it comes to using this feature with IIS 6. There are edge cases where it can cause problems. This is why Thomas Marquardt, the implementor of the feature, wrote a blog post on how to disable <a title=\"How to disable extensionless URL on IIS 6.0\" href=\"http://blogs.msdn.com/b/tmarq/archive/2010/06/18/how-to-disable-the-asp-net-v4-0-extensionless-url-feature-on-iis-6-0.aspx\">ASP.NET 4.0 Extensionless URLs</a> just in case.</p>\r\n\r\n<p>In that blog post, he describes the bit of magic that makes this work.</p>\r\n\r\n<blockquote>\r\n  <p>Here’s how the v4.0 ASP.NET extensionless URL features works on IIS 6.  We have an ISAPI Filter named aspnet_filter.dll that appends “/eurl.axd/GUID” to extensionless URLs.  This happens early on in the request processing.  We also have a script mapping so that “*.axd” requests are handled by our ISAPI, aspnet_isapi.dll.  When we append “/eurl.axd/GUID” to extensionless URLs, it causes them to be mapped to our aspnet_isapi.dll, as long as the script map exists as expected.  These requests then enter ASP.NET where we remove “/eurl.axd/GUID” from the URL, that is, we restore the original URL.  The restoration of the original URL happens very early.  Now the URL is extensionless again, and if no further changes are made</p>\r\n</blockquote>\r\n\r\n<p>He also has a list of conditions that must be true for this feature to work. If any one of them is false, then you’re back to the old extensionfull URLs with IIS 6.</p>\r\n\r\n<h2>I’m Getting a 403 Forbidden</h2>\r\n\r\n<p>This is not technically related, but when I tried to test this out to confirm the behavior, I ran into a case where every request was giving me a 403 Forbidden error message. Here’s how I fixed it.</p>\r\n\r\n<p>In IIS Manager, I right clicked on the Web Services Extension node and selected the menu option labeled <em>Allow all Web Service extensions for a specific application</em>:</p>\r\n\r\n<p><img style=\"background-image: none; border-bottom: 0px; border-left: 0px; margin: 0px 5px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"iis6-allowing-extensions\" border=\"0\" alt=\"iis6-allowing-extensions\" src=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/d5689721b8f4_AA7D/iis6-allowing-extensions_c8da0e56-c92c-4db2-bec3-dae986aef3db.png\" width=\"504\" height=\"384\" /></p>\r\n\r\n<p>In the resulting dialog, I chose the ASP.NET v4.0.30319 option.</p>\r\n\r\n<p><img style=\"background-image: none; border-bottom: 0px; border-left: 0px; margin: 0px 5px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"iis6-allow-web-service\" border=\"0\" alt=\"iis6-allow-web-service\" src=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/d5689721b8f4_AA7D/iis6-allow-web-service_6666234c-f460-49d7-b324-96053d4c8469.png\" width=\"401\" height=\"352\" /></p>\r\n\r\n<p>To double check that everything was configured correctly, I looked at the properties for my website and ensured that <em>Scripts</em> were enabled.</p>\r\n\r\n<p><img style=\"background-image: none; border-bottom: 0px; border-left: 0px; margin: 0px 5px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"iis6-home-directory-tab\" border=\"0\" alt=\"iis6-home-directory-tab\" src=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/d5689721b8f4_AA7D/iis6-home-directory-tab_a875455f-2db1-4a62-8302-5dfda6ec4657.png\" width=\"476\" height=\"461\" /></p>\r\n\r\n<p>I also clicked on the <em>Configuration…</em> button and made sure that *.axd was mapped to the proper ASP.NET Isapi dll (aspnet_isapi.dll).</p>\r\n\r\n<p><img style=\"background-image: none; border-bottom: 0px; border-left: 0px; margin: 0px 5px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"iis6-isapi\" border=\"0\" alt=\"iis6-isapi\" src=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/d5689721b8f4_AA7D/iis6-isapi_82292fe2-1d7c-4575-a05a-dce0ba366387.png\" width=\"411\" height=\"452\" /></p>\r\n\r\n<p><img style=\"background-image: none; border-bottom: 0px; border-left: 0px; margin: 0px 5px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"iis6-extension-mapping\" border=\"0\" alt=\"iis6-extension-mapping\" src=\"http://haacked.com/images/haacked_com/Windows-Live-Writer/d5689721b8f4_AA7D/iis6-extension-mapping_1d236e21-6957-4e6f-bdfa-0cdf202a8a6c.png\" width=\"433\" height=\"247\" /></p>\r\n\r\n<p>With all that in place, I was able to run standard ASP.NET MVC web application and make requests for /, /home/about/, etc. without any problems!</p>\r\n\r\n<div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px\" id=\"scid:0767317B-992E-4b12-91E0-4F059A8CECA8:62d81c42-ec83-4717-8db4-95477233929f\" class=\"wlWriterEditableSmartContent\">Tags: <a href=\"http://haacked.com/tags/aspnetmvc/default.aspx\" rel=\"tag\">aspnetmvc</a>,<a href=\"http://haacked.com/tags/asp.net/default.aspx\" rel=\"tag\">asp.net</a>,<a href=\"http://haacked.com/tags/routing/default.aspx\" rel=\"tag\">routing</a>,<a href=\"http://haacked.com/tags/iis6/default.aspx\" rel=\"tag\">iis6</a></div><img src=\"http://haacked.com/aggbug/18750.aspx\" width=\"1\" height=\"1\" />\r\n<p><a href=\"http://feedads.g.doubleclick.net/~a/u1ByIwFxfFzfg2Ur9uxT4Ph7XFM/0/da\"><img src=\"http://feedads.g.doubleclick.net/~a/u1ByIwFxfFzfg2Ur9uxT4Ph7XFM/0/di\" border=\"0\" ismap=\"true\"></img></a><br/>\r\n<a href=\"http://feedads.g.doubleclick.net/~a/u1ByIwFxfFzfg2Ur9uxT4Ph7XFM/1/da\"><img src=\"http://feedads.g.doubleclick.net/~a/u1ByIwFxfFzfg2Ur9uxT4Ph7XFM/1/di\" border=\"0\" ismap=\"true\"></img></a></p><div class=\"feedflare\">\r\n<a href=\"http://feeds.haacked.com/~ff/haacked?a=mem07saFFaQ:i4bz-6Z803Q:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/haacked?i=mem07saFFaQ:i4bz-6Z803Q:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.haacked.com/~ff/haacked?a=mem07saFFaQ:i4bz-6Z803Q:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/haacked?i=mem07saFFaQ:i4bz-6Z803Q:V_sGLiPBpWU\" border=\"0\"></img></a> <a href=\"http://feeds.haacked.com/~ff/haacked?a=mem07saFFaQ:i4bz-6Z803Q:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/haacked?d=G79ilh31hkQ\" border=\"0\"></img></a>\r\n</div><img src=\"http://feeds.feedburner.com/~r/haacked/~4/mem07saFFaQ\" height=\"1\" width=\"1\"/> "
//                    ]
//                }
//            ]
//                }
//            }
//        });
        jQuery('#FactivaCanvas').dj_factivaCanvas({ options: { CanvasID: 999, ExtendedWebServicePath: "/DowJones.Web.Mvc.UI.Canvas.WebServices.FactivaDataService.asmx", NumberOfGroups: 1, WebServicePath: "/DowJones.Web.Mvc.UI.Canvas.WebServices.CanvasRenderingManagerDataService.asmx", debug: false }, tokens: {}, data: null, childComponents: [{ "type": "SyndicationModule", "id": "SyndicationModule" }, { "type": "DummyCanvasModule", "id": "DummyCanvasModule" }, { "type": "DummyCanvasModule", "id": "newsstand-module" }, { "type": "DummyCanvasModule", "id": "custom-topics-module" }, { "type": "DummyCanvasModule", "id": "industry-module" }, { "type": "DummyCanvasModule", "id": "regional-module"}] });
        jQuery('#regional-module').dj_DummyCanvasModule({ options: { ModuleID: 6789, Position: 5, debug: false }, tokens: {}, data: null });
        jQuery('#industry-module').dj_DummyCanvasModule({ options: { ModuleID: 5678, Position: 4, debug: false }, tokens: {}, data: null });
        jQuery('#custom-topics-module').dj_DummyCanvasModule({ options: { ModuleID: 4567, Position: 3, debug: false }, tokens: {}, data: null });
        jQuery('#newsstand-module').dj_DummyCanvasModule({ options: { ModuleID: 3456, Position: 2, debug: false }, tokens: {}, data: null });
        jQuery('#DummyCanvasModule').dj_DummyCanvasModule({ options: { ModuleID: 2345, Position: 1, debug: false }, tokens: {}, data: null });
        jQuery('#SyndicationModule').dj_RssAtomModule({ options: { SyndicationFeedUriCollection: ["http://feeds.feedburner.com/CodeBetter", "http://feeds.haacked.com/haacked", "http://weblogs.asp.net/scottgu/atom.aspx", "http://feeds.feedburner.com/ScottHanselman"], ModuleID: 1234, Position: 0, debug: false }, tokens: {}, data: null, childComponents: [{ "type": "PortalHeadlineListControl", "id": "PortalHeadlineListControl-0" }, { "type": "PortalHeadlineListControl", "id": "PortalHeadlineListControl-1" }, { "type": "PortalHeadlineListControl", "id": "PortalHeadlineListControl-2" }, { "type": "DummyCanvasModule", "id": "regional-module"}] });
        jQuery('#SyndicationModule').dj_RssAtomModule({
            "options": {
                "SyndicationFeedUriCollection": [
            {
                "__syndicationFeedUri": "http://feeds.feedburner.com/CodeBetter",
                "__syndicationFeedType": 0,
                "__syndicationFeedTypeSpecified": false,
                "SyndicationFeedUri": "http://feeds.feedburner.com/CodeBetter",
                "SyndicationFeedType": 0
            },
            {
                "__syndicationFeedUri": "http://feeds.haacked.com/haacked",
                "__syndicationFeedType": 0,
                "__syndicationFeedTypeSpecified": false,
                "SyndicationFeedUri": "http://feeds.haacked.com/haacked",
                "SyndicationFeedType": 0
            },
            {
                "__syndicationFeedUri": "http://weblogs.asp.net/scottgu/atom.aspx",
                "__syndicationFeedType": 0,
                "__syndicationFeedTypeSpecified": false,
                "SyndicationFeedUri": "http://weblogs.asp.net/scottgu/atom.aspx",
                "SyndicationFeedType": 0
            },
            {
                "__syndicationFeedUri": "http://feeds.feedburner.com/ScottHanselman",
                "__syndicationFeedType": 0,
                "__syndicationFeedTypeSpecified": false,
                "SyndicationFeedUri": "http://feeds.feedburner.com/ScottHanselman",
                "SyndicationFeedType": 0
            }
        ],
                "ModuleID": 1234,
                "Position": 0,
                "debug": false
            },
            "tokens": {},
            "data": null
        });
        
    });
//]]>
</script>
<!--[if lt IE 7 ]>
    <script src="/areas/factiva/scripts/dd_belatedpng.js></script>
    <script> DD_belatedPNG.fix('img, .png_bg, .fi'); //fix any <img> or .png_bg background-images and all .fi icons </script>
<![endif]-->
</body>
</html>