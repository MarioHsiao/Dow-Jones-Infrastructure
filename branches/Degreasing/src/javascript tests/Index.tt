<#@ template language="C#" hostspecific="true" #>
<#@ output extension=".html" #>
<#@ import namespace="System.IO" #>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
	<head>
		<title>Dow Jones MVC Framework JavaScript Tests</title>
		<script src="../../lib/qunit/qunit.js"></script>
		<link rel="stylesheet" href="../../lib/qunit/qunit.css" type="text/css" />
		<style>
			body
			{
				background-color: #ccc;
			}
			.test-fixture-list 
			{
				float: left;
				width: 15%;
			}
			.test-fixture-display-window-container
			{
				float: right;
				width: 70%;
				margin: 0 5px;
			}
			#test-fixture-display-window #qunit-userAgent
			{
				display: none !important;
			}
		</style>
	</head>
	<body>
		<h1>Dow Jones MVC Framework JavaScript Tests</h1>

		<div class="test-fixture-list">

		<# 
			foreach(var directoryPath in Directory.GetDirectories(Host.ResolvePath(""))) {
				var directoryInfo = new DirectoryInfo(directoryPath);
				var directory = directoryInfo.Name;

				if(directory == "bin" || directory == "obj")
					continue;
		#>

			<h3><#= directory #></h3>
			<ul>
				<# foreach(var fileInfo in directoryInfo.GetFiles("*.htm*")) {
					string split = System.Text.RegularExpressions.Regex.Replace(fileInfo.Name, "([a-z](?=[A-Z])|[A-Z](?=[A-Z][a-z]))", "$1 ");
					string humanReadableName = Path.GetFileNameWithoutExtension(System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(split));
				#>
					<li><a href="<#=directory#>/<#=fileInfo.Name#>" target="test-fixture-display-window"><#=humanReadableName#></a></li>
				<# } #>
			</ul>

		<# } #>

		</div>

		<div class="test-fixture-display-window-container">
			<iframe id="test-fixture-display-window" name="test-fixture-display-window" 
					width="100%" height="90%"  frameborder="0"
					src="">
			</iframe>
		</div>

		<footer style="clear: both; float: right;">Test Page Index Last Generated at <#= DateTime.Now #></footer>
	</body>
</html>