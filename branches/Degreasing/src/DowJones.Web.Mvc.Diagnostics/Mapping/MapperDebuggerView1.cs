//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DowJones.Web.Mvc.Diagnostics.Mapping
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Web;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.Mvc.Html;
    using DowJones.Web.Mvc.Extensions;
    
    // Last Generated Timestamp: 06/17/2011 09:47 AM
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorViewComponentClassGenerator", "0.9.3.26911")]
    public class MapperDebuggerView : DowJones.Web.Mvc.UI.ViewComponentBase<MapperDebuggerViewModel>
    {
#line hidden

        public MapperDebuggerView()
        {
        }
        public override string ClientPluginName
        {
            get
            {
                return null;
            }
        }
        public override void ExecuteTemplate()
        {


WriteLiteral(@"<html>
<head>
    <title>Mapper Debugger</title>
    <style type='text/css'>
        table  
        {
            border-collapse: collapse;
        }
        
        td
        {
            font: 10pt Arial;
            border: solid 1px black;
            padding: 3px; 
        }
        
        .hilite 
        {
            background-color: lightgreen;
        }
    </style>
</head>
<body>
    <h1>Mapper Debugger</h1>
    <div>
        <p>Total Mappers:  ");


                      Write(Model.TypeMapperCount);

WriteLiteral("</p>\r\n    </div>\r\n    <table>\r\n        <caption>Registered Mappers</caption>\r\n   " +
"     <thead>\r\n            <tr>\r\n                <th>Source Type</th>\r\n          " +
"      <th>Mapper</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n");


             foreach (var mapper in Model.TypeMappers) {

WriteLiteral("                <tr>\r\n                    <td>");


                   Write(mapper.SourceTypeName);

WriteLiteral("</td>\r\n                    <td>");


                   Write(mapper.MapperName);

WriteLiteral("</td>\r\n                </tr>\r\n");


            }

WriteLiteral("        </tbody>\r\n    </table>\r\n</body>\r\n</html>\r\n");


        }
    }
}
