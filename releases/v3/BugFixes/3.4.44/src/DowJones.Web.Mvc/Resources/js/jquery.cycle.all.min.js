/*!
* jQuery Cycle Plugin (with Transition Definitions)
* Examples and documentation at: http://jquery.malsup.com/cycle/
* Copyright (c) 2007-2010 M. Alsup
* Version: 2.99 (12-MAR-2011)
* Dual licensed under the MIT and GPL licenses.
* http://jquery.malsup.com/license.html
* Requires: jQuery v1.3.2 or later
*/
function debug(a) { $.fn.cycle.debug && log(a) } function log() { window.console && console.log && console.log("[cycle] " + Array.prototype.join.call(arguments, " ")) } function handleArguments(a, b, c) { function f(a, b, c) { if (!a && b === true) { var d = $(c).data("cycle.opts"); if (!d) { log("options not found, can not resume"); return false } if (c.cycleTimeout) { clearTimeout(c.cycleTimeout); c.cycleTimeout = 0 } go(d.elements, d, 1, !d.backwards) } } if (a.cycleStop == undefined) a.cycleStop = 0; if (b === undefined || b === null) b = {}; if (b.constructor == String) { switch (b) { case "destroy": case "stop": var d = $(a).data("cycle.opts"); if (!d) return false; a.cycleStop++; if (a.cycleTimeout) clearTimeout(a.cycleTimeout); a.cycleTimeout = 0; $(a).removeData("cycle.opts"); if (b == "destroy") destroy(d); return false; case "toggle": a.cyclePause = a.cyclePause === 1 ? 0 : 1; f(a.cyclePause, c, a); return false; case "pause": a.cyclePause = 1; return false; case "resume": a.cyclePause = 0; f(false, c, a); return false; case "prev": case "next": var d = $(a).data("cycle.opts"); if (!d) { log('options not found, "prev/next" ignored'); return false } $.fn.cycle[b](d); return false; default: b = { fx: b } } return b } else if (b.constructor == Number) { var e = b; b = $(a).data("cycle.opts"); if (!b) { log("options not found, can not advance slide"); return false } if (e < 0 || e >= b.elements.length) { log("invalid slide index: " + e); return false } b.nextSlide = e; if (a.cycleTimeout) { clearTimeout(a.cycleTimeout); a.cycleTimeout = 0 } if (typeof c == "string") b.oneTimeFx = c; go(b.elements, b, 1, e >= b.currSlide); return false } return b } function removeFilter(a, b) { if (!$.support.opacity && b.cleartype && a.style.filter) { try { a.style.removeAttribute("filter") } catch (c) { } } } function destroy(a) { if (a.next) $(a.next).unbind(a.prevNextEvent); if (a.prev) $(a.prev).unbind(a.prevNextEvent); if (a.pager || a.pagerAnchorBuilder) $.each(a.pagerAnchors || [], function () { this.unbind().remove() }); a.pagerAnchors = null; if (a.destroy) a.destroy(a) } function buildOptions(a, b, c, d, e) { var f = $.extend({}, $.fn.cycle.defaults, d || {}, $.metadata ? a.metadata() : $.meta ? a.data() : {}); if (f.autostop) f.countdown = f.autostopCount || c.length; var g = a[0]; a.data("cycle.opts", f); f.$cont = a; f.stopCount = g.cycleStop; f.elements = c; f.before = f.before ? [f.before] : []; f.after = f.after ? [f.after] : []; if (!$.support.opacity && f.cleartype) f.after.push(function () { removeFilter(this, f) }); if (f.continuous) f.after.push(function () { go(c, f, 0, !f.backwards) }); saveOriginalOpts(f); if (!$.support.opacity && f.cleartype && !f.cleartypeNoBg) clearTypeFix(b); if (a.css("position") == "static") a.css("position", "relative"); if (f.width) a.width(f.width); if (f.height && f.height != "auto") a.height(f.height); if (f.startingSlide) f.startingSlide = parseInt(f.startingSlide); else if (f.backwards) f.startingSlide = c.length - 1; if (f.random) { f.randomMap = []; for (var h = 0; h < c.length; h++) f.randomMap.push(h); f.randomMap.sort(function (a, b) { return Math.random() - .5 }); f.randomIndex = 1; f.startingSlide = f.randomMap[1] } else if (f.startingSlide >= c.length) f.startingSlide = 0; f.currSlide = f.startingSlide || 0; var i = f.startingSlide; b.css({ position: "absolute", top: 0, left: 0 }).hide().each(function (a) { var b; if (f.backwards) b = i ? a <= i ? c.length + (a - i) : i - a : c.length - a; else b = i ? a >= i ? c.length - (a - i) : i - a : c.length - a; $(this).css("z-index", b) }); $(c[i]).css("opacity", 1).show(); removeFilter(c[i], f); if (f.fit && f.width) b.width(f.width); if (f.fit && f.height && f.height != "auto") b.height(f.height); var j = f.containerResize && !a.innerHeight(); if (j) { var k = 0, l = 0; for (var m = 0; m < c.length; m++) { var n = $(c[m]), o = n[0], p = n.outerWidth(), q = n.outerHeight(); if (!p) p = o.offsetWidth || o.width || n.attr("width"); if (!q) q = o.offsetHeight || o.height || n.attr("height"); k = p > k ? p : k; l = q > l ? q : l } if (k > 0 && l > 0) a.css({ width: k + "px", height: l + "px" }) } if (f.pause) a.hover(function () { this.cyclePause++ }, function () { this.cyclePause-- }); if (supportMultiTransitions(f) === false) return false; var r = false; d.requeueAttempts = d.requeueAttempts || 0; b.each(function () { var a = $(this); this.cycleH = f.fit && f.height ? f.height : a.height() || this.offsetHeight || this.height || a.attr("height") || 0; this.cycleW = f.fit && f.width ? f.width : a.width() || this.offsetWidth || this.width || a.attr("width") || 0; if (a.is("img")) { var b = $.browser.msie && this.cycleW == 28 && this.cycleH == 30 && !this.complete; var c = $.browser.mozilla && this.cycleW == 34 && this.cycleH == 19 && !this.complete; var g = $.browser.opera && (this.cycleW == 42 && this.cycleH == 19 || this.cycleW == 37 && this.cycleH == 17) && !this.complete; var h = this.cycleH == 0 && this.cycleW == 0 && !this.complete; if (b || c || g || h) { if (e.s && f.requeueOnImageNotLoaded && ++d.requeueAttempts < 100) { log(d.requeueAttempts, " - img slide not loaded, requeuing slideshow: ", this.src, this.cycleW, this.cycleH); setTimeout(function () { $(e.s, e.c).cycle(d) }, f.requeueTimeout); r = true; return false } else { log("could not determine size of image: " + this.src, this.cycleW, this.cycleH) } } } return true }); if (r) return false; f.cssBefore = f.cssBefore || {}; f.cssAfter = f.cssAfter || {}; f.cssFirst = f.cssFirst || {}; f.animIn = f.animIn || {}; f.animOut = f.animOut || {}; b.not(":eq(" + i + ")").css(f.cssBefore); $(b[i]).css(f.cssFirst); if (f.timeout) { f.timeout = parseInt(f.timeout); if (f.speed.constructor == String) f.speed = $.fx.speeds[f.speed] || parseInt(f.speed); if (!f.sync) f.speed = f.speed / 2; var s = f.fx == "none" ? 0 : f.fx == "shuffle" ? 500 : 250; while (f.timeout - f.speed < s) f.timeout += f.speed } if (f.easing) f.easeIn = f.easeOut = f.easing; if (!f.speedIn) f.speedIn = f.speed; if (!f.speedOut) f.speedOut = f.speed; f.slideCount = c.length; f.currSlide = f.lastSlide = i; if (f.random) { if (++f.randomIndex == c.length) f.randomIndex = 0; f.nextSlide = f.randomMap[f.randomIndex] } else if (f.backwards) f.nextSlide = f.startingSlide == 0 ? c.length - 1 : f.startingSlide - 1; else f.nextSlide = f.startingSlide >= c.length - 1 ? 0 : f.startingSlide + 1; if (!f.multiFx) { var t = $.fn.cycle.transitions[f.fx]; if ($.isFunction(t)) t(a, b, f); else if (f.fx != "custom" && !f.multiFx) { log("unknown transition: " + f.fx, "; slideshow terminating"); return false } } var u = b[i]; if (f.before.length) f.before[0].apply(u, [u, u, f, true]); if (f.after.length) f.after[0].apply(u, [u, u, f, true]); if (f.next) $(f.next).bind(f.prevNextEvent, function () { return advance(f, 1) }); if (f.prev) $(f.prev).bind(f.prevNextEvent, function () { return advance(f, 0) }); if (f.pager || f.pagerAnchorBuilder) buildPager(c, f); exposeAddSlide(f, c); return f } function saveOriginalOpts(a) { a.original = { before: [], after: [] }; a.original.cssBefore = $.extend({}, a.cssBefore); a.original.cssAfter = $.extend({}, a.cssAfter); a.original.animIn = $.extend({}, a.animIn); a.original.animOut = $.extend({}, a.animOut); $.each(a.before, function () { a.original.before.push(this) }); $.each(a.after, function () { a.original.after.push(this) }) } function supportMultiTransitions(a) { var b, c, d = $.fn.cycle.transitions; if (a.fx.indexOf(",") > 0) { a.multiFx = true; a.fxs = a.fx.replace(/\s*/g, "").split(","); for (b = 0; b < a.fxs.length; b++) { var e = a.fxs[b]; c = d[e]; if (!c || !d.hasOwnProperty(e) || !$.isFunction(c)) { log("discarding unknown transition: ", e); a.fxs.splice(b, 1); b-- } } if (!a.fxs.length) { log("No valid transitions named; slideshow terminating."); return false } } else if (a.fx == "all") { a.multiFx = true; a.fxs = []; for (p in d) { c = d[p]; if (d.hasOwnProperty(p) && $.isFunction(c)) a.fxs.push(p) } } if (a.multiFx && a.randomizeEffects) { var f = Math.floor(Math.random() * 20) + 30; for (b = 0; b < f; b++) { var g = Math.floor(Math.random() * a.fxs.length); a.fxs.push(a.fxs.splice(g, 1)[0]) } debug("randomized fx sequence: ", a.fxs) } return true } function exposeAddSlide(a, b) { a.addSlide = function (c, d) { var e = $(c), f = e[0]; if (!a.autostopCount) a.countdown++; b[d ? "unshift" : "push"](f); if (a.els) a.els[d ? "unshift" : "push"](f); a.slideCount = b.length; e.css("position", "absolute"); e[d ? "prependTo" : "appendTo"](a.$cont); if (d) { a.currSlide++; a.nextSlide++ } if (!$.support.opacity && a.cleartype && !a.cleartypeNoBg) clearTypeFix(e); if (a.fit && a.width) e.width(a.width); if (a.fit && a.height && a.height != "auto") e.height(a.height); f.cycleH = a.fit && a.height ? a.height : e.height(); f.cycleW = a.fit && a.width ? a.width : e.width(); e.css(a.cssBefore); if (a.pager || a.pagerAnchorBuilder) $.fn.cycle.createPagerAnchor(b.length - 1, f, $(a.pager), b, a); if ($.isFunction(a.onAddSlide)) a.onAddSlide(e); else e.hide() } } function go(a, b, c, d) { if (c && b.busy && b.manualTrump) { debug("manualTrump in go(), stopping active transition"); $(a).stop(true, true); b.busy = 0 } if (b.busy) { debug("transition active, ignoring new tx request"); return } var e = b.$cont[0], f = a[b.currSlide], g = a[b.nextSlide]; if (e.cycleStop != b.stopCount || e.cycleTimeout === 0 && !c) return; if (!c && !e.cyclePause && !b.bounce && (b.autostop && --b.countdown <= 0 || b.nowrap && !b.random && b.nextSlide < b.currSlide)) { if (b.end) b.end(b); return } var h = false; if ((c || !e.cyclePause) && b.nextSlide != b.currSlide) { h = true; var i = b.fx; f.cycleH = f.cycleH || $(f).height(); f.cycleW = f.cycleW || $(f).width(); g.cycleH = g.cycleH || $(g).height(); g.cycleW = g.cycleW || $(g).width(); if (b.multiFx) { if (b.lastFx == undefined || ++b.lastFx >= b.fxs.length) b.lastFx = 0; i = b.fxs[b.lastFx]; b.currFx = i } if (b.oneTimeFx) { i = b.oneTimeFx; b.oneTimeFx = null } $.fn.cycle.resetState(b, i); if (b.before.length) $.each(b.before, function (a, c) { if (e.cycleStop != b.stopCount) return; c.apply(g, [f, g, b, d]) }); var j = function () { b.busy = 0; $.each(b.after, function (a, c) { if (e.cycleStop != b.stopCount) return; c.apply(g, [f, g, b, d]) }) }; debug("tx firing(" + i + "); currSlide: " + b.currSlide + "; nextSlide: " + b.nextSlide); b.busy = 1; if (b.fxFn) b.fxFn(f, g, b, j, d, c && b.fastOnEvent); else if ($.isFunction($.fn.cycle[b.fx])) $.fn.cycle[b.fx](f, g, b, j, d, c && b.fastOnEvent); else $.fn.cycle.custom(f, g, b, j, d, c && b.fastOnEvent) } if (h || b.nextSlide == b.currSlide) { b.lastSlide = b.currSlide; if (b.random) { b.currSlide = b.nextSlide; if (++b.randomIndex == a.length) b.randomIndex = 0; b.nextSlide = b.randomMap[b.randomIndex]; if (b.nextSlide == b.currSlide) b.nextSlide = b.currSlide == b.slideCount - 1 ? 0 : b.currSlide + 1 } else if (b.backwards) { var k = b.nextSlide - 1 < 0; if (k && b.bounce) { b.backwards = !b.backwards; b.nextSlide = 1; b.currSlide = 0 } else { b.nextSlide = k ? a.length - 1 : b.nextSlide - 1; b.currSlide = k ? 0 : b.nextSlide + 1 } } else { var k = b.nextSlide + 1 == a.length; if (k && b.bounce) { b.backwards = !b.backwards; b.nextSlide = a.length - 2; b.currSlide = a.length - 1 } else { b.nextSlide = k ? 0 : b.nextSlide + 1; b.currSlide = k ? a.length - 1 : b.nextSlide - 1 } } } if (h && b.pager) b.updateActivePagerLink(b.pager, b.currSlide, b.activePagerClass); var l = 0; if (b.timeout && !b.continuous) l = getTimeout(a[b.currSlide], a[b.nextSlide], b, d); else if (b.continuous && e.cyclePause) l = 10; if (l > 0) e.cycleTimeout = setTimeout(function () { go(a, b, 0, !b.backwards) }, l) } function getTimeout(a, b, c, d) { if (c.timeoutFn) { var e = c.timeoutFn.call(a, a, b, c, d); while (c.fx != "none" && e - c.speed < 250) e += c.speed; debug("calculated timeout: " + e + "; speed: " + c.speed); if (e !== false) return e } return c.timeout } function advance(a, b) { var c = b ? 1 : -1; var d = a.elements; var e = a.$cont[0], f = e.cycleTimeout; if (f) { clearTimeout(f); e.cycleTimeout = 0 } if (a.random && c < 0) { a.randomIndex--; if (--a.randomIndex == -2) a.randomIndex = d.length - 2; else if (a.randomIndex == -1) a.randomIndex = d.length - 1; a.nextSlide = a.randomMap[a.randomIndex] } else if (a.random) { a.nextSlide = a.randomMap[a.randomIndex] } else { a.nextSlide = a.currSlide + c; if (a.nextSlide < 0) { if (a.nowrap) return false; a.nextSlide = d.length - 1 } else if (a.nextSlide >= d.length) { if (a.nowrap) return false; a.nextSlide = 0 } } var g = a.onPrevNextEvent || a.prevNextClick; if ($.isFunction(g)) g(c > 0, a.nextSlide, d[a.nextSlide]); go(d, a, 1, b); return false } function buildPager(a, b) { var c = $(b.pager); $.each(a, function (d, e) { $.fn.cycle.createPagerAnchor(d, e, c, a, b) }); b.updateActivePagerLink(b.pager, b.startingSlide, b.activePagerClass) } function clearTypeFix(a) { function b(a) { a = parseInt(a).toString(16); return a.length < 2 ? "0" + a : a } function c(a) { for (; a && a.nodeName.toLowerCase() != "html"; a = a.parentNode) { var c = $.css(a, "background-color"); if (c && c.indexOf("rgb") >= 0) { var d = c.match(/\d+/g); return "#" + b(d[0]) + b(d[1]) + b(d[2]) } if (c && c != "transparent") return c } return "#ffffff" } debug("applying clearType background-color hack"); a.each(function () { $(this).css("background-color", c(this)) }) } var ver = "2.99"; if ($.support == undefined) { $.support = { opacity: !$.browser.msie } } $.expr[":"].paused = function (a) { return a.cyclePause }; $.fn.cycle = function (a, b) { var c = { s: this.selector, c: this.context }; if (this.length === 0 && a != "stop") { if (!$.isReady && c.s) { log("DOM not ready, queuing slideshow"); $(function () { $(c.s, c.c).cycle(a, b) }); return this } log("terminating; zero elements found by selector" + ($.isReady ? "" : " (DOM not ready)")); return this } return this.each(function () { var d = handleArguments(this, a, b); if (d === false) return; d.updateActivePagerLink = d.updateActivePagerLink || $.fn.cycle.updateActivePagerLink; if (this.cycleTimeout) clearTimeout(this.cycleTimeout); this.cycleTimeout = this.cyclePause = 0; var e = $(this); var f = d.slideExpr ? $(d.slideExpr, this) : e.children(); var g = f.get(); if (g.length < 2) { log("terminating; too few slides: " + g.length); return } var h = buildOptions(e, f, g, d, c); if (h === false) return; var i = h.continuous ? 10 : getTimeout(g[h.currSlide], g[h.nextSlide], h, !h.backwards); if (i) { i += h.delay || 0; if (i < 10) i = 10; debug("first timeout: " + i); this.cycleTimeout = setTimeout(function () { go(g, h, 0, !d.backwards) }, i) } }) }; $.fn.cycle.resetState = function (a, b) { b = b || a.fx; a.before = []; a.after = []; a.cssBefore = $.extend({}, a.original.cssBefore); a.cssAfter = $.extend({}, a.original.cssAfter); a.animIn = $.extend({}, a.original.animIn); a.animOut = $.extend({}, a.original.animOut); a.fxFn = null; $.each(a.original.before, function () { a.before.push(this) }); $.each(a.original.after, function () { a.after.push(this) }); var c = $.fn.cycle.transitions[b]; if ($.isFunction(c)) c(a.$cont, $(a.elements), a) }; $.fn.cycle.updateActivePagerLink = function (a, b, c) { $(a).each(function () { $(this).children().removeClass(c).eq(b).addClass(c) }) }; $.fn.cycle.next = function (a) { advance(a, 1) }; $.fn.cycle.prev = function (a) { advance(a, 0) }; $.fn.cycle.createPagerAnchor = function (a, b, c, d, e) { var f; if ($.isFunction(e.pagerAnchorBuilder)) { f = e.pagerAnchorBuilder(a, b); debug("pagerAnchorBuilder(" + a + ", el) returned: " + f) } else f = '<a href="#">' + (a + 1) + "</a>"; if (!f) return; var g = $(f); if (g.parents("body").length === 0) { var h = []; if (c.length > 1) { c.each(function () { var a = g.clone(true); $(this).append(a); h.push(a[0]) }); g = $(h) } else { g.appendTo(c) } } e.pagerAnchors = e.pagerAnchors || []; e.pagerAnchors.push(g); g.bind(e.pagerEvent, function (b) { b.preventDefault(); e.nextSlide = a; var c = e.$cont[0], f = c.cycleTimeout; if (f) { clearTimeout(f); c.cycleTimeout = 0 } var g = e.onPagerEvent || e.pagerClick; if ($.isFunction(g)) g(e.nextSlide, d[e.nextSlide]); go(d, e, 1, e.currSlide < a) }); if (!/^click/.test(e.pagerEvent) && !e.allowPagerClickBubble) g.bind("click.cycle", function () { return false }); if (e.pauseOnPagerHover) g.hover(function () { e.$cont[0].cyclePause++ }, function () { e.$cont[0].cyclePause-- }) }; $.fn.cycle.hopsFromLast = function (a, b) { var c, d = a.lastSlide, e = a.currSlide; if (b) c = e > d ? e - d : a.slideCount - d; else c = e < d ? d - e : d + a.slideCount - e; return c }; $.fn.cycle.commonReset = function (a, b, c, d, e, f) { $(c.elements).not(a).hide(); if (typeof c.cssBefore.opacity == "undefined") c.cssBefore.opacity = 1; c.cssBefore.display = "block"; if (c.slideResize && d !== false && b.cycleW > 0) c.cssBefore.width = b.cycleW; if (c.slideResize && e !== false && b.cycleH > 0) c.cssBefore.height = b.cycleH; c.cssAfter = c.cssAfter || {}; c.cssAfter.display = "none"; $(a).css("zIndex", c.slideCount + (f === true ? 1 : 0)); $(b).css("zIndex", c.slideCount + (f === true ? 0 : 1)) }; $.fn.cycle.custom = function (a, b, c, d, e, f) { var g = $(a), h = $(b); var i = c.speedIn, j = c.speedOut, k = c.easeIn, l = c.easeOut; h.css(c.cssBefore); if (f) { if (typeof f == "number") i = j = f; else i = j = 1; k = l = null } var m = function () { h.animate(c.animIn, i, k, function () { d() }) }; g.animate(c.animOut, j, l, function () { g.css(c.cssAfter); if (!c.sync) m() }); if (c.sync) m() }; $.fn.cycle.transitions = { fade: function (a, b, c) { b.not(":eq(" + c.currSlide + ")").css("opacity", 0); c.before.push(function (a, b, c) { $.fn.cycle.commonReset(a, b, c); c.cssBefore.opacity = 0 }); c.animIn = { opacity: 1 }; c.animOut = { opacity: 0 }; c.cssBefore = { top: 0, left: 0 } } }; $.fn.cycle.ver = function () { return ver }; $.fn.cycle.defaults = { activePagerClass: "activeSlide", after: null, allowPagerClickBubble: false, animIn: null, animOut: null, autostop: 0, autostopCount: 0, backwards: false, before: null, cleartype: !$.support.opacity, cleartypeNoBg: false, containerResize: 1, continuous: 0, cssAfter: null, cssBefore: null, delay: 0, easeIn: null, easeOut: null, easing: null, end: null, fastOnEvent: 0, fit: 0, fx: "fade", fxFn: null, height: "auto", manualTrump: true, next: null, nowrap: 0, onPagerEvent: null, onPrevNextEvent: null, pager: null, pagerAnchorBuilder: null, pagerEvent: "click.cycle", pause: 0, pauseOnPagerHover: 0, prev: null, prevNextEvent: "click.cycle", random: 0, randomizeEffects: 1, requeueOnImageNotLoaded: true, requeueTimeout: 250, rev: 0, shuffle: null, slideExpr: null, slideResize: 1, speed: 1e3, speedIn: null, speedOut: null, startingSlide: 0, sync: 1, timeout: 4e3, timeoutFn: null, updateActivePagerLink: null }; (function (a) { a.fn.cycle.transitions.none = function (b, c, d) { d.fxFn = function (b, c, d, e) { a(c).show(); a(b).hide(); e() } }; a.fn.cycle.transitions.fadeout = function (b, c, d) { c.not(":eq(" + d.currSlide + ")").css({ display: "block", opacity: 1 }); d.before.push(function (b, c, d, e, f, g) { a(b).css("zIndex", d.slideCount + (!g === true ? 1 : 0)); a(c).css("zIndex", d.slideCount + (!g === true ? 0 : 1)) }); d.animIn.opacity = 1; d.animOut.opacity = 0; d.cssBefore.opacity = 1; d.cssBefore.display = "block"; d.cssAfter.zIndex = 0 }; a.fn.cycle.transitions.scrollUp = function (b, c, d) { b.css("overflow", "hidden"); d.before.push(a.fn.cycle.commonReset); var e = b.height(); d.cssBefore.top = e; d.cssBefore.left = 0; d.cssFirst.top = 0; d.animIn.top = 0; d.animOut.top = -e }; a.fn.cycle.transitions.scrollDown = function (b, c, d) { b.css("overflow", "hidden"); d.before.push(a.fn.cycle.commonReset); var e = b.height(); d.cssFirst.top = 0; d.cssBefore.top = -e; d.cssBefore.left = 0; d.animIn.top = 0; d.animOut.top = e }; a.fn.cycle.transitions.scrollLeft = function (b, c, d) { b.css("overflow", "hidden"); d.before.push(a.fn.cycle.commonReset); var e = b.width(); d.cssFirst.left = 0; d.cssBefore.left = e; d.cssBefore.top = 0; d.animIn.left = 0; d.animOut.left = 0 - e }; a.fn.cycle.transitions.scrollRight = function (b, c, d) { b.css("overflow", "hidden"); d.before.push(a.fn.cycle.commonReset); var e = b.width(); d.cssFirst.left = 0; d.cssBefore.left = -e; d.cssBefore.top = 0; d.animIn.left = 0; d.animOut.left = e }; a.fn.cycle.transitions.scrollHorz = function (b, c, d) { b.css("overflow", "hidden").width(); d.before.push(function (b, c, d, e) { if (d.rev) e = !e; a.fn.cycle.commonReset(b, c, d); d.cssBefore.left = e ? c.cycleW - 1 : 1 - c.cycleW; d.animOut.left = e ? -b.cycleW : b.cycleW }); d.cssFirst.left = 0; d.cssBefore.top = 0; d.animIn.left = 0; d.animOut.top = 0 }; a.fn.cycle.transitions.scrollVert = function (b, c, d) { b.css("overflow", "hidden"); d.before.push(function (b, c, d, e) { if (d.rev) e = !e; a.fn.cycle.commonReset(b, c, d); d.cssBefore.top = e ? 1 - c.cycleH : c.cycleH - 1; d.animOut.top = e ? b.cycleH : -b.cycleH }); d.cssFirst.top = 0; d.cssBefore.left = 0; d.animIn.top = 0; d.animOut.left = 0 }; a.fn.cycle.transitions.slideX = function (b, c, d) { d.before.push(function (b, c, d) { a(d.elements).not(b).hide(); a.fn.cycle.commonReset(b, c, d, false, true); d.animIn.width = c.cycleW }); d.cssBefore.left = 0; d.cssBefore.top = 0; d.cssBefore.width = 0; d.animIn.width = "show"; d.animOut.width = 0 }; a.fn.cycle.transitions.slideY = function (b, c, d) { d.before.push(function (b, c, d) { a(d.elements).not(b).hide(); a.fn.cycle.commonReset(b, c, d, true, false); d.animIn.height = c.cycleH }); d.cssBefore.left = 0; d.cssBefore.top = 0; d.cssBefore.height = 0; d.animIn.height = "show"; d.animOut.height = 0 }; a.fn.cycle.transitions.shuffle = function (b, c, d) { var e, f = b.css("overflow", "visible").width(); c.css({ left: 0, top: 0 }); d.before.push(function (b, c, d) { a.fn.cycle.commonReset(b, c, d, true, true, true) }); if (!d.speedAdjusted) { d.speed = d.speed / 2; d.speedAdjusted = true } d.random = 0; d.shuffle = d.shuffle || { left: -f, top: 15 }; d.els = []; for (e = 0; e < c.length; e++) d.els.push(c[e]); for (e = 0; e < d.currSlide; e++) d.els.push(d.els.shift()); d.fxFn = function (b, c, d, e, f) { if (d.rev) f = !f; var g = f ? a(b) : a(c); a(c).css(d.cssBefore); var h = d.slideCount; g.animate(d.shuffle, d.speedIn, d.easeIn, function () { var c = a.fn.cycle.hopsFromLast(d, f); for (var i = 0; i < c; i++) f ? d.els.push(d.els.shift()) : d.els.unshift(d.els.pop()); if (f) { for (var j = 0, k = d.els.length; j < k; j++) a(d.els[j]).css("z-index", k - j + h) } else { var l = a(b).css("z-index"); g.css("z-index", parseInt(l) + 1 + h) } g.animate({ left: 0, top: 0 }, d.speedOut, d.easeOut, function () { a(f ? this : b).hide(); if (e) e() }) }) }; a.extend(d.cssBefore, { display: "block", opacity: 1, top: 0, left: 0 }) }; a.fn.cycle.transitions.turnUp = function (b, c, d) { d.before.push(function (b, c, d) { a.fn.cycle.commonReset(b, c, d, true, false); d.cssBefore.top = c.cycleH; d.animIn.height = c.cycleH; d.animOut.width = c.cycleW }); d.cssFirst.top = 0; d.cssBefore.left = 0; d.cssBefore.height = 0; d.animIn.top = 0; d.animOut.height = 0 }; a.fn.cycle.transitions.turnDown = function (b, c, d) { d.before.push(function (b, c, d) { a.fn.cycle.commonReset(b, c, d, true, false); d.animIn.height = c.cycleH; d.animOut.top = b.cycleH }); d.cssFirst.top = 0; d.cssBefore.left = 0; d.cssBefore.top = 0; d.cssBefore.height = 0; d.animOut.height = 0 }; a.fn.cycle.transitions.turnLeft = function (b, c, d) { d.before.push(function (b, c, d) { a.fn.cycle.commonReset(b, c, d, false, true); d.cssBefore.left = c.cycleW; d.animIn.width = c.cycleW }); d.cssBefore.top = 0; d.cssBefore.width = 0; d.animIn.left = 0; d.animOut.width = 0 }; a.fn.cycle.transitions.turnRight = function (b, c, d) { d.before.push(function (b, c, d) { a.fn.cycle.commonReset(b, c, d, false, true); d.animIn.width = c.cycleW; d.animOut.left = b.cycleW }); a.extend(d.cssBefore, { top: 0, left: 0, width: 0 }); d.animIn.left = 0; d.animOut.width = 0 }; a.fn.cycle.transitions.zoom = function (b, c, d) { d.before.push(function (b, c, d) { a.fn.cycle.commonReset(b, c, d, false, false, true); d.cssBefore.top = c.cycleH / 2; d.cssBefore.left = c.cycleW / 2; a.extend(d.animIn, { top: 0, left: 0, width: c.cycleW, height: c.cycleH }); a.extend(d.animOut, { width: 0, height: 0, top: b.cycleH / 2, left: b.cycleW / 2 }) }); d.cssFirst.top = 0; d.cssFirst.left = 0; d.cssBefore.width = 0; d.cssBefore.height = 0 }; a.fn.cycle.transitions.fadeZoom = function (b, c, d) { d.before.push(function (b, c, d) { a.fn.cycle.commonReset(b, c, d, false, false); d.cssBefore.left = c.cycleW / 2; d.cssBefore.top = c.cycleH / 2; a.extend(d.animIn, { top: 0, left: 0, width: c.cycleW, height: c.cycleH }) }); d.cssBefore.width = 0; d.cssBefore.height = 0; d.animOut.opacity = 0 }; a.fn.cycle.transitions.blindX = function (b, c, d) { var e = b.css("overflow", "hidden").width(); d.before.push(function (b, c, d) { a.fn.cycle.commonReset(b, c, d); d.animIn.width = c.cycleW; d.animOut.left = b.cycleW }); d.cssBefore.left = e; d.cssBefore.top = 0; d.animIn.left = 0; d.animOut.left = e }; a.fn.cycle.transitions.blindY = function (b, c, d) { var e = b.css("overflow", "hidden").height(); d.before.push(function (b, c, d) { a.fn.cycle.commonReset(b, c, d); d.animIn.height = c.cycleH; d.animOut.top = b.cycleH }); d.cssBefore.top = e; d.cssBefore.left = 0; d.animIn.top = 0; d.animOut.top = e }; a.fn.cycle.transitions.blindZ = function (b, c, d) { var e = b.css("overflow", "hidden").height(); var f = b.width(); d.before.push(function (b, c, d) { a.fn.cycle.commonReset(b, c, d); d.animIn.height = c.cycleH; d.animOut.top = b.cycleH }); d.cssBefore.top = e; d.cssBefore.left = f; d.animIn.top = 0; d.animIn.left = 0; d.animOut.top = e; d.animOut.left = f }; a.fn.cycle.transitions.growX = function (b, c, d) { d.before.push(function (b, c, d) { a.fn.cycle.commonReset(b, c, d, false, true); d.cssBefore.left = this.cycleW / 2; d.animIn.left = 0; d.animIn.width = this.cycleW; d.animOut.left = 0 }); d.cssBefore.top = 0; d.cssBefore.width = 0 }; a.fn.cycle.transitions.growY = function (b, c, d) { d.before.push(function (b, c, d) { a.fn.cycle.commonReset(b, c, d, true, false); d.cssBefore.top = this.cycleH / 2; d.animIn.top = 0; d.animIn.height = this.cycleH; d.animOut.top = 0 }); d.cssBefore.height = 0; d.cssBefore.left = 0 }; a.fn.cycle.transitions.curtainX = function (b, c, d) { d.before.push(function (b, c, d) { a.fn.cycle.commonReset(b, c, d, false, true, true); d.cssBefore.left = c.cycleW / 2; d.animIn.left = 0; d.animIn.width = this.cycleW; d.animOut.left = b.cycleW / 2; d.animOut.width = 0 }); d.cssBefore.top = 0; d.cssBefore.width = 0 }; a.fn.cycle.transitions.curtainY = function (b, c, d) { d.before.push(function (b, c, d) { a.fn.cycle.commonReset(b, c, d, true, false, true); d.cssBefore.top = c.cycleH / 2; d.animIn.top = 0; d.animIn.height = c.cycleH; d.animOut.top = b.cycleH / 2; d.animOut.height = 0 }); d.cssBefore.height = 0; d.cssBefore.left = 0 }; a.fn.cycle.transitions.cover = function (b, c, d) { var e = d.direction || "left"; var f = b.css("overflow", "hidden").width(); var g = b.height(); d.before.push(function (b, c, d) { a.fn.cycle.commonReset(b, c, d); if (e == "right") d.cssBefore.left = -f; else if (e == "up") d.cssBefore.top = g; else if (e == "down") d.cssBefore.top = -g; else d.cssBefore.left = f }); d.animIn.left = 0; d.animIn.top = 0; d.cssBefore.top = 0; d.cssBefore.left = 0 }; a.fn.cycle.transitions.uncover = function (b, c, d) { var e = d.direction || "left"; var f = b.css("overflow", "hidden").width(); var g = b.height(); d.before.push(function (b, c, d) { a.fn.cycle.commonReset(b, c, d, true, true, true); if (e == "right") d.animOut.left = f; else if (e == "up") d.animOut.top = -g; else if (e == "down") d.animOut.top = g; else d.animOut.left = -f }); d.animIn.left = 0; d.animIn.top = 0; d.cssBefore.top = 0; d.cssBefore.left = 0 }; a.fn.cycle.transitions.toss = function (b, c, d) { var e = b.css("overflow", "visible").width(); var f = b.height(); d.before.push(function (b, c, d) { a.fn.cycle.commonReset(b, c, d, true, true, true); if (!d.animOut.left && !d.animOut.top) a.extend(d.animOut, { left: e * 2, top: -f / 2, opacity: 0 }); else d.animOut.opacity = 0 }); d.cssBefore.left = 0; d.cssBefore.top = 0; d.animIn.left = 0 }; a.fn.cycle.transitions.wipe = function (b, c, d) { var e = b.css("overflow", "hidden").width(); var f = b.height(); d.cssBefore = d.cssBefore || {}; var g; if (d.clip) { if (/l2r/.test(d.clip)) g = "rect(0px 0px " + f + "px 0px)"; else if (/r2l/.test(d.clip)) g = "rect(0px " + e + "px " + f + "px " + e + "px)"; else if (/t2b/.test(d.clip)) g = "rect(0px " + e + "px 0px 0px)"; else if (/b2t/.test(d.clip)) g = "rect(" + f + "px " + e + "px " + f + "px 0px)"; else if (/zoom/.test(d.clip)) { var h = parseInt(f / 2); var i = parseInt(e / 2); g = "rect(" + h + "px " + i + "px " + h + "px " + i + "px)" } } d.cssBefore.clip = d.cssBefore.clip || g || "rect(0px 0px 0px 0px)"; var j = d.cssBefore.clip.match(/(\d+)/g); var k = parseInt(j[0]), l = parseInt(j[1]), m = parseInt(j[2]), n = parseInt(j[3]); d.before.push(function (b, c, d) { if (b == c) return; var g = a(b), h = a(c); a.fn.cycle.commonReset(b, c, d, true, true, false); d.cssAfter.display = "block"; var i = 1, j = parseInt(d.speedIn / 13) - 1; (function o() { var a = k ? k - parseInt(i * (k / j)) : 0; var b = n ? n - parseInt(i * (n / j)) : 0; var c = m < f ? m + parseInt(i * ((f - m) / j || 1)) : f; var d = l < e ? l + parseInt(i * ((e - l) / j || 1)) : e; h.css({ clip: "rect(" + a + "px " + d + "px " + c + "px " + b + "px)" }); i++ <= j ? setTimeout(o, 13) : g.css("display", "none") })() }); a.extend(d.cssBefore, { display: "block", opacity: 1, top: 0, left: 0 }); d.animIn = { left: 0 }; d.animOut = { left: 0 } } })(jQuery)