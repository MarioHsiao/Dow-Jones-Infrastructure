//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Web.UI.WebResourceAttribute("DowJones.Web.Mvc.Search.UI.Components.SearchNavigator.SearchNavigator.js", "text/javascript")]

namespace DowJones.Web.Mvc.Search.UI.Components.SearchNavigator
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Web;
    using System.Web.Security;
    using System.Web.UI;
    using DowJones.Web.Mvc.Search.UI.Components.Filters;
    using DowJones.Web.Mvc.Extensions;
    
    // Last Generated Timestamp: 11/03/2011 09:55 AM
    [DowJones.Web.ScriptResourceAttribute(null, ResourceName="DowJones.Web.Mvc.Search.UI.Components.SearchNavigator.SearchNavigator.js", ResourceKind=DowJones.Web.ClientResourceKind.Script, DeclaringType=typeof(DowJones.Web.Mvc.Search.UI.Components.SearchNavigator.SearchNavigatorComponent))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorViewComponentClassGenerator", "0.0.0.30158")]
    public class SearchNavigatorComponent : DowJones.Web.Mvc.UI.CompositeComponent<SearchNavigator>
    {
#line hidden

        public SearchNavigatorComponent()
        {
        }
        public override string ClientPluginName
        {
            get
            {
                return "dj_SearchNavigator";
            }
        }
        public override void ExecuteTemplate()
        {





   CssClass = "dj_SearchNavigator"; 

WriteLiteral("\r\n<input type=\"hidden\" class=\"primaryGroupInput\" name=\"primaryGroup\" value=\"");


                                                                     Write(Model.PrimaryGroupId);

WriteLiteral("\" />\r\n<input type=\"hidden\" class=\"secondaryGroupInput\" name=\"secondaryGroup\" valu" +
"e=\"");


                                                                         Write(Model.SecondaryGroupId);

WriteLiteral("\" />\r\n<input type=\"hidden\" name=\"layout\" id=\"layout\" value=\"");


                                                 Write(Model.Layout.ToString().ToLower());

WriteLiteral("\" />\r\n<div class=\"dj_search-source-groups ui-component js_search-source-groups\">\r" +
"\n\r\n    <ul class=\"source-list\">\r\n            \r\n        <li class=\"toggle-view\" t" +
"itle=\"");


                                  Write(DJ.Token("clickToToggleFrames"));

WriteLiteral("\">\r\n            <span class=\"dj_icon\"></span>\r\n        </li>\r\n            \r\n");


         foreach (var group in Model.PrimarySourceGroups) {

WriteLiteral("            <li title=\"");


                  Write(group.DisplayName);

WriteLiteral("\" data-group=\"");


                                                  Write(group.GroupCode);

WriteLiteral("\" class=\"source source-");


                                                                                         Write(group.GroupTag);

WriteLiteral(" ");


                                                                                                          Write(group.HasCount ? string.Empty : "no-count");

WriteLiteral(" ");


                                                                                                                                                        Write(group.IsSelected ? "active" : string.Empty);

WriteLiteral("\">\r\n                <span class=\"dj_icon\"></span>\r\n                <h5>");


               Write(group.DisplayName);

WriteLiteral("</h5>\r\n");


                 if (group.HasCount) {

WriteLiteral("                    <span class=\"count\">(");


                                    Write(Format(group.ResultCount));

WriteLiteral(")</span>\r\n");


                }

WriteLiteral("            </li>\r\n");


        }

WriteLiteral("    </ul>\r\n\r\n</div>\r\n\r\n");


 if (Model.HasAdditionalFilters) {

WriteLiteral("<div class=\"dj_Filters dj_search-additional-filters ui-component\">\r\n    <h3 class" +
"=\"filters-title\">");


                         Write(DJ.Token("additionalFilters"));

WriteLiteral("</h3>\r\n\r\n    ");


Write(ComponentFactory.RenderComponent<SearchNavigatorTree>(Model.AdditionalFilters, new { @class = "root dj_browse-tree" }));

WriteLiteral("\r\n    \r\n</div>\r\n");


}

        }
    }
}
