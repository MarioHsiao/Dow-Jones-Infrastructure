
/*
* jQuery JSONP Core Plugin 2.3.1 (2012-05-16)
*
* https://github.com/jaubourg/jquery-jsonp
*
* Copyright (c) 2012 Julian Aubourg
*
* This document is licensed as free software under the terms of the
* MIT License: http://www.opensource.org/licenses/mit-license.php
*/
function getSalt() { return Math.ceil(Math.random() * 1e12) } (function (a) { function b() { } function c(a) { A = [a] } function d(a, b, c, d) { try { d = a && a.apply(b.context || b, c) } catch (e) { d = !1 } return d } function e(a) { var b = /\?/; return b.test(a) ? "&" : "?" } function D(l) { function Y(a) { if (!(Q++)) { R(); K && (y[M] = { s: [a] }); G && (a = G.apply(l, [a])); d(D, l, [a, t]); d(F, l, [l, t]) } } function Z(a) { if (!(Q++)) { R(); K && a != u && (y[M] = a); d(E, l, [l, a]); d(F, l, [l, a]) } } l = a.extend({}, B, l); var D = l.success, E = l.error, F = l.complete, G = l.dataFilter, H = l.callbackParameter, I = l.callback, J = l.cache, K = l.pageCache, L = l.charset, M = l.url, N = l.data, O = l.timeout, P, Q = 0, R = b, S, T, U, V, W, X; w && w(function (a) { a.done(D).fail(E); D = a.resolve; E = a.reject }).promise(l); l.abort = function () { !(Q++) && R() }; if (d(l.beforeSend, l, [l]) === !1 || Q) { return l } M = M || h; N = N ? typeof N == "string" ? N : a.param(N, l.traditional) : h; M += N ? e(M) + N : h; H && (M += e(M) + encodeURIComponent(H) + "=?"); !J && !K && (M += e(M) + "_" + (new Date).getTime() + "="); M = M.replace(/=\?(&|$)/, "=" + I + "$1"); if (K && (P = y[M])) { P.s ? Y(P.s[0]) : Z(P) } else { v[I] = c; V = a(s)[0]; V.id = k + z++; if (L) { V[g] = L } C && C.version() < 11.6 ? (W = a(s)[0]).text = "document.getElementById('" + V.id + "')." + n + "()" : V[f] = f; if (p in V) { V.htmlFor = V.id; V.event = m } V[o] = V[n] = V[p] = function (a) { if (!V[q] || !/i/.test(V[q])) { try { V[m] && V[m]() } catch (b) { } a = A; A = 0; a ? Y(a[0]) : Z(i) } }; V.src = M; R = function (a) { X && clearTimeout(X); V[p] = V[o] = V[n] = null; x[r](V); W && x[r](W) }; x[j](V, U = x.firstChild); W && x[j](W, U); X = O > 0 && setTimeout(function () { Z(u) }, O) } return l } var f = "async", g = "charset", h = "", i = "error", j = "insertBefore", k = "_jqjsp", l = "on", m = l + "click", n = l + i, o = l + "load", p = l + "readystatechange", q = "readyState", r = "removeChild", s = "<script>", t = "success", u = "timeout", v = window, w = a.Deferred, x = a("head")[0] || document.documentElement, y = {}, z = 0, A, B = { callback: k, url: location.href }, C = v.opera; D.setup = function (b) { a.extend(B, b) }; a.jsonp = D })(DJ.jQuery); var TRUE = true, FALSE = false, NULL = null, undefined, head = document.head || document.getElementsByTagName("head")[0] || document.documentElement, requestMethod = "jsonp", sendRequest; (function () { if (DJ.config && /CORS/i.test(DJ.config.crossDomainTransport)) { if (typeof JSON !== "undefined" && JSON.parse) { if (typeof XMLHttpRequest !== "undefined" && "withCredentials" in new XMLHttpRequest) { requestMethod = "xhr-cors" } else if (/{\s*\[native code\]\s*}/.test(JSON.parse.toString()) && typeof XDomainRequest !== "undefined") { requestMethod = "xdr" } } } })(); switch (requestMethod) { case "xhr-cors": sendRequest = function (a, b, c) { a += "_=" + getSalt(); var d = new XMLHttpRequest, e = "get"; d.open(e, a, true); d.onload = function (a) { var e = d.responseText; if (JSON && JSON.parse && e) { e = JSON.parse(e); b(e, c) } }; d.onerror = function () { var a = { Error: { Message: "Data request error occurred (" + d.status + ")." } }; b(a, c) }; d.send() }; break; case "xdr": sendRequest = function (a, b, c) { a += "&_=" + getSalt(); var d = new XDomainRequest, e = "get"; d.open(e, a); d.onload = function () { var a = d.responseText; if (JSON && JSON.parse && a) { a = JSON.parse(a); b(a, c) } }; d.onerror = function () { var a = { Error: { Message: "Data request error occurred (" + d.status + ")." } }; b(a, c) }; d.onprogress = function () { }; d.ontimeout = function () { }; d.send() }; break; default: sendRequest = function (a) { var b = { callbackParameter: "callback", timeout: 30 * 1e3 }; var c = DJ.jQuery.extend({}, b, a); DJ.jQuery.jsonp(c) } } DJ.crossDomain = sendRequest
