/**
* Popup Balloon (callout) Plugin
*
* @category   jQuery UI Widget
* @author     Philippe Arcand <Philippe.Arcand@dowjones.com>
* @author     Ron Edgecomb <Ronald.EdgecombII@dowjones.com>
* @copyright  2011 Dow Jones & Company Inc.
* @version    SVN: $Id: jquery.popupballoon.js 4061 2012-03-01 15:15:57Z parcand $
* @dependency jquery.ui.core.js
* @dependency jquery.ui.widget.js
*/
(function (a, b) { a.widget("ui.popupBalloon", { options: { popupClass: "", width: 400, height: 130, positionX: null, positionY: null, title: "", content: "", jScrollPaneEnabled: true, insetMargin: 0, animationDistance: 50, positioningMode: "normal", alignTo: a("body"), popupPosition: "right", popupAlign: "center", xAlign: "right", xOffset: 0, xOffsetInverted: "auto", yAlign: "center", yOffset: 0, yOffsetInverted: "auto", arrowEnabled: true, animateDisplayEnabled: true, animateMoveEnabled: true, animateHideEnabled: true, animationSpeed: 300, interactionMode: "none", mouseNearPadding: 10 }, _create: function () { var b = this, c = b.element, d = b.options; if (!a.iDevices) { b.iDevices = { iPad: navigator.userAgent.indexOf("iPad") != -1 } } else { b.iDevices = a.iDevices } b.preferences = { popupPosition: d.popupPosition, popupAlign: d.popupAlign }; if (d.xOffsetInverted == "auto") { d.xOffsetInverted = 0; if (!a(b.element).is("shape")) { var e = a(b.element).width(); if (d.popupPosition == "right" && d.xAlign == "right") { d.xOffsetInverted = e * -1 } if (d.popupPosition == "left" && d.xAlign == "left") { d.xOffsetInverted = e } } } if (d.yOffsetInverted == "auto") { d.yOffsetInverted = 0; if (!a(b.element).is("shape")) { var f = a(b.element).height(); if (d.popupPosition == "top" && d.yAlign == "top") { d.yOffsetInverted = f / 2 } if (d.popupPosition == "bottom" && d.yAlign == "bottom") { d.yOffsetInverted = f / 2 * -1 } } } a(document).mousemove(function (a) { b.mouseX = a.pageX; b.mouseY = a.pageY; b.nearCallout = false; if (b.isVisible()) { var c = d.mouseNearPadding; if (b.mouseX >= b.currentX - c && b.mouseX <= b.currentX + b.currentWidth + c && b.mouseY >= b.currentY - c && b.mouseY <= b.currentY + b.currentHeight + c) { b.nearCallout = true } } if (b.nearCallout) { b._trigger("popupMouseNear", a, b.popbox) } }); window.setTimeout(function () { a("body").bind("mousedown", function (c) { if (!a(c.target).data("popbox")) { b.hide() } c.stopPropagation() }) }, 20) }, _init: function () { var b = this, c = b.element, d = b.options; b.visible = false; if (!d.animateDisplayEnabled) { d.animationDistance = 0 } d.popupPosition = b.preferences.popupPosition; popupAlign = b.preferences.popupAlign; switch (d.interactionMode) { case "custom": case "none": if (a(".popup-balloon").length) { if (a(c).data("timestamp") == a(".popup-balloon").data("timestamp")) { b.hide() } else { b.show() } } else { b.show() } break; case "click": a(c).bind("click", function (a) { if (!b.visible) { b._hide(true); b.show() } }); break; case "hover": a(c).bind("mouseenter", function () { clearTimeout(a.data(this, "bubbleTimeout")); var c = a(this).data("ibubbleIsOpened"); if (!c) { a(this).data("ibubbleIsOpened", true); b.show() } }); a(c).bind("mouseleave", function () { a(this).data("bubbleTimeout", window.setTimeout(function () { var b = a(c).data("ibubbleIsOpened"); if (b) { a(c).removeData("ibubbleIsOpened"); a(c).popupBalloon("hide"); clearTimeout(a(c).data("bubbleTimeout")) } }, 300)) }); break } }, _setOption: function (a, b) { var c = this, d = c.element, e = c.options; if (c.popbox) { switch (a) { case "popupClass": c.popbox.removeClass().addClass("popup-balloon").addClass(b); if (e.title) { c.popbox.addClass("with-title") } if (e.arrowEnabled) { c.popbox.addClass("with-arrow") } e[a] = b; break; case "title": c.popbox.find(".title").text(b); e[a] = b; break; case "content": c.popbox.find(".content").empty().html(b); c._setCalloutHeight("auto"); if (e.jScrollPaneEnabled) { c.popbox.find(".content").jScrollPane({ showArrows: true, autoReinitialise: false, verticalDragMaxHeight: 52, verticalGutter: 10, horizontalGutter: 20 }) } e[a] = b; break; case "width": c.popbox.find(".popup-body, .header .title").outerWidth(b); c.currentWidth = b; e[a] = b; break; case "height": c._setCalloutHeight(b); e[a] = b; break; case "popupPosition": case "popupAlign": c.preferences[a] = e[a] = b; break; default: e[a] = b; break } } }, show: function () { var b = this, c = b.element, d = b.options; if (b.visible) { return } var e = (new Date).getTime(); if (c.data("popbox")) { b._hide() } if (d.interactionMode == "hover") { b._hide(true) } var f = a('<div class="popup-balloon"><div class="balloon-arrow"></div><div class="popup-body"><div class="content"></div></div></div>'); b.popbox = f; f.data("controller", c); f.data("timestamp", e); c.data("timestamp", e); if (d.popupClass) { f.addClass(d.popupClass) } if (d.title) { f.addClass("with-title"); f.prepend('<div class="header"><div class="title ellipsis">' + d.title + "</div></div>") } if (d.content) { f.find(".content").empty().html(d.content) } if (d.arrowEnabled) { f.addClass("with-arrow") } a("body").append(f); f.find(".popup-body, .header .title").outerWidth(d.width); b.currentWidth = d.width; b._setCalloutHeight(d.height); d.popupPosition = b.preferences.popupPosition; d.popupAlign = b.preferences.popupAlign; f.attr({ position: d.popupPosition, popupalign: d.popupAlign }); var g = b._getCoordinates(f), h = g.x, i = g.y; f.bind("mousemove", function (a) { a.stopPropagation(); b._trigger("popupMouseMove", a, f) }).bind("mousedown", function (a) { a.stopPropagation(); b._trigger("popupMouseDown", a, f) }).bind("mouseenter", function (a) { b._trigger("popupMouseEnter", a, f) }).bind("mouseleave", function (a) { b._trigger("popupMouseLeave", a, f) }); if (d.interactionMode == "hover") { f.bind("mouseenter", function () { clearTimeout(a(c).data("bubbleTimeout")) }); f.bind("mouseleave", function () { a(c).data("bubbleTimeout", window.setTimeout(function () { var b = a(c).data("ibubbleIsOpened"); if (b) { a(c).removeData("ibubbleIsOpened"); a(c).popupBalloon("hide"); clearTimeout(a(c).data("bubbleTimeout")) } }, 300)) }) } if (d.jScrollPaneEnabled) { f.find(".content").jScrollPane({ showArrows: true, autoReinitialise: true, verticalDragMaxHeight: 52, verticalGutter: 10, horizontalGutter: 20 }) } if (typeof $dj == "undefined") { window.$dj = { maxZIndex: 99999 } } f.css("z-index", ++$dj.maxZIndex); c.data("popbox", f); this.visible = true; b.positionElement(f, h, i, function () { b._trigger("onShow") }) }, _hide: function (b) { var c = this, d = c.element, e = c.options; var f = d.data("popbox"); if (b) { var f = a(".popup-balloon") } if (f) { if (e.animateHideEnabled && !b) { f.fadeOut(e.animationSpeed, function () { a(this).remove() }) } else { f.each(function () { a(this).data("controller").popupBalloon("hide") }) } } }, hide: function () { var a = this; a._hide(); a.visible = false; a._trigger("onHide") }, _setCalloutHeight: function (a) { var b = this, c = b.element, d = b.options; if (a == "auto") { b.popbox.find(".content").outerHeight(b.popbox.find(".content").height("").outerHeight()) } else { var e = b.popbox.find(".header .title").outerHeight(), f = a - e; b.popbox.find(".content").outerHeight(f) } b.currentHeight = b.popbox.height() }, positionElement: function (b, c, d, e) { var f = this, g = f.element, h = f.options, i = h.popupPosition == "right" ? h.animationDistance : h.popupPosition == "left" ? h.animationDistance * -1 : 0, j = h.popupPosition == "bottom" ? h.animationDistance : h.popupPosition == "top" ? h.animationDistance * -1 : 0; if (h.animateDisplayEnabled) { a(b).css({ top: d + j + "px", left: c + i + "px", display: "block" }); a(b).stop().animate({ left: "-=" + i, top: "-=" + j }, h.animationSpeed, function () { a(this).css({ opacity: "", zoom: "", filter: "" }); f.scrollDocument(e) }) } else { a(b).stop().css({ top: d + "px", left: c + "px", display: "block", opacity: "", zoom: "", filter: "" }); f.scrollDocument(e) } f.currentX = c; f.currentY = d }, updatePosition: function (b, c) { var d = this, e = d.element, f = d.options, g = e.data("popbox"); f.positionX = b; f.positionY = c; f.popupPosition = d.preferences.popupPosition; f.popupAlign = d.preferences.popupAlign; var h = d._getCoordinates(g), i = h.x, j = h.y; g.attr({ position: f.popupPosition, popupalign: f.popupAlign }); if (f.animateMoveEnabled) { g.stop().animate({ top: j, left: i }, f.animationSpeed, function () { a(this).css({ opacity: "", zoom: "", filter: "" }); d.scrollDocument() }) } else { g.css({ top: j, left: i, opacity: "", zoom: "", filter: "" }); d.scrollDocument() } d.currentX = i; d.currentY = j }, rePosition: function (b) { var c = this, d = c.options, e = this.popbox, f = a("div.content", e), g = a(".balloon-arrow", e), h = e.offset(), i = g.position(), j = f.height(), k = 0, l = 0; if (g.offset().left + g.width() < a(c.element).offset().left) { var m = c._getCoordinates(e); var n = a(c.element).outerWidth(true); if (a(c.element).is("shape")) { n = parseInt(n / 3) } a(e).animate({ left: m.x - n + "px" }, 200, b) } else { if (a.isFunction(b)) { b() } } if (f.children().size() > 0) { f.children().each(function () { k = k + a(this).outerHeight() }); if (k > j) { l = k - j; if (d.popupAlign != "top" && d.popupAlign != "bottom" && d.popupAlign != "under-title") { e.animate({ top: h.top - l / 2 + "px" }, { duration: 200, queue: false }); g.animate({ top: i.top + l / 2 + "px" }, { duration: 200, queue: false }) } else if (d.popupAlign == "bottom") { e.animate({ top: h.top - l + "px" }, { duration: 200, queue: false }) } f.animate({ height: k }, { duration: 200, queue: false, complete: function () { a(this).css({ height: "", overflow: "visible" }); c.scrollDocument(b) } }) } else { if (a.isFunction(b)) { b() } } f.children().show() } }, scrollDocument: function (b) { var c = this, d = this.popbox, e = d.offset(), f = d.outerHeight(), g = a(window).height(), h = c.iDevices.iPad ? window.pageYOffset : a(document).scrollTop(), i = 0; if (g + h - e.top < f) { i = f - (g - e.top) + 1 } else if (h > 0 && h - e.top > 0) { i = e.top - 1 } if (i) { a("body").stop().animate({ scrollTop: i }, 500, b || a.noop()) } else { if (a.isFunction(b)) { b() } } }, getpopbox: function () { return this.popbox }, isVisible: function () { return this.visible }, _getCoordinates: function (b) { var c = this, d = c.element, e = c.options, f = a(b).outerHeight(), g = a(b).outerWidth(), h = a(b).find(".balloon-arrow"), i = e.arrowEnabled ? h.outerWidth() : 0, j = e.arrowEnabled ? h.outerHeight() : 0; var k = a(d); if (e.positioningMode == "alignTo") { k = e.alignTo } if (e.positionX || e.positionX === 0 || e.positionY || e.positionY === 0) { var l = e.positionX, m = e.positionY } else if (e.positioningMode == "cursor") { var l = c.mouseX, m = c.mouseY } else { switch (e.xAlign) { case "left": var l = k.offset().left; break; case "right": var l = k.offset().left + k.outerWidth(); break; case "center": default: var l = k.offset().left + k.outerWidth() / 2; break } switch (e.yAlign) { case "top": var m = k.offset().top; break; case "bottom": var m = k.offset().top + k.outerHeight(); break; case "center": default: var m = k.offset().top + k.outerHeight() / 2; break } } l += e.xOffset; m += e.yOffset; switch (e.popupPosition) { case "top": if (m - j - f - e.animationDistance + e.insetMargin < 0) { m = m + j - e.insetMargin - e.yOffset + e.yOffset * -1 + e.yOffsetInverted; e.popupPosition = "bottom"; a(b).attr("position", "bottom") } else { m = m - j - f + e.insetMargin; a(b).attr("position", "top") } break; case "left": if (l - i - g - e.animationDistance + e.insetMargin < 0) { l = l + i - e.insetMargin - e.xOffset + e.xOffset * -1 + e.xOffsetInverted; e.popupPosition = "right"; a(b).attr("position", "right") } else { l = l - i - g + e.insetMargin; a(b).attr("position", "left") } break; case "bottom": if (m + j + f + e.animationDistance - e.insetMargin > a(document).height()) { m = m - j - f + e.insetMargin - e.yOffset + e.yOffset * -1 + e.yOffsetInverted; e.popupPosition = "top"; a(b).attr("position", "top") } else { m = m + j - e.insetMargin; a(b).attr("position", "bottom") } break; case "right": default: if (l + i + g + e.animationDistance - e.insetMargin > a(window).width()) { l = l - i - g + e.insetMargin - e.xOffset + e.xOffset * -1 + e.xOffsetInverted; if (l < 0) { l = 0 } e.popupPosition = "left"; a(b).attr("position", "left") } else { l = l + i - e.insetMargin; a(b).attr("position", "right") } break } var n = false, o = 0; if (e.arrowEnabled) { h.css({ top: "", right: "", bottom: "", left: "" }); while (!n && o < 3) { o++; switch (e.popupAlign) { case "top": var p = m - j / 2; if (p + f <= a(document).height()) { n = true; m = p; a(b).attr("popupalign", "top"); h.css("top", "") } else { e.popupAlign = "center" } break; case "under-title": var p = m - j / 2 - 63; if (p + f <= a(document).height()) { n = true; m = p; h.css("margin-top", "25px") } else { e.popupAlign = "center" } break; case "right": var q = l - (g - i / 2); if (q > 0) { n = true; l = q; a(b).attr("popupalign", "right"); h.css("right", "") } else { e.popupAlign = "left" } break; case "bottom": var p = m - (f - j / 2); if (p > 0) { n = true; m = p; a(b).attr("popupalign", "bottom"); h.css("bottom", "") } else { e.popupAlign = "top" } break; case "left": var q = l - i / 2; if (q + g <= a(window).width()) { n = true; l = q; a(b).attr("popupalign", "left"); h.css("left", "") } else { e.popupAlign = "center" } break; case "center": default: if (e.popupPosition == "left" || e.popupPosition == "right") { var p = m - f / 2; if (p + f <= a(document).height() && p > 0) { n = true; m = p; h.css("top", f / 2 - j / 2 + "px"); a(b).attr("popupalign", "center") } else { e.popupAlign = "bottom" } } else if (e.popupPosition == "top" || e.popupPosition == "bottom") { var q = l - g / 2; if (q + g <= a(window).width() && q > 0) { n = true; l -= g / 2; h.css("left", g / 2 - i / 2 + "px"); a(b).attr("popupalign", "center") } else { e.popupAlign = "right" } } break } } } else { while (!n && o < 3) { o++; switch (e.popupAlign) { case "top": if (m + f <= a(document).height()) { n = true; a(b).attr("popupalign", "top") } else { e.popupAlign = "center" } break; case "right": var q = l - g; if (q > 0) { n = true; l = q; a(b).attr("popupalign", "right") } else { e.popupAlign = "left" } break; case "bottom": var p = m - f; if (p > 0) { n = true; m = p; a(b).attr("popupalign", "bottom") } else { e.popupAlign = "top" } break; case "left": if (l + g <= a(window).width()) { n = true; a(b).attr("popupalign", "left") } else { e.popupAlign = "center" } break; case "center": default: if (e.popupPosition == "left" || e.popupPosition == "right") { var p = m - f / 2; if (p + f <= a(document).height() && p > 0) { n = true; m = p; a(b).attr("popupalign", "center") } else { e.popupAlign = "bottom" } } else if (e.popupPosition == "top" || e.popupPosition == "bottom") { var q = l - g / 2; if (q + g <= a(window).width() && q > 0) { n = true; l -= g / 2; a(b).attr("popupalign", "center") } else { e.popupAlign = "right" } } break } } } return { x: l, y: m } } }) })(jQuery)