/*!  Dow Jones Error Manager  */
$dj.registerNamespace("DJ"); DJ.ErrorManager = { errorMessages: { "-1": "<%= Token('errorForUserMinus1') %>", 585327: "<%= Token('operationAborted') %>" }, formatError: function (a, b) { if (a === null || a === undefined) return b; var c = "-1"; var b = b || a.message || a.Message; if (a && (a.code || a.Code)) c = JSON.stringify(a.code || a.Code); else c = a || c; if (b === undefined) b = DJ.ErrorManager.errorMessages[c]; if (b === undefined || b === null || b.length < 1) b = DJ.ErrorManager.errorMessages["-1"]; return "<%= Token('error') %> " + c + ": " + b }, getError: function (a) { if (!a) { return null } var b = function (a) { return a && !$.isFunction(a) }; var c = b(a.error) ? a.error : null; var d = a.code || a.returnCode || a.Code; var e = a.message || a.statusMessage || a.Message; var f = parseInt(a.status); var g = !isNaN(f) && f != 0; if (!c) { var h = a.responseText; if (g && h && h.length > 0) { try { c = JSON.parse(h) } catch (i) { $dj.debug("Couldn't parse response body JSON (not unexpected)") } } } if (c && b(c.error || c.Error)) return DJ.ErrorManager.getError(c.error || c.Error); if (!c && !d && g) { var j = Math.floor(f / 100); if (j > 2 && j < 6) { d = "21090" + j.toString() } } if (d) { c = { code: d, message: e } } if (c) { var k = parseInt(c.code); if (k !== NaN) { c.code = k } } return c }, registerErrors: function (a) { $.extend(DJ.ErrorManager.errorMessages, a) } }; $.extend($dj, { formatError: DJ.ErrorManager.formatError, getError: DJ.ErrorManager.getError })