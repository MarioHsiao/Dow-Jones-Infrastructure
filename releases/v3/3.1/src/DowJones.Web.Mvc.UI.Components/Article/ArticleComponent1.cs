//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Web.UI.WebResourceAttribute("DowJones.Web.Mvc.UI.Components.Article.ArticleComponent.js", "text/javascript")]

namespace DowJones.Web.Mvc.UI.Components.Article
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Web;
    using System.Web.Security;
    using System.Web.UI;
    using System.Text;
    using DowJones.Articles;
    using DowJones.Infrastructure;
    using DowJones.Extensions;
    using DowJones.Ajax.Article;
    using DowJones.Web.Mvc.UI.Components.Article;
    using Factiva.Gateway.Messages.Archive.V2_0;
    using System.Text.RegularExpressions;
    using DowJones.Web.Mvc.Extensions;
    
    // Last Generated Timestamp: 03/22/2012 04:12 PM
    [DowJones.Web.ScriptResourceAttribute(null, ResourceName="DowJones.Web.Mvc.UI.Components.Article.ArticleComponent.js", ResourceKind=DowJones.Web.ClientResourceKind.Script, DeclaringType=typeof(DowJones.Web.Mvc.UI.Components.Article.ArticleComponent))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorViewComponentClassGenerator", "1.0.0.19368")]
    public class ArticleComponent : DowJones.Web.Mvc.UI.ViewComponentBase<DowJones.Web.Mvc.UI.Components.Models.Article.ArticleModel>
    {
#line hidden

        public ArticleComponent()
        {
        }
        public override string ClientPluginName
        {
            get
            {
                return "dj_Article";
            }
        }
        public override void ExecuteTemplate()
        {













   CssClass = "dj_Article"; 

WriteLiteral("\r\n");


 if (Model.ArticleDataSet != null)
{
    var showIndexing = Model.ArticleDisplayOptions == DisplayOptions.Indexing || Model.ArticleDisplayOptions == DisplayOptions.Headline;
    if (Model.ArticleDataSet.Status == 0)
    {

WriteLiteral("        <div class=\"dj_article-container dj_article_display_");


                                                        Write(Model.ArticleDisplayOptions.ToString());

WriteLiteral(" dj_article_lang_");


                                                                                                                  Write(Model.ArticleDataSet.LanguageCode.ToLower());

WriteLiteral("\" data-ref=\"");


                                                                                                                                                                           Write(Model.ArticleRef.ToJson().EscapeForHtml());

WriteLiteral("\">\r\n");


         if (Model != null && Model.ArticleDataSet != null)
        {
            
            

                                  

WriteLiteral("            <div class=\"dj_article_image article-logo\" >\r\n");


                  
            var largeImgUrl = string.Empty;
                


                 foreach (var renderItem in Model.ArticleDataSet.Head)
                {
                    if (renderItem.ItemMarkUp == MarkUpType.HeadLogo)
                    { 

WriteLiteral(@"                        <img onerror=""this.style.visibility='hidden'; this.style.display='none'; this.style.height=0;""
                            onabort=""this.style.visibility='hidden'; this.style.display='none'; this.style.height=0;"" 
                            src=""");


                            Write(renderItem.ItemValue);

WriteLiteral("\" alt=\"");


                                                        Write(renderItem.ItemText);

WriteLiteral("\"/>\r\n");


                    }
                    else if (renderItem.ItemMarkUp == MarkUpType.HeadImageLarge)
                    {
                        largeImgUrl = renderItem.ItemValue;
                        if (Model.ArticleDataSet.PictureSize == PictureSize.Large)
                        {

WriteLiteral("                            <p class=\"dj_article_paragraph\">\r\n                   " +
"             <img class=\"largeImage\" src=\"");


                                                        Write(renderItem.ItemValue);

WriteLiteral("\" alt=\"\"/>\r\n                            </p>\r\n");


                        }
                    }
                    else if (renderItem.ItemMarkUp == MarkUpType.HeadImageSmall && Model.ArticleDataSet.PictureSize == PictureSize.Small)
                    {

WriteLiteral("                        <p class=\"dj_article_paragraph\">\r\n                       " +
"     <img class=\"smallImage\" src=\"");


                                                    Write(renderItem.ItemValue);

WriteLiteral("\" data-ref=\"");


                                                                                     Write(largeImgUrl);

WriteLiteral("\" alt=\"\"/>\r\n                        </p>\r\n");


                    }
                    else if (renderItem.ItemMarkUp == MarkUpType.HeadImageXSmall && Model.ArticleDataSet.PictureSize == PictureSize.XSmall)
                    {

WriteLiteral("                        <p class=\"dj_article_paragraph\">\r\n                       " +
"     <img class=\"xsmallImage\" src=\"");


                                                     Write(renderItem.ItemValue);

WriteLiteral("\" data-ref=\"");


                                                                                      Write(largeImgUrl);

WriteLiteral("\" alt=\"\"/>\r\n                        </p>\r\n");


                    }
                }

WriteLiteral("            </div>\r\n");


            

                                
    

WriteLiteral("            <div class=\"dj_article_meta\">\r\n");


                 if (!Model.ArticleDataSet.Headline.IsNullOrEmpty())
                {
                    if (showIndexing)
                    {

WriteLiteral("                        <div class=\"dj_article_index\">HD</div>\r\n");


                    }
            

WriteLiteral("                    <h4 class=\"dj_article_hd dj_article_section headline\" data-me" +
"ta=\"");


                                                                                Write(Model.ArticleDataSet.AccessionNo);

WriteLiteral("\">\r\n");


                         foreach (RenderItem renderItem in Model.ArticleDataSet.Headline)
                        {
                            if (renderItem.ItemMarkUp == MarkUpType.Plain)
                            {
                                
                           Write(renderItem.ItemText);

                                                    
                            }
                            else if (renderItem.ItemMarkUp == MarkUpType.Anchor)
                            {

WriteLiteral("                                <a class=\"dj_article_headline_link\" href=\"javascr" +
"ipt:void(0)\">");


                                                                                         Write(renderItem.ItemText);

WriteLiteral("</a>\r\n");


                            }
                        }

WriteLiteral("                    </h4>\r\n");


                }                

WriteLiteral("                <div class=\"meta\">     \r\n");


                     if (showIndexing)
                    {

WriteLiteral("                        <div class=\"dj_article_index\">SN</div>\r\n");


                    }

WriteLiteral("                        \r\n                    <div class=\"dj_article_sn dj_articl" +
"e_section\">\r\n");


                     if (Model.ShowSourceLinks && Model.PostProcessing == DowJones.Infrastructure.PostProcessing.UnSpecified)
                    {
                        foreach (RenderItem renderItem in Model.ArticleDataSet.Source)
                        {

WriteLiteral("                            <span class=\"value source drop-down-button\" data-dd-t" +
"ype=\"source\">\r\n");


                                 if (renderItem.ItemMarkUp == MarkUpType.EntityLink)
                                { 

WriteLiteral("                                    <span class=\"dj_article_source\" data-entity=\"" +
"");


                                                                            Write(renderItem.ItemEntityData.ToJson().EscapeForHtml());

WriteLiteral("\">");


                                                                                                                                 Write(renderItem.ItemEntityData.Name);

WriteLiteral("</span>\r\n");


                                }
                                else if (renderItem.ItemMarkUp == MarkUpType.Span)
                                {
                                    
                               Write(renderItem.ItemText);

                                                        
                                }

WriteLiteral("                            </span>\r\n");


                        }
                    }
                    else
                    {
                        if (!Model.ArticleDataSet.SourceName.IsNullOrEmpty())
                        {

WriteLiteral("                            <span class=\"value source drop-down-button\" data-dd-t" +
"ype=\"source\">\r\n                                ");


                           Write(Model.ArticleDataSet.SourceName);

WriteLiteral(" </span>");



WriteLiteral("<span class=\"dj_article_comma\">,</span>                        \r\n");


                        }
                    }              

WriteLiteral("                    </div>\r\n                    \r\n");


                     if (!Model.ArticleDataSet.ByLine.IsNullOrEmpty())
                    {
                        if (showIndexing)
                        {

WriteLiteral("                            <div class=\"dj_article_index\">BY</div>\r\n");


                        }
                        

WriteLiteral("                        <div class=\"dj_article_by dj_article_section\">           " +
"             \r\n");


                         if (Model.ShowAuthorLinks &&
                            !Model.ArticleDataSet.Authors.IsNullOrEmpty() &&
                            Model.PostProcessing == DowJones.Infrastructure.PostProcessing.UnSpecified)
                        {
                            foreach (RenderItem renderItem in Model.ArticleDataSet.Authors)
                            {

WriteLiteral("                                <span class=\"value author drop-down-button\" data-" +
"dd-type=\"author\">\r\n                                    <span class=\"dj_article_a" +
"uthor\" data-entity=\"");


                                                                            Write(renderItem.ItemEntityData.ToJson().EscapeForHtml());

WriteLiteral("\">");


                                                                                                                                 Write(renderItem.ItemEntityData.Name);

WriteLiteral("</span>\r\n                                </span>\r\n");


                            }

                        }
                        else
                        {                            

WriteLiteral("                            <span class=\"value author drop-down-button\" data-dd-t" +
"ype=\"author\">\r\n");


                                 foreach (RenderItem renderItem in Model.ArticleDataSet.ByLine)
                                {
                                    
                               Write(renderItem.ItemText);

                                                        
                                }

WriteLiteral("                            </span>");



WriteLiteral("<span class=\"dj_article_comma\">, </span>                      \r\n");


                        }

WriteLiteral("                        </div>\r\n");


                    } 

WriteLiteral("                  \r\n                    <div class=\"dj_meta_group\">              " +
"   \r\n                   \r\n");


                         if (showIndexing)
                        {

WriteLiteral("                            <div class=\"dj_article_index\">PD</div>\r\n");


                        }

WriteLiteral("                    \r\n                        <div class=\"date-stamp dj_article_p" +
"d dj_article_section\">\r\n");


                             if (!string.IsNullOrEmpty(Model.ArticleDataSet.PublicationTime))
                            {
                                
                           Write(string.Format("{0},", Model.ArticleDataSet.PublicationTime));

                                                                                            
                            }


                             if (!string.IsNullOrEmpty(Model.ArticleDataSet.PublicationDate))
                            {
                                
                           Write(string.Format("{0}", Model.ArticleDataSet.PublicationDate));

                                                                                           
                            }
WriteLiteral("<span class=\"dj_article_comma\">, </span>\r\n                        </div>\r\n       " +
"                 \r\n");


                         if (Model.ArticleDataSet.WordCount > 0 && Model.ArticleDataSet.Html.IsNullOrEmpty())
                        {
                            if (showIndexing)
                            {

WriteLiteral("                                <div class=\"dj_article_index\">WC</div>\r\n");


                            }

WriteLiteral("                            <div class=\"dj_article_wc dj_article_section\">\r\n     " +
"                           ");


                            Write(string.Format("{0} {1}", Model.ArticleDataSet.WordCount, DJ.Token("words")));

WriteLiteral("<span class=\"dj_article_comma\">, </span>\r\n                            </div>\r\n");


                        }

WriteLiteral("\r\n");


                         if (!string.IsNullOrEmpty(Model.ArticleDataSet.Language))
                        {
                            if (showIndexing)
                            {

WriteLiteral("                                <div class=\"dj_article_index\">LA</div>\r\n");


                            }

WriteLiteral("                            <div class=\"dj_article_la dj_article_section\">\r\n     " +
"                           ");


                           Write(Model.ArticleDataSet.Language);

WriteLiteral("<span class=\"dj_article_comma\">, </span>\r\n                            </div>\r\n");


                        }

WriteLiteral("                        \r\n");


                         if (!Model.ArticleDataSet.Source.IsNullOrEmpty())
                        {
                            if (showIndexing)
                            {

WriteLiteral("                                <div class=\"dj_article_index\">SC</div>\r\n");


                            }

WriteLiteral("                            <div class=\"dj_article_sc dj_article_section\">\r\n");


                                 foreach (RenderItem renderItem in Model.ArticleDataSet.Source)
                                {
                                    
                               Write(renderItem.ItemEntityData.Code);

                                                                   
                                }
WriteLiteral("<span class=\"dj_article_comma\">, </span>\r\n                            </div>\r\n");


                        }

WriteLiteral("                        \r\n                               \r\n                      " +
"  \r\n");


                         if (!Model.ArticleDataSet.Pages.IsNullOrEmpty())
                        {
                            if (showIndexing)
                            {

WriteLiteral("                                <div class=\"dj_article_index\">PG</div>\r\n");


                            }

WriteLiteral("                            <div class=\"dj_article_pg dj_article_section\">\r\n");


                             foreach (string page in Model.ArticleDataSet.Pages)
                            {
                                
                           Write(page);

                                     
                            }
WriteLiteral("<span class=\"dj_article_comma\">,</span>\r\n                            </div>\r\n");


                        }

WriteLiteral("                    </div>\r\n\r\n");


                     if (!Model.ArticleDataSet.Copyright.IsNullOrEmpty())
                    {
                        if (showIndexing)
                        {

WriteLiteral("                            <div class=\"dj_article_index\">CY</div>\r\n");


                        }

WriteLiteral("                        <div class=\"copyright dj_article_cy dj_article_section\">\r" +
"\n");


                             foreach (RenderItem renderItem in Model.ArticleDataSet.Copyright)
                            {
                                if (renderItem.ItemMarkUp == MarkUpType.Plain)
                                {
                                        
                                   Write(renderItem.ItemText);

                                                            
                                }
                            }

WriteLiteral("                        </div>\r\n");


                    }

WriteLiteral("               \r\n            </div>\r\n\r\n");


                     if (Model.ShowPostProcessing)
                    {
                        bool showPressClip = (Model.ShowPressClip
                                        && !string.IsNullOrEmpty(Model.ArticleDataSet.SubType)
                                        && Model.ArticleDataSet.SubType.ToLower() == "nlapressclip");
                

WriteLiteral("                        <ul class=\"dj_PostProcessing actions clearfix\">\r\n        " +
"                    <li class=\"save action first\" data-ref=\"save\"><span class=\"d" +
"j_icon dj_icon-save\"></span><span data-workflow=\"save\">");


                                                                                                                                          Write(DJ.Token("save"));

WriteLiteral("</span></li>\r\n                            <li class=\"print action\" data-ref=\"prin" +
"t\"><span class=\"dj_icon dj_icon-print\"></span><span data-workflow=\"print\">");


                                                                                                                                        Write(DJ.Token("cmPrint"));

WriteLiteral("</span></li>\r\n                            <li class=\"email action\" data-ref=\"emai" +
"l\"><span class=\"dj_icon dj_icon-mail\"></span><span data-workflow=\"email\">");


                                                                                                                                       Write(DJ.Token("email"));

WriteLiteral("</span></li>\r\n");


                             if (showPressClip)
                            {

WriteLiteral("                                <li class=\"press-clip action\" data-ref=\"pressclip" +
"\"><span class=\"dj_icon dj_icon-pressclips\"></span><span data-workflow=\"pressclip" +
"\">");


                                                                                                                                                              Write(DJ.Token("pressClipping"));

WriteLiteral("</span></li>\r\n");


                            }

WriteLiteral("                        </ul>\r\n");


                        
                        

                                                                       
                      
                        if (Model.HasSocialNetworks)
                        {
                            
                        Write(CreateChildControl<DowJones.Web.Mvc.UI.Components.SocialButtons.SocialButtonsControl>(Model.SocialButtons));

                                                                                                                                         
                        }
        
                        if (Model.HasTranslator)
                        {
                            if (Model.ShowReadSpeaker)
                            {

WriteLiteral("                                <span class=\"emg_translator_pipe\">&nbsp;|&nbsp;</" +
"span>\r\n");


                            }

WriteLiteral("                            <div id=\"articleTranslateControlsContainer\">\r\n       " +
"                         ");


                            Write(CreateChildControl<DowJones.Web.Mvc.UI.Components.ArticleTranslator.ArticleTranslatorControl>(Model.Translator));

WriteLiteral("\r\n                            </div>\r\n");


                        }    
                        

                                                                               
                    }          

WriteLiteral("                   \r\n             </div>        \r\n");


            
            


                    if (!Model.ArticleDataSet.Html.IsNullOrEmpty())
                    {

WriteLiteral("                        <div class=\"dj_rawContent\"> \r\n");


                         foreach (RenderItem renderItem in Model.ArticleDataSet.Html)
                        {
                            if (renderItem.ItemMarkUp == MarkUpType.Html)
                            {
                                
                            Write(Html.Raw(renderItem.ItemText));

                                                                
                            }
                        }

WriteLiteral("                        </div>\r\n");


                    }  
            



                       
            

                                   

WriteLiteral("                                                                                 " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                                                                                " +
"                            <div class=\"dj_article_article_body\">\r\n");


                 if (!Model.ArticleDataSet.Correction.IsNullOrEmpty())
                {
                    foreach (Dictionary<string, List<RenderItem>> dci in Model.ArticleDataSet.Correction)
                    {
                        foreach (KeyValuePair<string, List<RenderItem>> kvc in dci)
                        {
                            if (kvc.Key.Equals("pre"))
                            {
                                
                            Write(CreateChildControl<Paragraph>(Model.GetParagraphModel(kvc.Value, "pre", "dj_article_paragraph")));

                                                                                                                                   
                            }
                            else
                            {
                                
                            Write(CreateChildControl<Paragraph>(Model.GetParagraphModel(kvc.Value, "p", "dj_article_paragraph")));

                                                                                                                                 
                            }
                        }
                    }
                }

WriteLiteral("        \r\n");


                 if (!Model.ArticleDataSet.LeadParagraph.IsNullOrEmpty())
                {
                    if (showIndexing)
                    {

WriteLiteral("                        <div class=\"dj_article_index\">LP</div>\r\n");


                    }                    

WriteLiteral("                    <div class=\"dj_article_lp dj_article_section\">\r\n");


                     if (!Model.ArticleDataSet.LeadParagraph.IsNullOrEmpty())
                    {
                        foreach (Dictionary<string, List<RenderItem>> dci in Model.ArticleDataSet.LeadParagraph)
                        {
                            foreach (KeyValuePair<string, List<RenderItem>> kvc in dci)
                            {
                                if (kvc.Key.Equals("pre"))
                                {
                                    
                                Write(CreateChildControl<Paragraph>(Model.GetParagraphModel(kvc.Value, "pre", "dj_article_paragraph")));

                                                                                                                                       
                                }
                                else
                                {
                                    
                                Write(CreateChildControl<Paragraph>(Model.GetParagraphModel(kvc.Value, "p", "dj_article_paragraph")));

                                                                                                                                     
                                }
                            }
                        }
                    }

WriteLiteral("                </div>\r\n");


                }

WriteLiteral("\r\n");


                 if (!Model.ArticleDataSet.TailParagraphs.IsNullOrEmpty() && Model.ArticleDisplayOptions != DisplayOptions.Headline)
                {
                    if (showIndexing)
                    {

WriteLiteral("                        <div class=\"dj_article_index\">TD</div>\r\n");


                    }

WriteLiteral("                    <div class=\"dj_article_td dj_article_section\">\r\n");


                         foreach (Dictionary<string, List<RenderItem>> dci in Model.ArticleDataSet.TailParagraphs)
                        {
                            foreach (KeyValuePair<string, List<RenderItem>> kvc in dci)
                            {
                                if (kvc.Key.Equals("pre"))
                                {
                                    
                                Write(CreateChildControl<Paragraph>(Model.GetParagraphModel(kvc.Value, "pre", "dj_article_paragraph")));

                                                                                                                                       
                                }
                                else
                                {
                                    
                                Write(CreateChildControl<Paragraph>(Model.GetParagraphModel(kvc.Value, "p", "dj_article_paragraph")));

                                                                                                                                     
                                }
                            }
                        }

WriteLiteral("                    </div>\r\n");


                }
           
                

                                 


                 if (Model.ArticleDisplayOptions != DisplayOptions.Headline)
                {
                    if (!Model.ArticleDataSet.Contact.IsNullOrEmpty())
                    {
                        if (showIndexing)
                        {

WriteLiteral("                            <div class=\"dj_article_index\">CT</div>\r\n");


                        }
                

WriteLiteral("                        <div class=\"dj_article_art dj_article_section\">\r\n");


                             foreach (RenderItem renderItem in Model.ArticleDataSet.Contact)
                            {
                                
                            Write(CreateChildControl<Paragraph>(Model.GetParagraphModel(Model.ArticleDataSet.Contact, "p", "dj_article_paragraph")));

                                                                                                                                                    
                            }

WriteLiteral("                        </div>\r\n");


                    }

                    if (!Model.ArticleDataSet.Notes.IsNullOrEmpty() && Model.ArticleDisplayOptions != DisplayOptions.Headline)
                    {
                        if (showIndexing)
                        {

WriteLiteral("                            <div class=\"dj_article_index\">RF</div>\r\n");


                        }
                

WriteLiteral("                        <div class=\"dj_article_rf dj_article_section\">\r\n");


                             foreach (Dictionary<string, List<RenderItem>> dci in Model.ArticleDataSet.Notes)
                            {
                                foreach (KeyValuePair<string, List<RenderItem>> kvc in dci)
                                {
                                    if (kvc.Key.Equals("pre"))
                                    {
                                        
                                    Write(CreateChildControl<Paragraph>(Model.GetParagraphModel(kvc.Value, "pre", "dj_article_paragraph")));

                                                                                                                                           
                                    }
                                    else
                                    {
                                        
                                    Write(CreateChildControl<Paragraph>(Model.GetParagraphModel(kvc.Value, "p", "dj_article_paragraph")));

                                                                                                                                         
                                    }
                                }
                            }

WriteLiteral("                        </div>\r\n");


                    }

                    if (!Model.ArticleDataSet.ArtWorks.IsNullOrEmpty())
                    {
                        if (showIndexing)
                        {

WriteLiteral("                            <div class=\"dj_article_index\">ART</div>\r\n");


                        }

WriteLiteral("                        <div class=\"dj_article_art dj_article_section\">\r\n        " +
"                    ");


                        Write(CreateChildControl<Paragraph>(Model.GetParagraphModel(Model.ArticleDataSet.ArtWorks, "p", "dj_article_paragraph")));

WriteLiteral("\r\n                        </div>\r\n");


                    }
                }              

WriteLiteral("            \r\n");


                 if (!Model.ArticleDataSet.IndexingCodeSets.IsNullOrEmpty() && showIndexing)
                {
                    foreach (KeyValuePair<string, Dictionary<string, string>> set in Model.ArticleDataSet.IndexingCodeSets)
                    {
                        if (showIndexing)
                        {

WriteLiteral("                            <div class=\"dj_article_index\">");


                                                     Write(set.Key.ToUpper());

WriteLiteral("</div>\r\n");


                        }
                    

WriteLiteral("                        <div class=\"dj_article_");


                                           Write(set.Key.ToLower());

WriteLiteral(" dj_article_section\">                            \r\n                            <p" +
" class=\"dj_article_paragraph\">\r\n");


                                 foreach (KeyValuePair<string, string> code in set.Value)
                                {
                                    
                               Write(string.Format("{0} : {1} {2} ", code.Key, code.Value, code.Equals(set.Value.Last()) ? string.Empty : "|"));

                                                                                                                                              ;
                                }

WriteLiteral("                            </p>\r\n                        </div>\r\n");


                    }
                }         

WriteLiteral("                \r\n");


                 if (!Model.ArticleDataSet.Ipcs.IsNullOrEmpty() && showIndexing)
                {
                    if (showIndexing)
                    {

WriteLiteral("                        <div class=\"dj_article_index\">IPC</div>\r\n");


                    }

WriteLiteral("                    <div class=\"dj_article_ipc dj_article_section\"> \r\n           " +
"             <p class=\"dj_article_paragraph\">\r\n                            ");


                       Write(Model.ArticleDataSet.Ipcs.ToArray().Join(" | "));

WriteLiteral(" \r\n                        </p>\r\n                    </div>\r\n");


                }  

WriteLiteral("                \r\n");


                 if (!Model.ArticleDataSet.Ipds.IsNullOrEmpty() && showIndexing)
                {
                    if (showIndexing)
                    {

WriteLiteral("                        <div class=\"dj_article_index\">IPD</div>\r\n");


                    }

WriteLiteral("                    <div class=\"dj_article_ipd dj_article_section\">  \r\n          " +
"              <p class=\"dj_article_paragraph\">\r\n                            ");


                       Write(Model.ArticleDataSet.Ipds.ToArray().Join(" | "));

WriteLiteral(" \r\n                        </p>\r\n                    </div>\r\n");


                }  

WriteLiteral("            \r\n");


                 if (!string.IsNullOrEmpty(Model.ArticleDataSet.PublisherName))
                {
                    if (showIndexing)
                    {

WriteLiteral("                        <div class=\"dj_article_index\">PUB</div>\r\n");


                    }                    

WriteLiteral("                    <div class=\"dj_article_pub dj_article_section\">              " +
"          \r\n                        <p class=\"dj_article_paragraph\">\r\n          " +
"                  ");


                       Write(string.Format("{0} ", Model.ArticleDataSet.PublisherName));

WriteLiteral("\r\n                        </p>\r\n                    </div>\r\n");


                }            

WriteLiteral("\r\n");


                 if (Model.ArticleDataSet.AccessionNo != null)
                {
                    if (showIndexing)
                    {

WriteLiteral("                        <div class=\"dj_article_index\">AN</div>\r\n");


                    }

WriteLiteral("                    <div class=\"dj_article_an dj_article_section\">\r\n             " +
"           <p class=\"dj_article_paragraph\">\r\n                            ");


                       Write(Html.DJ().Token("document"));

WriteLiteral("&nbsp;");


                                                         Write(Model.ArticleDataSet.AccessionNo);

WriteLiteral("\r\n                        </p>\r\n                    </div>\r\n");


                }

WriteLiteral("                \r\n");


                 if (Model.ArticleDataSet.ContentCategory == Ajax.ContentCategory.Picture)
                {

WriteLiteral("                    <div class=\"dj_article_clear\"></div>\r\n");


                }

WriteLiteral("            </div>\r\n");


            

                                
        }

WriteLiteral("        </div>\r\n");


    }
    else
    {

WriteLiteral("        <div class=\"dj_article_body\">\r\n            <div class=\"dj_article_article" +
"Error error\">");


                                                   Write(DJ.Token("error"));

WriteLiteral(" <span class=\"errorNum\">");


                                                                                              Write(Model.ArticleDataSet.Status);

WriteLiteral("</span>: <span class=\"errorMessage\">");


                                                                                                                                                              Write(Html.DJ().TokenForErrorNumber(Model.ArticleDataSet.Status));

WriteLiteral("</span></div> \r\n        \r\n");


             if (Model.ArticleDataSet.AccessionNo != null)
            {
                if (showIndexing)
                {

WriteLiteral("                        <div class=\"dj_article_index\">AN</div>\r\n");


                }

WriteLiteral("                <div class=\"dj_article_an dj_article_section\">\r\n                 " +
"   ");


               Write(Html.DJ().Token("document"));

WriteLiteral("&nbsp;");


                                                 Write(Model.ArticleDataSet.AccessionNo);

WriteLiteral("\r\n                </div>\r\n");


            }

WriteLiteral("        </div>\r\n");


    }
}
else
{

WriteLiteral("    <div>");


    Write(DJ.Token("articleNotAvailable"));

WriteLiteral("</div>\r\n");


}


        }
    }
}
