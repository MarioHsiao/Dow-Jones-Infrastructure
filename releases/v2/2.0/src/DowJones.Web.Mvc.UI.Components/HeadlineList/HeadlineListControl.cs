//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Web.UI.WebResourceAttribute("DowJones.Web.Mvc.UI.Components.HeadlineList.HeadlineList.js", "text/javascript")]

namespace DowJones.Web.Mvc.UI.Components.HeadlineList
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Web;
    using System.Web.Security;
    using System.Web.UI;
    using DowJones.Extensions;
    using DowJones.Web.Mvc.Extensions;
    using DowJones.Web.Mvc.UI.Components.HeadlineList;
    using System.Collections.ObjectModel;
    using DowJones.Web.Mvc.UI.Components.Common.Types;
    
    // Last Generated Timestamp: 01/18/2012 02:46 PM
    [DowJones.Web.ScriptResourceAttribute(null, ResourceName="DowJones.Web.Mvc.UI.Components.HeadlineList.HeadlineList.js", ResourceKind=DowJones.Web.ClientResourceKind.Script, DeclaringType=typeof(DowJones.Web.Mvc.UI.Components.HeadlineList.HeadlineListControl))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorViewComponentClassGenerator", "0.0.0.30158")]
    public class HeadlineListControl : DowJones.Web.Mvc.UI.ViewComponentBase<DowJones.Web.Mvc.UI.Components.HeadlineList.HeadlineListModel>
    {
#line hidden

        public HeadlineListControl()
        {
        }
        public override string ClientPluginName
        {
            get
            {
                return "dj_HeadlineList";
            }
        }
        public override void ExecuteTemplate()
        {









   CssClass = "dj_HeadlineListControl"; 

WriteLiteral("<ul class=\"dj_HeadlineList items\">\r\n");


     if (Model != null)
    {
        foreach (var headline in Model.Headlines)
        {

WriteLiteral("        <li class=\"headline-box item headlineItem\" data-headlineInfo=\"");


                                                                 Write(headline.HeadlineInfo.ToJson().EscapeForHtml());

WriteLiteral("\">\r\n");


             if (Model.ShowCheckboxes)
            {

WriteLiteral("                <div class=\"select dj_selectActions\">\r\n                    <input" +
" class=\"chk-headline dj_ChkHeadline\" type=\"checkbox\" autocomplete=\"off\" />\r\n    " +
"            </div>\r\n");


                
            }

WriteLiteral("            <a class=\"title\" href=\"javascript:void(0)\" rel=\"");


                                                       Write(headline.ExternalUrl);

WriteLiteral("\" title=\"");


                                                                                      Write(Model.DisplaySnippets == SnippetDisplayType.Hover ? headline.Snippet.EscapeForHtml(): "");

WriteLiteral("\" >");


                                                                                                                                                                                   Write(headline.Title);

WriteLiteral("</a>\r\n            <div class=\"meta\">\r\n                <span class=\"value source d" +
"rop-down-button\" data-source=\"");


                                                                    Write(headline.SourceCode);

WriteLiteral("\">");


                                                                                          Write(headline.Source);

WriteLiteral("</span>\r\n");


                 if (Model.ShowByLine && headline.Authors != null && headline.Authors.Count() > 0)
                {

WriteLiteral("                    <span class=\"dj_article-by\">");


                                           Write(Html.DJ().Token("by"));

WriteLiteral("</span>\r\n");


                    foreach (var author in headline.Authors)
                    {

WriteLiteral("                        <span class=\"value author drop-down-button\" data-author=");


                                                                           Write(author.Code);

WriteLiteral(">");


                                                                                        Write(author.Name);

WriteLiteral("</span>   \r\n");


                    }
                }

WriteLiteral("                <span class=\"date-stamp\">");


                                    Write(headline.PublicationDateDisplay);

WriteLiteral(", ");


                                                                      Write(headline.WordCount);

WriteLiteral(", ");


                                                                                           Write(headline.Language);

WriteLiteral("</span>\r\n            </div>\r\n");


             if (Model.DisplaySnippets == SnippetDisplayType.Inline)
            {

WriteLiteral("                <p class=\"snippet\">\r\n                    ");


               Write(headline.Snippet);

WriteLiteral("\r\n                </p>\r\n");


            }

WriteLiteral(@"            <div class=""actions"">
                <ol class=""options"">
                    <li class=""option""><span class=""dj_icon dj_icon-print""></span></li>
                    <li class=""option""><span class=""dj_icon dj_icon-save""></span></li>
                    <li class=""option""><span class=""dj_icon dj_icon-mail""></span></li>
                </ol>
            </div><!-- end: actions -->
");


             if (Model.DuplicatesAreVisible(headline))
            {

WriteLiteral("                <div class=\"duplicateWrapper clearfix\">\r\n                    <p><" +
"span class=\"dj_icon dj_icon-blk-filter-r-arrow\"></span><strong>Duplicates</stron" +
"g>\r\n                        (");


                    Write(headline.DuplicateHeadlines.Count());

WriteLiteral(")</p>\r\n                    <ul class=\"hide\">\r\n");


                         foreach (var dup in headline.DuplicateHeadlines)
                        {

WriteLiteral("                            <li class=\"headlineItem\" data-headlineInfo=\"");


                                                                   Write(dup.HeadlineInfo.ToJson().EscapeForHtml());

WriteLiteral("\">\r\n");


                                 if (Model.ShowCheckboxes)
                                {

WriteLiteral("                                    <input class=\"chk-headline dj_dupChkHeadline\"" +
" type=\"checkbox\" value=\"");


                                                                                                    Write(dup.AccessionNumber);

WriteLiteral("\" autocomplete=\"off\" />\r\n");


                                }

WriteLiteral("                                <a class=\"title\" href=\"#\" title=\"");


                                                            Write(headline.Snippet.EscapeForHtml());

WriteLiteral("\">");


                                                                                               Write(dup.Title);

WriteLiteral("</a>\r\n                                <div class=\"meta\">\r\n                       " +
"             <span class=\"value source drop-down-button\" data-source=\"");


                                                                                        Write(dup.SourceCode);

WriteLiteral("\">");


                                                                                                         Write(dup.Source);

WriteLiteral("</span>\r\n");


                                     if (Model.ShowByLine && dup.Authors != null && dup.Authors.Count() > 0)
                                    {

WriteLiteral("                                        <span class=\"dj_article-by\">");


                                                               Write(Html.DJ().Token("by"));

WriteLiteral("</span>\r\n");


                                        foreach (var author in dup.Authors)
                                        {

WriteLiteral("                                            <span class=\"value author drop-down-b" +
"utton\" data-author=");


                                                                                               Write(author.Code);

WriteLiteral(">");


                                                                                                            Write(author.Name);

WriteLiteral("</span>   \r\n");


                                        }
                                    }

WriteLiteral("                                    <span class=\"date-stamp\">");


                                                        Write(dup.PublicationDateDisplay);

WriteLiteral(", ");


                                                                                     Write(dup.WordCount);

WriteLiteral(", ");


                                                                                                     Write(dup.Language);

WriteLiteral("</span>\r\n                                </div>\r\n                            </li" +
">\r\n");


                        }

WriteLiteral("                    </ul>\r\n                </div>\r\n");


            }


             if (Model.ShowAccessionNo)
            {

WriteLiteral("                <div class=\"accessionNo\">");


                                    Write(DJ.Token("document"));

WriteLiteral(" ");


                                                          Write(headline.AccessionNumber);

WriteLiteral("</div>\r\n");


            }

WriteLiteral("        </li>\r\n");


        }
    }
    else
    {

WriteLiteral("        <li><span class=\"dj_noResults\">No Results</span></li>\r\n");


    }

WriteLiteral("</ul>\r\n ");


        }
    }
}
