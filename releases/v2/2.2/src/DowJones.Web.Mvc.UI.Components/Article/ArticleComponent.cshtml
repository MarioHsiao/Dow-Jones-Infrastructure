@using System.Text;
@using System.Collections.Generic;
@using DowJones.Articles;
@using DowJones.Infrastructure;
@using DowJones.Extensions;
@using DowJones.Ajax.Article;
@using DowJones.Web.Mvc.UI.Components.Article;
@using Factiva.Gateway.Messages.Archive.V2_0;
@using System.Text.RegularExpressions;
@model DowJones.Web.Mvc.UI.Components.Models.Article.ArticleModel
@ClientPlugin dj_Article
@ScriptResource RelativeResourceName=ArticleComponent.js
@{ CssClass = "dj_Article"; }

@if (Model.ArticleDataSet != null)
{
    var showIndexing = Model.ArticleDisplayOptions == DisplayOptions.Indexing || Model.ArticleDisplayOptions == DisplayOptions.Headline;
    if (Model.ArticleDataSet.Status == 0)
    {
        <div class="dj_article-container dj_article_display_@(Model.ArticleDisplayOptions.ToString()) dj_article_lang_@(Model.ArticleDataSet.LanguageCode.ToLower())" data-ref="@Model.ArticleRef.ToJson().EscapeForHtml()">
        @if (Model != null && Model.ArticleDataSet != null)
        {
            
            @*Begin logo section*@
            <div class="dj_article_image article-logo" >
            @{
                var largeImgUrl = string.Empty;
            }
            @foreach (IRenderItem renderItem in Model.ArticleDataSet.Head)
            {
                if (renderItem.ItemMarkUp == MarkUpType.HeadLogo)
                { 
                    <img onerror="this.style.visibility='hidden'; this.style.display='none'; this.style.height=0;"
                        onabort="this.style.visibility='hidden'; this.style.display='none'; this.style.height=0;" 
                        src="@renderItem.ItemValue" alt="@renderItem.ItemText"/>
                }
                else if (renderItem.ItemMarkUp == MarkUpType.HeadImageLarge)
                {
                    largeImgUrl = renderItem.ItemValue;
                    if (Model.ArticleDataSet.PictureSize == PictureSize.Large)
                    {
                        <p class="dj_article_paragraph">
                            <img class="largeImage" src="@renderItem.ItemValue" alt=""/>
                        </p>
                    }
                }
                else if (renderItem.ItemMarkUp == MarkUpType.HeadImageSmall && Model.ArticleDataSet.PictureSize == PictureSize.Small)
                {
                    <p class="dj_article_paragraph">
                        <img class="smallImage" src="@renderItem.ItemValue" data-ref="@largeImgUrl" alt=""/>
                    </p>
                }
                else if (renderItem.ItemMarkUp == MarkUpType.HeadImageXSmall && Model.ArticleDataSet.PictureSize == PictureSize.XSmall)
                {
                    <p class="dj_article_paragraph">
                        <img class="xsmallImage" src="@renderItem.ItemValue" data-ref="@largeImgUrl" alt=""/>
                    </p>
                }
            }
            </div>
            @*End logo section*@
    
            <div class="dj_article_meta">
            @if( !Model.ArticleDataSet.Headline.IsNullOrEmpty() )
            {
                if( showIndexing )
                {
                    <div class="dj_article_index">HD</div>
                }
            
                <h4 class="dj_article_hd dj_article_section headline" data-meta="@Model.ArticleDataSet.AccessionNo">
                    @foreach( IRenderItem renderItem in Model.ArticleDataSet.Headline )
                    {
                        if( renderItem.ItemMarkUp == MarkUpType.Plain )
                        {
                            @renderItem.ItemText
                        }
                        else if( renderItem.ItemMarkUp == MarkUpType.Anchor )
                        {
                            <a class="dj_article_headline_link" href="javascript:void(0)">@renderItem.ItemText</a>
                        }
                    }
                </h4>
            }                
                <div class="meta">
                    @if( showIndexing )
                    {
                        <div class="dj_article_index">SN</div>
                    }
                        
                    <div class="dj_article_sn dj_article_section">
                    @if( Model.ShowSourceLinks && Model.PostProcessing == DowJones.Infrastructure.PostProcessing.UnSpecified )
                    {
                        foreach( IRenderItem renderItem in Model.ArticleDataSet.Source )
                        {
                            <span class="value source drop-down-button" data-dd-type="source">
                                @if( renderItem.ItemMarkUp == MarkUpType.EntityLink )
                                { 
                                    <span class="dj_article_source" data-entity="@renderItem.ItemEntityData.ToJson().EscapeForHtml()">@renderItem.ItemEntityData.Name</span>
                                }
                                else if( renderItem.ItemMarkUp == MarkUpType.Span )
                                {
                                    @renderItem.ItemText
                                }
                            </span>
                        }
                    }
                    else
                    {
                        if( !Model.ArticleDataSet.SourceName.IsNullOrEmpty() )
                        {
                            <span class="value source drop-down-button" data-dd-type="source">
                                @Model.ArticleDataSet.SourceName </span><span class="dj_article_comma">,</span>                        
                        }
                    }              
                    </div>
                    
                    @if( !Model.ArticleDataSet.ByLine.IsNullOrEmpty() )
                    {
                        if( showIndexing )
                        {
                            <div class="dj_article_index">BY</div>
                        }
                        
                        <div class="dj_article_by dj_article_section">                        
                        @if( Model.ShowAuthorLinks &&
                            !Model.ArticleDataSet.Authors.IsNullOrEmpty() &&
                            Model.PostProcessing == DowJones.Infrastructure.PostProcessing.UnSpecified )
                        {
                            foreach( IRenderItem renderItem in Model.ArticleDataSet.Authors )
                            {
                                <span class="value author drop-down-button" data-dd-type="author">
                                    <span class="dj_article_author" data-entity="@renderItem.ItemEntityData.ToJson().EscapeForHtml()">@renderItem.ItemEntityData.Name</span>
                                </span>
                            }

                        }
                        else
                        {                            
                            <span class="value author drop-down-button" data-dd-type="author">
                                @foreach( IRenderItem renderItem in Model.ArticleDataSet.ByLine )
                                {
                                    @renderItem.ItemText
                                }
                            </span><span class="dj_article_comma">, </span>                      
                        }
                        </div>
                    } 
                  
                    <div class="dj_meta_group">                 
                   
                        @if( showIndexing )
                        {
                            <div class="dj_article_index">PD</div>
                        }
                    
                        <div class="date-stamp dj_article_pd dj_article_section">
                            @if( !string.IsNullOrEmpty( Model.ArticleDataSet.PublicationTime ) )
                            {
                                @string.Format( "{0},", Model.ArticleDataSet.PublicationTime )
                            }
                            @if( !string.IsNullOrEmpty( Model.ArticleDataSet.PublicationDate ) )
                            {
                                @string.Format( "{0}", Model.ArticleDataSet.PublicationDate )
                            }<span class="dj_article_comma">, </span>
                        </div>
                        
                        @if( Model.ArticleDataSet.WordCount > 0 && Model.ArticleDataSet.Html.IsNullOrEmpty() )
                        {
                            if( showIndexing )
                            {
                                <div class="dj_article_index">WC</div>
                            }
                            <div class="dj_article_wc dj_article_section">
                                @(string.Format( "{0} {1}", Model.ArticleDataSet.WordCount, DJ.Token( "words" ) ))<span class="dj_article_comma">, </span>
                            </div>
                        }

                        @if( !string.IsNullOrEmpty( Model.ArticleDataSet.Language ) )
                        {
                            if( showIndexing )
                            {
                                <div class="dj_article_index">LA</div>
                            }
                            <div class="dj_article_la dj_article_section">
                                @Model.ArticleDataSet.Language<span class="dj_article_comma">, </span>
                            </div>
                        }
                        
                        @if( !Model.ArticleDataSet.Source.IsNullOrEmpty() )
                        {
                            if( showIndexing )
                            {
                                <div class="dj_article_index">SC</div>
                            }
                            <div class="dj_article_sc dj_article_section">
                                @foreach( IRenderItem renderItem in Model.ArticleDataSet.Source )
                                {
                                    @renderItem.ItemEntityData.Code
                                }<span class="dj_article_comma">, </span>
                            </div>
                        }
                        
                        @if( !Model.ArticleDataSet.Pages.IsNullOrEmpty() )
                        {
                            if( showIndexing )
                            {
                                <div class="dj_article_index">PG</div>
                            }
                            <div class="dj_article_pg dj_article_section">
                            @foreach( string page in Model.ArticleDataSet.Pages )
                            {
                                @page
                            }<span class="dj_article_comma">,</span>
                            </div>
                        }
                    </div>

                @if (!Model.ArticleDataSet.Copyright.IsNullOrEmpty())
                {
                    if (showIndexing)
                    {
                        <div class="dj_article_index">CY</div>
                    }
                    <div class="copyright dj_article_cy dj_article_section">
                        @foreach (IRenderItem renderItem in Model.ArticleDataSet.Copyright)
                        {
                            if (renderItem.ItemMarkUp == MarkUpType.Plain)
                            {
                                    @renderItem.ItemText
                            }
                        }
                    </div>
                }
                
            </div>
                    
                    @if (Model.ShowPostProcessing)
                    {                
                        if (!Model.PostProcessingOptions.IsNullOrEmpty() )
                        {
                            <ul class="dj_PostProcessing actions clearfix">
                                @foreach (var item in Model.PostProcessingOptions)
                                {
                                    <li class="@(item.ToString().ToLower()) action" data-ref="@(item.ToString().ToLower())"><i class="dj_icon dj_icon-@(item.ToString().ToLower())"></i><span data-workflow="@(item.ToString().ToLower())">@(DJ.Token(item.ToString().ToLower()))</span></li>
                                }
                            </ul>
                        }
                        
                        @*Build social buttons/ speakers/ translation*@
                        if (Model.HasSocialNetworks)
                        {
                            @(CreateChildControl<DowJones.Web.Mvc.UI.Components.SocialButtons.SocialButtonsComponent>(Model.SocialButtons))
                        }

                        if (Model.HasTranslator)
                        {
                            <div id="articleTranslateControlsContainer">
                                @(CreateChildControl<DowJones.Web.Mvc.UI.Components.ArticleTranslator.ArticleTranslatorControl>(Model.Translator))
                            </div>
                        }    
                        @*Ends Build social buttons and speakers/ translation*@
                    }         
                   
            </div>

                      
            
            @*Start of embeded Html Section
                if (!Model.ArticleDataSet.Html.IsNullOrEmpty())
                {
                <div class="dj_rawContent"> 
                @foreach (IRenderItem renderItem in Model.ArticleDataSet.Html)
                {
                    if (renderItem.ItemMarkUp == MarkUpType.Html)
                    {
                        @(Html.Raw(renderItem.ItemText))
                    }
                }
                </div>
                }  
            @*End of embeded Html Section

                       
            @*Start body Section*@ 
div class="dj_article_article_body">
                @if (!Model.ArticleDataSet.Correction.IsNullOrEmpty())
                {
                    foreach (Dictionary<string, List<IRenderItem>> dci in Model.ArticleDataSet.Correction)
                    {
                        foreach (KeyValuePair<string, List<IRenderItem>> kvc in dci)
                        {
                            if (kvc.Key.Equals("pre"))
                            {
                                @(CreateChildControl<Paragraph>(Model.GetParagraphModel(kvc.Value, "pre", "dj_article_paragraph")))
                            }
                            else
                            {
                                @(CreateChildControl<Paragraph>(Model.GetParagraphModel(kvc.Value, "p", "dj_article_paragraph")))
                            }
                        }
                    }
                }
        
                @if (!Model.ArticleDataSet.LeadParagraph.IsNullOrEmpty())
                {
                    if (showIndexing)
                    {
                        <div class="dj_article_index">LP</div>
                    }                    
                    <div class="dj_article_lp dj_article_section">
                    @if (!Model.ArticleDataSet.LeadParagraph.IsNullOrEmpty())
                    {
                        foreach (Dictionary<string, List<IRenderItem>> dci in Model.ArticleDataSet.LeadParagraph)
                        {
                            foreach (KeyValuePair<string, List<IRenderItem>> kvc in dci)
                            {
                                if (kvc.Key.Equals("pre"))
                                {
                                    @(CreateChildControl<Paragraph>(Model.GetParagraphModel(kvc.Value, "pre", "dj_article_paragraph")))
                                }
                                else
                                {
                                    @(CreateChildControl<Paragraph>(Model.GetParagraphModel(kvc.Value, "p", "dj_article_paragraph")))
                                }
                            }
                        }
                    }
                </div>
                }

                @if (!Model.ArticleDataSet.TailParagraphs.IsNullOrEmpty() && Model.ArticleDisplayOptions != DisplayOptions.Headline)
                {
                    if (showIndexing)
                    {
                        <div class="dj_article_index">TD</div>
                    }
                    <div class="dj_article_td dj_article_section">
                        @foreach (Dictionary<string, List<IRenderItem>> dci in Model.ArticleDataSet.TailParagraphs)
                        {
                            foreach (KeyValuePair<string, List<IRenderItem>> kvc in dci)
                            {
                                if (kvc.Key.Equals("pre"))
                                {
                                    @(CreateChildControl<Paragraph>(Model.GetParagraphModel(kvc.Value, "pre", "dj_article_paragraph")))
                                }
                                else
                                {
                                    @(CreateChildControl<Paragraph>(Model.GetParagraphModel(kvc.Value, "p", "dj_article_paragraph")))
                                }
                            }
                        }
                    </div>
                }
           
                @* Tail Fields *@
                @if (Model.ArticleDisplayOptions != DisplayOptions.Headline)
                {
                    if (!Model.ArticleDataSet.Contact.IsNullOrEmpty())
                    {
                        if (showIndexing)
                        {
                            <div class="dj_article_index">CT</div>
                        }
                
                        <div class="dj_article_art dj_article_section">
                            @foreach (IRenderItem renderItem in Model.ArticleDataSet.Contact)
                            {
                                @(CreateChildControl<Paragraph>(Model.GetParagraphModel(Model.ArticleDataSet.Contact, "p", "dj_article_paragraph")))
                            }
                        </div>
                    }

                    if (!Model.ArticleDataSet.Notes.IsNullOrEmpty())
                    {
                        if (showIndexing)
                        {
                            <div class="dj_article_index">RF</div>
                        }
                
                        <div class="dj_article_rf dj_article_section">
                            @foreach (IRenderItem renderItem in Model.ArticleDataSet.Notes)
                            {
                                @(CreateChildControl<Paragraph>(Model.GetParagraphModel(Model.ArticleDataSet.Notes, "p", "dj_article_paragraph")))
                            }
                        </div>
                    }

                    if (!Model.ArticleDataSet.ArtWorks.IsNullOrEmpty())
                    {
                        if (showIndexing)
                        {
                            <div class="dj_article_index">ART</div>
                        }
                        <div class="dj_article_art dj_article_section">
                            @(CreateChildControl<Paragraph>(Model.GetParagraphModel(Model.ArticleDataSet.ArtWorks, "p", "dj_article_paragraph")))
                        </div>
                    }
                }              
            
                @if (!Model.ArticleDataSet.IndexingCodeSets.IsNullOrEmpty() && showIndexing)
                {
                    foreach (KeyValuePair<string, Dictionary<string, string>> set in Model.ArticleDataSet.IndexingCodeSets)
                    {
                        if (showIndexing)
                        {
                            <div class="dj_article_index">@set.Key.ToUpper()</div>
                        }
                    
                        <div class="dj_article_@(set.Key.ToLower()) dj_article_section">                            
                            <p class="dj_article_paragraph">
                                @foreach (KeyValuePair<string, string> code in set.Value)
                                {
                                    @string.Format("{0} : {1} {2} ", code.Key, code.Value, code.Equals(set.Value.Last()) ? string.Empty : "|");
                                }
                            </p>
                        </div>
                    }
                }         
                
                @if (!Model.ArticleDataSet.Ipcs.IsNullOrEmpty() && showIndexing)
                {
                    if (showIndexing)
                    {
                        <div class="dj_article_index">IPC</div>
                    }
                    <div class="dj_article_ipc dj_article_section"> 
                        <p class="dj_article_paragraph">
                            @Model.ArticleDataSet.Ipcs.ToArray().Join(" | ") 
                        </p>
                    </div>
                }  
                
                @if (!Model.ArticleDataSet.Ipds.IsNullOrEmpty() && showIndexing)
                {
                    if (showIndexing)
                    {
                        <div class="dj_article_index">IPD</div>
                    }
                    <div class="dj_article_ipd dj_article_section">  
                        <p class="dj_article_paragraph">
                            @Model.ArticleDataSet.Ipds.ToArray().Join(" | ") 
                        </p>
                    </div>
                }  
            
                @if (!string.IsNullOrEmpty(Model.ArticleDataSet.PublisherName))
                {
                    if (showIndexing)
                    {
                        <div class="dj_article_index">PUB</div>
                    }                    
                    <div class="dj_article_pub dj_article_section">                        
                        <p class="dj_article_paragraph">
                            @string.Format("{0} ", Model.ArticleDataSet.PublisherName)
                        </p>
                    </div>
                }            

                @if (Model.ArticleDataSet.AccessionNo != null)
                {
                    if (showIndexing)
                    {
                        <div class="dj_article_index">AN</div>
                    }
                    <div class="dj_article_an dj_article_section">
                        <p class="dj_article_paragraph">
                            @Html.DJ().Token("document")&nbsp;@Model.ArticleDataSet.AccessionNo
                        </p>
                    </div>
                }
                
                @if (Model.ArticleDataSet.ContentCategory == Ajax.ContentCategory.Picture)
                {
                    <div class="dj_article_clear"></div>
                }
            </div>
            @*End body Section*@
        }
        </div>
    }
    else
    {
        <div class="dj_article_body">
            <div class="dj_article_articleError error">@(DJ.Token("error")) <span class="errorNum">@Model.ArticleDataSet.Status</span>: <span class="errorMessage">@Html.DJ().TokenForErrorNumber(Model.ArticleDataSet.Status)</span></div> 
        
            @if (Model.ArticleDataSet.AccessionNo != null)
            {
                if (showIndexing)
                {
                        <div class="dj_article_index">AN</div>
                }
                <div class="dj_article_an dj_article_section">
                    @Html.DJ().Token("document")&nbsp;@Model.ArticleDataSet.AccessionNo
                </div>
            }
        </div>
    }
}
else
{
    <div>@DJ.Token("articleNotAvailable")</div>
}
