using System.Web.Mvc;
using DowJones.Web.Mvc;
using DowJones.Web.Mvc.UI;
using DowJones.Web.Mvc.UI.Components.TranslateArticle;
using DowJones.Utilities.Managers;
using DowJones.Infrastructure;
using Factiva.Gateway.Messages.Archive.V1_0;
using Factiva.Gateway.Services.V1_0;
using Factiva.Gateway.Utils.V1_0;
using Factiva.Gateway.V1_0;

namespace DowJones.Web.Showcase.Controllers
{
    public class TranslateArticleController : DowJonesControllerBase
    {
        public ActionResult Index()
        {
            return View("Index", GetTranslateArticleModel());
        }

        private TranslateArticleModel GetTranslateArticleModel()
        {
            ControlData cd = ControlDataManager.GetLightWeightUserControlData("dacostad", "brian", "16");
            Session["cData"] = cd;

            var objArticle2 = GetArticle(string.IsNullOrEmpty(HttpContext.Request["accessionnumber"]) ? "MDST000020100506e659000io" : HttpContext.Request["accessionnumber"]).CopyTo();

            var token = new TranslatorTokens()
                            {
                                ArticleTranslateDisclaimerFull = "The content of this translation is generated by way of automated translation software and is no substitute for a professional human translator. Only the text from the Dow Jones Factiva service is translated; additional web sources and links to the Internet are not translated as a part of this service. Dow Jones does not take responsibility for the accuracy, reliability or completeness of this translation and the results of this translation are “as is.” Dow Jones makes no representations or warranties of any kind with respect to the translation on this site or its contents and disclaims any liability, loss or damages suffered based on the user’s reliance of any kind or for any purpose with respect to the content of this translation",
                                RateTranslationReadability = "Rate translation readability:",
                                ArticleTranslateDisclaimer = "Disclaimer",
                                TranslateMore = "TranslateMore",
                                TranslateAll = "TranslateAll",
                                ClickForFullDisclaimer = "Click for full disclaimer",
                                TranslationGeneralUnderstanding = "GeneralUnderstanding",
                                TranslationSomewhatDifficult = "SomewhatDifficult",
                                TranslationSomewhatEasy = "SomewhatEasy",
                                TranslationVeryDifficult = "VeryDifficult",
                                TranslationVeryEasy = "VeryEasy",
                                TranslatedByPre = "Translate By Pre",
                                TranslatedByPost = "Translated By Post",
                                FCPBeta = "FCP Beta",
                                TranslatedByPostPost = "Translated By Post Post",
                                TranslationInProgress = "Translation In Progress"
                            };

            token.SetLangCodeToken(string.IsNullOrEmpty(HttpContext.Request["targetlanguagecode"].ToString()) ? "es" : HttpContext.Request["targetlanguagecode"].ToString());
            token.SetLangTextToken(string.IsNullOrEmpty(HttpContext.Request["targetlanguage"].ToString()) ? "es" : HttpContext.Request["targetlanguage"].ToString());

            var translatearticle = new TranslateArticleModel()
            {
                ArticleObject = objArticle2,
                PostProcessing = PostProcessing.UnSpecified,
                ProductPrefix = "GL",
                AccessPointCode= "9",
                InterfaceLanguage = "en",
                SourceLanguage = string.IsNullOrEmpty(HttpContext.Request["sourcelanguage"].ToString()) ? "en" : HttpContext.Request["sourcelanguage"].ToString(),
                TargetLanguage = string.IsNullOrEmpty(HttpContext.Request["targetlanguagecode"].ToString()) ? "es" : HttpContext.Request["targetlanguagecode"].ToString(),
                TranslationServiceUrl = "~DowJones.Tools.WebServices.ArticleTranslatorService.asmx",
                Tokens    = token
            };

            return translatearticle;
        }

        /// <summary>
        /// The get article.
        /// </summary>
        /// <param name="accno">
        /// The accno.
        /// </param>
        /// <returns>
        /// </returns>
        protected Article GetArticle(string accno)
        {
            var cData = (ControlData)Session["cData"];

            var articleRequest = new GetArticleRequest
            {
                accessionNumbers = new[]{accno},
                responseDataSet = GetBaselinResponseDataSet()
            };

            // DJDN000020100310e63a0ljs4 J000000020090814e58e00013

            // Make the call to the backend
            var serviceResponse = ArchiveService.GetArticle(ControlDataManager.Clone(cData), articleRequest);

            if (serviceResponse.rc == 0)
            {
                object responseObj;
                var responseObjRC = serviceResponse.GetResponse(ServiceResponse.ResponseFormat.Object, out responseObj);

                if (responseObjRC == 0)
                {
                    var response = (GetArticleResponse)responseObj;
                    if (response != null &&
                        response.articleResponseSet != null &&
                        response.articleResponseSet.countSpecified &&
                        response.articleResponseSet.count > 0 &&
                        response.articleResponseSet.article[0] != null)
                    {
                        return response.articleResponseSet.article[0];
                    }
                }
            }


            return null;
        }

        /// <summary>
        /// The get baselin response data set.
        /// </summary>
        /// <returns>
        /// </returns>
        private static Factiva.Gateway.Messages.Archive.V1_0.ResponseDataSet GetBaselinResponseDataSet()
        {
            var responseDataSet = new Factiva.Gateway.Messages.Archive.V1_0.ResponseDataSet
            {
                articleFormat = ArticleFormatType.Custom,
                fids = new[]
                                                     {
                                                         DistDocField.Logo, DistDocField.Sn, DistDocField.Ct, 
                                                         DistDocField.Clm, DistDocField.Ed, DistDocField.Rf, 
                                                         DistDocField.Se, DistDocField.Pg, DistDocField.An, 
                                                         DistDocField.Hd, DistDocField.Vol, DistDocField.In, 
                                                         DistDocField.By, DistDocField.La, DistDocField.Co, 
                                                         DistDocField.Cr, DistDocField.Art, DistDocField.Re, 
                                                         DistDocField.Wc, DistDocField.Cy, DistDocField.Ns, 
                                                         DistDocField.Pd, DistDocField.Cx, DistDocField.AdocTOC, 
                                                         DistDocField.Et, DistDocField.Lp, DistDocField.Sc, 
                                                         DistDocField.Td
                                                     }
            };
            return responseDataSet;
        }
    }
}
