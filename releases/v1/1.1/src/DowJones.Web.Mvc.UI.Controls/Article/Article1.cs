//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Web.UI.WebResourceAttribute("DowJones.Web.Mvc.UI.Components.Article.ArticleControl.js", "text/javascript")]

namespace DowJones.Web.Mvc.UI.Components.Article
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Web;
    using System.Web.Security;
    using System.Web.UI;
    using System.Text;
    using DowJones.Infrastructure;
    using DowJones.Ajax.Article;
    using DowJones.Web.Mvc.UI.Components.Article;
    using Factiva.Gateway.Messages.Archive.V2_0;
    using DowJones.Web.Mvc.Extensions;
    
    // Last Generated Timestamp: 04/07/2011 03:07 PM
    [DowJones.Web.ScriptResourceAttribute(null, ResourceName="DowJones.Web.Mvc.UI.Components.Article.ArticleControl.js", ResourceKind=DowJones.Web.ClientResourceKind.Script, DeclaringType=typeof(DowJones.Web.Mvc.UI.Components.Article.Article))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorViewComponentClassGenerator", "0.9.3.26911")]
    public class Article : DowJones.Web.Mvc.UI.ViewComponentBase<DowJones.Web.Mvc.UI.Components.Article.ArticleModel>
    {
#line hidden

        public Article()
        {
        }
        public override string ClientPluginName
        {
            get
            {
                return "dj_Article";
            }
        }
        public override void ExecuteTemplate()
        {










   CssClass = "dj_Article"; 

WriteLiteral("\r\n");


 if (Model != null)
{

WriteLiteral("    <div class=\"dj_article_meta\" id=\"articleHead\">\r\n        <div class=\"dj_articl" +
"e_image\" >\r\n");


             foreach (IRenderItem renderItem in Model.ArticleDataSet.ArticleHead)
            {
                if (renderItem.ItemMarkUp == MarkUpType.HeadLogo)
                { 

WriteLiteral(@"                    <img onerror=""this.style.visibility='hidden'; this.style.display='none'; this.style.height=0;""
                        onabort=""this.style.visibility='hidden'; this.style.display='none'; this.style.height=0;"" 
                        src=""");


                        Write(renderItem.ItemValue);

WriteLiteral("\" alt=\"");


                                                    Write(renderItem.ItemText);

WriteLiteral("\"/>\r\n");


                }
                else if (renderItem.ItemMarkUp == MarkUpType.HeadImage)
                {

WriteLiteral("                    <p class=\"dj_article_paragraph\">\r\n                        <im" +
"g src=\"");


                             Write(renderItem.ItemValue);

WriteLiteral("\"/>\r\n                    </p>\r\n");


                }
            }

WriteLiteral("         </div>\r\n    </div>\r\n");




WriteLiteral("    <div class=\"dj_article_pd\">\r\n");


         if (Model.ShowSourceLinks && Model.PostProcessing == PostProcessing.UnSpecified)
        {
            foreach (IRenderItem renderItem in Model.ArticleDataSet.ArticleSource)
            {
                if (renderItem.ItemMarkUp == MarkUpType.EntityLink)
                { 

WriteLiteral("                <span>\r\n                    <a href=\"javascript:void(0)\" class=\"d" +
"j_article_source\" rel=\"{{fcode:\'{");


                                                                                     Write(renderItem.ItemEntityData.Code);

WriteLiteral("}\',category:\'");


                                                                                                                                 Write(renderItem.ItemEntityData.Category);

WriteLiteral("\'}}\">");


                                                                                                                                                                         Write(renderItem.ItemEntityData.Name);

WriteLiteral("</a>\r\n                </span>\r\n");


                }
                else if (renderItem.ItemMarkUp == MarkUpType.Span)
                {

WriteLiteral("                <span>\r\n                    ");


               Write(renderItem.ItemText);

WriteLiteral("\r\n                </span>\r\n");


                }
            }
        }
        else
        {
            if (Model.ArticleDataSet.ArticleSource.Count>0 && !string.IsNullOrEmpty(Model.ArticleDataSet.ArticleSource[0].ItemText))
            {

WriteLiteral("                <span>");


                 Write(Model.ArticleDataSet.ArticleSource[0].ItemText);

WriteLiteral("</span>\r\n");


            }
        }

WriteLiteral("        &nbsp;-&nbsp;\r\n        <span>\r\n            ");


       Write(Model.ArticleDataSet.ArticlePublicationDate);

WriteLiteral("\r\n        </span>\r\n        <span>\r\n            ");


       Write(Model.ArticleDataSet.ArticlePublicationTime);

WriteLiteral("\r\n        </span>\r\n    </div>\r\n");


    
    if (Model.ArticleDataSet.ArticleHeadline.Count> 0)
    {

WriteLiteral("        <div class=\"dj_article_hd\">\r\n");


             foreach(IRenderItem renderItem in Model.ArticleDataSet.ArticleHeadline)
            {
                if (renderItem.ItemMarkUp == MarkUpType.Plain)
                {
                    
               Write(renderItem.ItemText);

                                        
                }
                else if(renderItem.ItemMarkUp == MarkUpType.Anchor)
                {

WriteLiteral("                    <a href=\"");


                        Write(renderItem.ItemValue);

WriteLiteral("\" rel=\"{{fcode:\'");


                                                             Write(renderItem.ItemText);

WriteLiteral("\'}}\">");


                                                                                      Write(renderItem.ItemValue);

WriteLiteral("</a>    \r\n");


                }
            }

WriteLiteral("        </div>\r\n");


    }

WriteLiteral("    <div class=\"dj_article_cp\">\r\n");


         foreach(IRenderItem renderItem in Model.ArticleDataSet.ArticleCopyright)
         {
                if (renderItem.ItemMarkUp == MarkUpType.Plain)
                {
                    
               Write(renderItem.ItemText);

                                        
                }
         }

WriteLiteral("    </div>\r\n");


    
    

                                                   

WriteLiteral("    <div class=\"dj_article_control\" id=\"control\">\r\n");


         if (Model.ShowSocialButtons && Model.SocialButtonModel.SocialNetworks.Count > 0)
        {
            
        Write(CreateChildControl<DowJones.Web.Mvc.UI.Components.SocialButtons.SocialButtonsControl>(Model.SocialButtonModel));

                                                                                                                             
        }
        
        

                                         


         if (Model.ShowTranslator)
        {
            if (Model.ShowReadSpeaker)
            {

WriteLiteral("                <span class=\"emg_translator_pipe\">&nbsp;|&nbsp;</span>\r\n");


            }

WriteLiteral("            <div id=\"articleTranslateControlsContainer\" style=\"float:left;display" +
":inline;padding-bottom:10px\">\r\n                ");


            Write(CreateChildControl<DowJones.Web.Mvc.UI.Components.ArticleTranslator.ArticleTranslatorControl>(Model.TranslatorModel));

WriteLiteral("\r\n            </div>\r\n");


        }    

WriteLiteral("    </div>\r\n");


    

                                                           
    
    

                          
    StringBuilder sb = new StringBuilder();

WriteLiteral("    <div class=\"dj_article_articlebody\" id=\"articleBody\">\r\n");


         if (Model.ArticleDataSet.ArticleCorrection != null && Model.ArticleDataSet.ArticleCorrection.Count>0)
        {
            sb = new StringBuilder();
            foreach(Dictionary<string,List<IRenderItem>> dci in Model.ArticleDataSet.ArticleCorrection)
            {
                foreach(KeyValuePair<string, List<IRenderItem>> kvc in dci)
                {

WriteLiteral("                    <p class=\"dj_article_paragraph\">\r\n");


                     foreach(IRenderItem renderItem in kvc.Value)
                    {
                        if(renderItem.ItemMarkUp == MarkUpType.ArticleHighlight)
                        {
                            sb.AppendLine(string.Format("<span class='dj_article_highlight'>{0}</span>",renderItem.ItemText));
                        }
                        else if(renderItem.ItemMarkUp == MarkUpType.Image)
                        {
                            sb.AppendLine(string.Format("<img src='{0}'/>",renderItem.ItemValue));
                        }
                        else if(renderItem.ItemMarkUp == MarkUpType.PostProcessing)
                        {
                            switch (renderItem.ItemPostProcessData.Type)
                            {
                                case PostProcessing.Print:
                                    sb.AppendLine(string.Format("<span class='dj_article_colorLinks'>{0} [{1}]</span>",renderItem.ItemPostProcessData.ElinkValue, @renderItem.ItemPostProcessData.ElinkText));
                                    break;
                                case PostProcessing.Save:
                                    sb.AppendLine(renderItem.ItemPostProcessData.ElinkValue);
                                    sb.AppendLine(renderItem.ItemPostProcessData.ElinkText);
                                    break;
                            }
                        }
                        else if (renderItem.ItemMarkUp == MarkUpType.ArticleElink)
                        {
                            sb.AppendLine(string.Format("<a class='dj_article_elink' href='javascript:void(0)' rel='{{href:'{0}'}}'>{1}</a>",@renderItem.ItemValue,@renderItem.ItemText));
                        }
                        else if(renderItem.ItemMarkUp == MarkUpType.Plain)
                        {
                            sb.AppendLine(renderItem.ItemText);
                        }
                        else if (renderItem.ItemMarkUp == MarkUpType.EntityLink)
                        {   
                            sb.AppendLine(string.Format("<a class='dj_article_entity' href='javascript:void();' rel='{{fcode:'{0}',category:'{1}'}}>{2}</a>",@renderItem.ItemEntityData.Code,@renderItem.ItemEntityData.Category,@renderItem.ItemEntityData.Name));
                        }
                        else if(renderItem.ItemMarkUp== MarkUpType.SpanAnchor)
                        {
                            sb.AppendLine(string.Format("<span><a class='dj_article_entity' href='javascript:void();' rel='{{fcode:'{0}',category:'{1}'}}>{2}</a></span>",@renderItem.ItemEntityData.Code,@renderItem.ItemEntityData.Category,@renderItem.ItemEntityData.Name));
                        }
                    }


                     if(kvc.Key.Equals("display"))
                    {
                        
                   Write(sb.ToString());

                                      ;
                    }
                    else if(kvc.Key.Equals("pre"))
                    {

WriteLiteral("                        <pre>");


                        Write(sb.ToString());

WriteLiteral(";</pre>\r\n");


                    }

WriteLiteral("                    </p>\r\n");


                    sb.Clear();
                }
            
            }
        }

WriteLiteral("\r\n        <div class=\"dj_article_lp\">\r\n");


             if(Model.ArticleDataSet.ArticleLeadParagraph!=null && Model.ArticleDataSet.ArticleLeadParagraph.Count>0)
            {
                sb = new StringBuilder();
                foreach(Dictionary<string,List<IRenderItem>> dci in Model.ArticleDataSet.ArticleLeadParagraph)
                {
                   foreach(KeyValuePair<string, List<IRenderItem>> kvc in dci)
                   {

WriteLiteral("                    <p class=\"dj_article_paragraph\">     \r\n");


                     foreach(IRenderItem renderItem in kvc.Value)
                    {
                        if(renderItem.ItemMarkUp == MarkUpType.ArticleHighlight)
                        {
                            sb.AppendLine(string.Format("<span class='dj_article_highlight'>{0}</span>",renderItem.ItemText));
                        }
                        else if(renderItem.ItemMarkUp == MarkUpType.Image)
                        {
                            sb.AppendLine(string.Format("<img src='{0}'/>",renderItem.ItemValue));
                        }
                        else if(renderItem.ItemMarkUp == MarkUpType.PostProcessing)
                        {
                            switch (renderItem.ItemPostProcessData.Type)
                            {
                                case PostProcessing.Print:
                                    sb.AppendLine(string.Format("<span class='dj_article_colorLinks'>{0} [{1}]</span>",renderItem.ItemPostProcessData.ElinkValue, @renderItem.ItemPostProcessData.ElinkText));
                                    break;
                                case PostProcessing.Save:
                                    sb.AppendLine(renderItem.ItemPostProcessData.ElinkValue);
                                    sb.AppendLine(renderItem.ItemPostProcessData.ElinkText);
                                    break;
                            }
                        }
                        else if (renderItem.ItemMarkUp == MarkUpType.ArticleElink)
                        {
                            sb.AppendLine(string.Format("<a class='dj_article_elink' href='javascript:void(0)' rel='{{href:'{0}'}}'>{1}</a>",@renderItem.ItemValue,@renderItem.ItemText));
                        }
                        else if(renderItem.ItemMarkUp == MarkUpType.Plain)
                        {
                            sb.AppendLine(renderItem.ItemText);
                        }
                        else if (renderItem.ItemMarkUp == MarkUpType.EntityLink)
                        {   
                            sb.AppendLine(string.Format("<a class='dj_article_entity' href='javascript:void();' rel='{{fcode:'{0}',category:'{1}'}}>{2}</a>",@renderItem.ItemEntityData.Code,@renderItem.ItemEntityData.Category,@renderItem.ItemEntityData.Name));
                        }
                        else if(renderItem.ItemMarkUp== MarkUpType.SpanAnchor)
                        {
                            sb.AppendLine(string.Format("<span><a class='dj_article_entity' href='javascript:void();' rel='{{fcode:'{0}',category:'{1}'}}>{2}</a></span>",@renderItem.ItemEntityData.Code,@renderItem.ItemEntityData.Category,@renderItem.ItemEntityData.Name));
                        }
                    }


                     if(kvc.Key.Equals("display"))
                    {
                        
                   Write(sb.ToString());

                                      ;
                    }
                    else if(kvc.Key.Equals("pre"))
                    {

WriteLiteral("                        <pre class=\"dj_article_paragraph\">");


                                                     Write(sb.ToString());

WriteLiteral(";</pre>\r\n");


                    }

WriteLiteral("                    </p>\r\n");


                    
               Write(sb.Clear());

                               ;
                  }
                }
            }

WriteLiteral("        </div>\r\n\r\n        <div class=\"dj_article_tp\">\r\n");


             if(Model.ArticleDataSet.ArticleTailParagraph!=null && Model.ArticleDataSet.ArticleTailParagraph.Count>0)
            {
                sb = new StringBuilder();
                foreach(Dictionary<string,List<IRenderItem>> dci in Model.ArticleDataSet.ArticleTailParagraph)
                {
                   foreach(KeyValuePair<string, List<IRenderItem>> kvc in dci)
                   {

WriteLiteral("                    <p class=\"dj_article_paragraph\">\r\n");


                     foreach(IRenderItem renderItem in kvc.Value)
                    {
                        if(renderItem.ItemMarkUp == MarkUpType.ArticleHighlight)
                        {
                            sb.AppendLine(string.Format("<span class='dj_article_highlight'>{0}</span>",renderItem.ItemText));
                        }
                        else if(renderItem.ItemMarkUp == MarkUpType.Image)
                        {
                            sb.AppendLine(string.Format("<img src='{0}'/>",renderItem.ItemValue));
                        }
                        else if(renderItem.ItemMarkUp == MarkUpType.PostProcessing)
                        {
                            switch (renderItem.ItemPostProcessData.Type)
                            {
                                case PostProcessing.Print:
                                    sb.AppendLine(string.Format("<span class='dj_article_colorLinks'>{0} [{1}]</span>",renderItem.ItemPostProcessData.ElinkValue, @renderItem.ItemPostProcessData.ElinkText));
                                    break;
                                case PostProcessing.Save:
                                    sb.AppendLine(renderItem.ItemPostProcessData.ElinkValue);
                                    sb.AppendLine(renderItem.ItemPostProcessData.ElinkText);
                                    break;
                            }
                        }
                        else if (renderItem.ItemMarkUp == MarkUpType.ArticleElink)
                        {
                            sb.AppendLine(string.Format("<a class='dj_article_elink' href='javascript:void(0)' rel='{{href:'{0}'}}'>{1}</a>",@renderItem.ItemValue,@renderItem.ItemText));
                        }
                        else if(renderItem.ItemMarkUp == MarkUpType.Plain)
                        {
                            sb.AppendLine(renderItem.ItemText);
                        }
                        else if (renderItem.ItemMarkUp == MarkUpType.EntityLink)
                        {   
                            sb.AppendLine(string.Format("<a class='dj_article_entity' href='javascript:void();' rel='{{fcode:'{0}',category:'{1}'}}>{2}</a>",@renderItem.ItemEntityData.Code,@renderItem.ItemEntityData.Category,@renderItem.ItemEntityData.Name));
                        }
                        else if(renderItem.ItemMarkUp== MarkUpType.SpanAnchor)
                        {
                            sb.AppendLine(string.Format("<span><a class='dj_article_entity' href='javascript:void();' rel='{{fcode:'{0}',category:'{1}'}}>{2}</a></span>",@renderItem.ItemEntityData.Code,@renderItem.ItemEntityData.Category,@renderItem.ItemEntityData.Name));
                        }
                    }

WriteLiteral("                    \r\n");


                     if(kvc.Key.Equals("display"))
                    {
                        
                   Write(sb.ToString());

                                      ;
                    }
                    else if(kvc.Key.Equals("pre"))
                    {

WriteLiteral("                        <pre class=\"dj_article_paragraph\">");


                                                     Write(sb.ToString());

WriteLiteral(";</pre>\r\n");


                    }

WriteLiteral("                    </p>\r\n");


                    
               Write(sb.Clear());

                               ;                    
                  }
                }
            }

WriteLiteral("        </div>\r\n\r\n       ");



WriteLiteral("\r\n       <div class=\"dj_article_tf\">\r\n");


         if (Model.ArticleDataSet.ArticleContact != null && Model.ArticleDataSet.ArticleContact.Count>0)
        {
            sb = new StringBuilder();

WriteLiteral("            <p class=\"dj_article_paragraph\">\r\n");


                 foreach(IRenderItem renderItem in Model.ArticleDataSet.ArticleContact)
                {
                        if(renderItem.ItemMarkUp == MarkUpType.ArticleHighlight)
                        {
                            sb.AppendLine(string.Format("<span class='dj_article_highlight'>{0}</span>",renderItem.ItemText));
                        }
                        else if(renderItem.ItemMarkUp == MarkUpType.Image)
                        {
                            sb.AppendLine(string.Format("<img src='{0}'/>",renderItem.ItemValue));
                        }
                        else if(renderItem.ItemMarkUp == MarkUpType.PostProcessing)
                        {
                            switch (renderItem.ItemPostProcessData.Type)
                            {
                                case PostProcessing.Print:
                                    sb.AppendLine(string.Format("<span class='dj_article_colorLinks'>{0} [{1}]</span>",renderItem.ItemPostProcessData.ElinkValue, @renderItem.ItemPostProcessData.ElinkText));
                                    break;
                                case PostProcessing.Save:
                                    sb.AppendLine(renderItem.ItemPostProcessData.ElinkValue);
                                    sb.AppendLine(renderItem.ItemPostProcessData.ElinkText);
                                    break;
                            }
                        }
                        else if (renderItem.ItemMarkUp == MarkUpType.ArticleElink)
                        {
                            sb.AppendLine(string.Format("<a class='dj_article_elink' href='javascript:void(0)' rel='{{href:'{0}'}}'>{1}</a>",@renderItem.ItemValue,@renderItem.ItemText));
                        }
                        else if(renderItem.ItemMarkUp == MarkUpType.Plain)
                        {
                            sb.AppendLine(renderItem.ItemText);
                        }
                        else if (renderItem.ItemMarkUp == MarkUpType.EntityLink)
                        {   
                            sb.AppendLine(string.Format("<a class='dj_article_entity' href='javascript:void();' rel='{{fcode:'{0}',category:'{1}'}}>{2}</a>",@renderItem.ItemEntityData.Code,@renderItem.ItemEntityData.Category,@renderItem.ItemEntityData.Name));
                        }
                        else if(renderItem.ItemMarkUp== MarkUpType.SpanAnchor)
                        {
                            sb.AppendLine(string.Format("<span><a class='dj_article_entity' href='javascript:void();' rel='{{fcode:'{0}',category:'{1}'}}>{2}</a></span>",@renderItem.ItemEntityData.Code,@renderItem.ItemEntityData.Category,@renderItem.ItemEntityData.Name));
                        }
                 }

WriteLiteral("                 ");


            Write(sb.ToString());

WriteLiteral(";\r\n            </p>\r\n");


        }

WriteLiteral("       \r\n");


         if (Model.ArticleDataSet.ArticleNotes != null && Model.ArticleDataSet.ArticleNotes.Count>0)
        {
            sb = new StringBuilder();

WriteLiteral("            <p class=\"dj_article_paragraph\">\r\n");


                 foreach(IRenderItem renderItem in Model.ArticleDataSet.ArticleNotes)
                {
                        if(renderItem.ItemMarkUp == MarkUpType.ArticleHighlight)
                        {
                            sb.AppendLine(string.Format("<span class='dj_article_highlight'>{0}</span>",renderItem.ItemText));
                        }
                        else if(renderItem.ItemMarkUp == MarkUpType.Image)
                        {
                            sb.AppendLine(string.Format("<img src='{0}'/>",renderItem.ItemValue));
                        }
                        else if(renderItem.ItemMarkUp == MarkUpType.PostProcessing)
                        {
                            switch (renderItem.ItemPostProcessData.Type)
                            {
                                case PostProcessing.Print:
                                    sb.AppendLine(string.Format("<span class='dj_article_colorLinks'>{0} [{1}]</span>",renderItem.ItemPostProcessData.ElinkValue, @renderItem.ItemPostProcessData.ElinkText));
                                    break;
                                case PostProcessing.Save:
                                    sb.AppendLine(renderItem.ItemPostProcessData.ElinkValue);
                                    sb.AppendLine(renderItem.ItemPostProcessData.ElinkText);
                                    break;
                            }
                        }
                        else if (renderItem.ItemMarkUp == MarkUpType.ArticleElink)
                        {
                            sb.AppendLine(string.Format("<a class='dj_article_elink' href='javascript:void(0)' rel='{{href:'{0}'}}'>{1}</a>",@renderItem.ItemValue,@renderItem.ItemText));
                        }
                        else if(renderItem.ItemMarkUp == MarkUpType.Plain)
                        {
                            sb.AppendLine(renderItem.ItemText);
                        }
                        else if (renderItem.ItemMarkUp == MarkUpType.EntityLink)
                        {   
                            sb.AppendLine(string.Format("<a class='dj_article_entity' href='javascript:void();' rel='{{fcode:'{0}',category:'{1}'}}>{2}</a>",@renderItem.ItemEntityData.Code,@renderItem.ItemEntityData.Category,@renderItem.ItemEntityData.Name));
                        }
                        else if(renderItem.ItemMarkUp== MarkUpType.SpanAnchor)
                        {
                            sb.AppendLine(string.Format("<span><a class='dj_article_entity' href='javascript:void();' rel='{{fcode:'{0}',category:'{1}'}}>{2}</a></span>",@renderItem.ItemEntityData.Code,@renderItem.ItemEntityData.Category,@renderItem.ItemEntityData.Name));
                        }
                 }

WriteLiteral("                 ");


            Write(sb.ToString());

WriteLiteral(";\r\n            </p>\r\n");


        }

WriteLiteral("\r\n");


         if (Model.ArticleDataSet.ArticleArtWorks != null && Model.ArticleDataSet.ArticleArtWorks.Count>0)
        {
            sb = new StringBuilder();

WriteLiteral("            <p class=\"dj_article_paragraph\">\r\n");


                 foreach(IRenderItem renderItem in Model.ArticleDataSet.ArticleArtWorks)
                {
                        if(renderItem.ItemMarkUp == MarkUpType.ArticleHighlight)
                        {
                            sb.AppendLine(string.Format("<span class='dj_article_highlight'>{0}</span>",renderItem.ItemText));
                        }
                        else if(renderItem.ItemMarkUp == MarkUpType.Image)
                        {
                            sb.AppendLine(string.Format("<img src='{0}'/>",renderItem.ItemValue));
                        }
                        else if(renderItem.ItemMarkUp == MarkUpType.PostProcessing)
                        {
                            switch (renderItem.ItemPostProcessData.Type)
                            {
                                case PostProcessing.Print:
                                    sb.AppendLine(string.Format("<span class='dj_article_colorLinks'>{0} [{1}]</span>",renderItem.ItemPostProcessData.ElinkValue, @renderItem.ItemPostProcessData.ElinkText));
                                    break;
                                case PostProcessing.Save:
                                    sb.AppendLine(renderItem.ItemPostProcessData.ElinkValue);
                                    sb.AppendLine(renderItem.ItemPostProcessData.ElinkText);
                                    break;
                            }
                        }
                        else if (renderItem.ItemMarkUp == MarkUpType.ArticleElink)
                        {
                            sb.AppendLine(string.Format("<a class='dj_article_elink' href='javascript:void(0)' rel='{{href:'{0}'}}'>{1}</a>",renderItem.ItemValue,renderItem.ItemText));
                        }
                        else if(renderItem.ItemMarkUp == MarkUpType.Plain)
                        {
                            sb.AppendLine(renderItem.ItemText);
                        }
                        else if (renderItem.ItemMarkUp == MarkUpType.EntityLink)
                        {   
                            sb.AppendLine(string.Format("<a class='dj_article_entity' href='javascript:void();' rel='{{fcode:'{0}',category:'{1}'}}>{2}</a>",@renderItem.ItemEntityData.Code,@renderItem.ItemEntityData.Category,@renderItem.ItemEntityData.Name));
                        }
                        else if(renderItem.ItemMarkUp== MarkUpType.SpanAnchor)
                        {
                            sb.AppendLine(string.Format("<span><a class='dj_article_entity' href='javascript:void();' rel='{{fcode:'{0}',category:'{1}'}}>{2}</a></span>",@renderItem.ItemEntityData.Code,@renderItem.ItemEntityData.Category,@renderItem.ItemEntityData.Name));
                        }
                 }

WriteLiteral("                 ");


            Write(sb.ToString());

WriteLiteral(";\r\n            </p>\r\n");


        }

WriteLiteral("        </div>\r\n");


        if (Model.ArticleDataSet.AccessionNo != null)
       {

WriteLiteral("        <div class=\"dj_article_an\">\r\n            <p class=\"dj_article_paragraph\">" +
"\r\n                ");


           Write(Model.Tokens.Document);

WriteLiteral("&nbsp;");


                                       Write(Model.ArticleDataSet.AccessionNo);

WriteLiteral("\r\n            </p>\r\n        </div>\r\n");


       }


         if (Model.ArticleObject.contentParts != null && !string.IsNullOrEmpty(Model.ArticleObject.contentParts.contentType) && Model.ArticleObject.contentParts.contentType.ToLower() == ContentType.picture.ToString())
        {

WriteLiteral("            <div class=\"dj_article_clear\" ></div>\r\n");


        }

WriteLiteral("\r\n    </div>\r\n");


    

                        
    
}

        }
    }
}
