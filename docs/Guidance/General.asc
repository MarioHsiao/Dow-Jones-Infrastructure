[[GettingStarted]]
== Getting Started
We rely on development tools and processes to make our day-to-day development lives go smoothly. This section will provide an overview of what every developer needs to have and know in order to work on any of the Dow Jones .NET solutions.

=== The Development Environment
In order to get started developing on a Dow Jones .NET development project, you will need the following development environment:

. Visual Studio 2010 (any non-Express version) w/ Service Pack 1
. The .NET 4.0 Framework  (installed as part of Visual Studio 2010)
. http://www.asp.net/mvc[ASP.NET MVC 3]
. http://visualstudiogallery.msdn.microsoft.com/27077b70-9dad-4c64-adcf-c7cf6bc9970c[NuGet Package Manager] Visual Studio extension  (installed as part of the ASP.NET MVC 3 installer)
. The http://msdn.microsoft.com/en-us/vstudio/bb980963[Team Foundation Server Power Tools]
. The file://sbkntsfap05.dowjones.net/client_share/DJ%20Infrastructure/Tools/RazorViewComponentClassGenerator.vsix[Razor View Component Class Generator] Visual Studio extension (if you will be working on Dow Jones MVC UI components)

*You must install all of the above components*

There are also several other tools that are very helpful and recommended, but optional:

. Dow Jones FCS and RTS components
. file:////sbkntsfap05.dowjones.net/client_share/DJ%20Infrastructure/Tools[Dow Jones Visual Studio Item and Project templates]
. http://visualstudiogallery.msdn.microsoft.com/d0d33361-18e2-46c0-8ff2-4adea1e34fef/[Visual Studio Productivity Power Tools]
. http://www.jetbrains.com/resharper/[jetBrains ReSharper], an invaluable developer productivity tool
. http://testdriven.net/[TestDriven.NET], an integrated unit test runner

==== NuGet Package Respository Configuration
Dow Jones projects leverage NuGet packages to manage our external dependencies. In addition to the public NuGet package repository, the Dow Jones Platform Integration Team hosts several custom NuGet repositories which you need to add to your NuGet configuration in Visual Studio:

include::PackageManagement_DowJonesPackageSources.asc[]

See <<PackageManagement>> for more details on how to configure NuGet package management.

=== Verifying Your Environment
After completing all of the above installations and configurations, you can verify everything is correct by creating a new Dow Jones <<ViewComponents>> solution using the following steps:

. Open Visual Studio and choose `File -> New Project -> Class Library`.  Name the project whatever you like.
. Add the NuGet package named 'DowJones.Web.Mvc.UI.Canvas'
. Use the "Dow Jones View Component" item template to add a new view component named 'Test'.  This should create (at least) the following files
	* TestComponent.cshtml
	* *TestComponent.cshtml.cs*  '(if you do not see this file, you have not properly installed the Razor View Component Class Generator plugin)'
	* TestModel.cs
. Replace the contents of 'TestComponent.cshtml' with the following:
+
----
@model TestModel
Hello, world!
----
	* Save the file and check that the 'TestComponent.cshtml.cs' file was updated with your +Hello, World!+ changes
. Save the file and compile the solution - *everything should compile correctly*

=== Best Practices
include::General_BestPractices.asc[]
