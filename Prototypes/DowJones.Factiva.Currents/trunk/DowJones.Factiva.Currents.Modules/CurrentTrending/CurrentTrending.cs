//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Web.UI.WebResourceAttribute("DowJones.Factiva.Currents.Modules.CurrentTrending.CurrentTrending.js", "text/javascript")]

namespace DowJones.Factiva.Currents.Modules.CurrentTrending
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Web;
    using System.Web.Security;
    using System.Web.UI;
    using DowJones.Factiva.Currents.Models;
    using DowJones.Web.Mvc.Extensions;
    
    // Last Generated Timestamp: 12/04/2012 04:30 PM
    [DowJones.Web.ScriptResourceAttribute(null, ResourceName="DowJones.Factiva.Currents.Modules.CurrentTrending.CurrentTrending.js", ResourceKind=DowJones.Web.ClientResourceKind.Script, DeclaringType=typeof(DowJones.Factiva.Currents.Modules.CurrentTrending.CurrentTrending))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorViewComponentClassGenerator", "1.0.0.27108")]
    public class CurrentTrending : DowJones.Web.Mvc.UI.CompositeComponent<CurrentTrendingModel>
    {
#line hidden

        public CurrentTrending()
        {
        }
        public override string ClientPluginName
        {
            get
            {
                return "dj_CurrentTrending";
            }
        }
        public override void ExecuteTemplate()
        {

WriteLiteral("\r\n");




WriteLiteral("\r\n");


   
    CssClass += " dj_CurrentTrending";


WriteLiteral(@"
<div class=""module"">
    <header>
        <i class=""icon-signal icon-white""></i>
        <span>Trending</span>
    </header>
    <div class=""content"">
        <div class=""row"">
            <div class=""span4"">
                <div class=""top-five-mentioned"">
                    <h3 class=""module-col-title"">");


                                            Write(DJ.Token("top5Mentioned"));

WriteLiteral("</h3>\r\n                    <span class=\"module-col-secondary-title\">");


                                                        Write(DJ.Token("basedOnNewsVolume"));

WriteLiteral("</span>\r\n                </div>\r\n                <ul>\r\n");


                     foreach (var entity in Model.TrendingTopEntities)
                    {

WriteLiteral("                        <li>\r\n                            <h4 class=\"industry-ite" +
"m-title\">\r\n                                <a href=\"javascript:void(0)\" class=\"p" +
"opup-trigger\"\r\n\t\t\t\t\t\t\t\t   searchcontext=\"");


                     Write(entity.SearchContextRef);

WriteLiteral("\">");


                                               Write(entity.Descriptor);

WriteLiteral("</a>\r\n                            </h4>\r\n                            <p>\r\n       " +
"                         <span class=\"item-total\">");


                                                    Write(entity.CurrentTimeFrameNewsVolume.Text.Value);

WriteLiteral("</span>\r\n                                <span class=\"item-total-type\">");


                                                         Write(DJ.Token("articlesLabel"));

WriteLiteral("</span>\r\n                            </p>\r\n                        </li>\r\n");


                    }

WriteLiteral("                </ul>\r\n            </div>\r\n            <div class=\"span4\">\r\n     " +
"           <div class=\"trending-up\">\r\n                    <h3 class=\"module-col-" +
"title\">");


                                            Write(DJ.Token("trendingUp"));

WriteLiteral(" <span class=\"fi fi_arrow-increase-green\">\r\n                    </span></h3>\r\n   " +
"                 <span class=\"module-col-secondary-title\">");


                                                        Write(DJ.Token("increaseInNewsVolume"));

WriteLiteral("</span>\r\n                </div>\r\n                <ul>\r\n");


                     foreach (var entity in Model.TrendingUp)
                    {

WriteLiteral("                        <li>\r\n                            <h4 class=\"industry-ite" +
"m-title\">\r\n                                <a href=\"javascript:void(0)\" class=\"p" +
"opup-trigger\"\r\n\t\t\t\t\t\t\t\t   searchcontext=\"");


                     Write(entity.SearchContextRef);

WriteLiteral("\">");


                                               Write(entity.Descriptor);

WriteLiteral("</a>\r\n                            </h4>\r\n                            <p>\r\n       " +
"                         <span class=\"news-volume-previous\">");


                                                              Write(entity.PreviousTimeFrameNewsVolume.Text.Value);

WriteLiteral("</span>\r\n                                <span class=\"fi fi_arrow-green-small\"></" +
"span>\r\n\t\t\t\t\t\t\t\t<span class=\"news-volume-current\">");


                                     Write(entity.CurrentTimeFrameNewsVolume.Text.Value);

WriteLiteral("</span>\r\n\t\t\t\t\t\t\t\t<span class=\"news-volume-percentage increase\">\r\n\t\t\t\t\t\t\t\t\t");


     Write(entity.NewEntrant 
                                            ? DJ.Token("newEntry").ToHtmlString() 
                                            : entity.PercentVolumeChange.Text.Value + DJ.Token("vol").ToHtmlString());

WriteLiteral("\r\n\t\t\t\t\t\t\t\t</span>\r\n                            </p>\r\n                        </li" +
">\r\n");


                    }

WriteLiteral("                </ul>\r\n            </div>\r\n            <div class=\"span4\">\r\n     " +
"           <div class=\"trending-down\">\r\n                    <h3 class=\"module-co" +
"l-title industry-group-title\">");


                                                                 Write(DJ.Token("trendingDown"));

WriteLiteral(" <span\r\n                        class=\"fi fi_arrow-decrease-red\"></span></h3>\r\n  " +
"                  <span class=\"module-col-secondary-title\">");


                                                        Write(DJ.Token("decreaseInNewsVolume"));

WriteLiteral("</span>\r\n                    <ul>\r\n");


                         foreach (var entity in Model.TrendingDown)
                        {

WriteLiteral("                            <li>\r\n\t\t\t\t\t\t\t\t<h4 class=\"industry-item-title\">\r\n\t\t\t\t\t" +
"\t\t\t\t<a href=\"javascript:void(0)\" class=\"popup-trigger\"\r\n\t\t\t\t\t\t\t\t\t   searchcontex" +
"t=\"");


                      Write(entity.SearchContextRef);

WriteLiteral("\">");


                                                Write(entity.Descriptor);

WriteLiteral("</a>\r\n\t\t\t\t\t\t\t\t</h4>\r\n                                <p>\r\n                       " +
"         <span class=\"news-volume-previous\">");


                                                              Write(entity.PreviousTimeFrameNewsVolume.Text.Value);

WriteLiteral("</span>\r\n                                <span class=\"fi fi_arrow-red-small\"></sp" +
"an>\r\n\t\t\t\t\t\t\t\t<span class=\"news-volume-current\">");


                                     Write(entity.CurrentTimeFrameNewsVolume.Text.Value);

WriteLiteral("</span>\r\n\t\t\t\t\t\t\t\t<span class=\"news-volume-percentage decrease\">\r\n\t\t\t\t\t\t\t\t\t");


     Write(entity.NewEntrant 
                                            ? DJ.Token("newEntry").ToHtmlString() 
                                            : entity.PercentVolumeChange.Text.Value + DJ.Token("vol").ToHtmlString());

WriteLiteral("\r\n\t\t\t\t\t\t\t\t</span>\r\n                            </p>\r\n                            " +
"</li>\r\n");


                        }

WriteLiteral("                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n        " +
"</div>\r\n    </div>\r\n</div>\r\n");


        }
    }
}
