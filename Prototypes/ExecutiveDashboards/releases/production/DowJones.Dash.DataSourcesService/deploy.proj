<Project DefaultTargets="CopyOutputs;DeployService" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0">

	<!-- These settings control what the service's name, description etc appear in services.msc task panel. -->
	<PropertyGroup Label="ServiceMetaData">
		<ServiceName>DashDataSourcesHub</ServiceName>
		<ServiceDisplayName>Dash Data Sources Hub</ServiceDisplayName>
		<ServiceDescription>Data Sources Hub Service for the DowJones Executive Dashboard Site</ServiceDescription>
	</PropertyGroup>

	<Choose>
		<When Condition="'$(DeploymentServerName)' == ''">
			<PropertyGroup>
				<DeploymentServer></DeploymentServer>
				<DeploymentFolder>C:\$(ServiceName)</DeploymentFolder>
			</PropertyGroup>
		</When>
		<Otherwise>
			<PropertyGroup>
				<DeploymentServer Condition="'$(DeploymentServerName)' != ''">\\$(DeploymentServerName)</DeploymentServer>
				<DeploymentFolder>$(DeploymentServer)\C$\$(ServiceName)</DeploymentFolder>
			</PropertyGroup>
		</Otherwise>
	</Choose>
	<PropertyGroup>
		<ProjectName>DowJones.Dash.DataSourcesService</ProjectName>
		<ProjectFile>$(MSBuildProjectDirectory)\$(ProjectName).csproj</ProjectFile>
		<ServiceExecutablePath>C:\$(ServiceName)\$(ProjectName).exe</ServiceExecutablePath>
	</PropertyGroup>

	<Target Name="DeployService">

		<Exec Command="sc $(DeploymentServer) delete $(ServiceName)" ContinueOnError="true" />
		<Exec Command="sc $(DeploymentServer) create $(ServiceName) binPath= &quot;$(ServiceExecutablePath)&quot; start= delayed-auto displayName= &quot;$(ServiceDisplayName)&quot;" />
		<Exec Command="sc $(DeploymentServer) description $(ServiceName) $(ServiceDescription)" />
		<Exec Command="sc $(DeploymentServer) start $(ServiceName)" ContinueOnError="true" />
	</Target>

	<Target Name="CopyOutputs">
		<MSBuild Projects="$(MSBuildProjectFullPath)"
				 Properties="ImportProjectFile=true" Targets="Rebuild">
			<Output ItemName="ProjectOutputs" TaskParameter="TargetOutputs"/>
		</MSBuild>
		<Message Text="%0a%0dProjectOutputs:%0a%0d    @(ProjectOutputs,'%0a%0d    ')" />

		<Message Text="Stopping Service..." />
		<Exec Command="sc $(DeploymentServer) stop $(ServiceName)" ContinueOnError="true" />

		<Message Text="Copying files..." />
		<Copy SourceFiles="@(ProjectOutputs)"
			  DestinationFolder="$(DeploymentFolder)"
			  SkipUnchangedFiles="true"
			  OverwriteReadOnlyFiles="true" />
	</Target>

	<!-- 
    These elements will only be processed when in the context of the
    above Target. This is because of the Condition constraint on these items
  -->
	<Import Project="$(ProjectFile)" Condition="'$(ImportProjectFile)'=='true'" />
	<!-- 
    Here we need to override the Build target with our own that will 
    generate the correct results.
    -->
	<Target Name="Rebuild"
		  Condition="'$(ImportProjectFile)'=='true'"
		  DependsOnTargets="$(BuildDependsOn)"
		  Outputs="@(AllOutputs->'%(FullPath)')" >

		<CreateItem Include="$(OutputPath)\**\*">
			<Output ItemName="AllOutputs" TaskParameter="Include"/>
		</CreateItem>

		<Message Text="Custom build invoked!" Importance="high"/>

	</Target>
</Project>