@{
    ViewBag.Title = "Demo Dashboard";
}

<section id="dashboard" class="row-fluid">

    <div id="current-users" class="medium module" data-type="CurrentUserStats"></div>

    <div id="top-pages" class="medium module" data-type="TopPages"></div>

</section>

<script src="@Url.Content("~/signalr/hubs")" type="text/javascript"></script>
<script type="text/javascript">
    @DJ.ScriptRegistry().OnDocumentReady("initializeDashboard();");

    function initializeDashboard() {
        $('.small.module').addClass('span2');
        $('.medium.module').addClass('span4');
        $('.large.module').addClass('span6');
        $('.x-large.module').addClass('span8');
    }
</script>


<style>
    #top-pages ul { list-style: none;margin: 0;}
    #top-pages li { padding-bottom: 5px;}
</style>

<!-- Fake Component initialization -->

<script id="current-users-template" type="text/x-template">
    <h2>Current Users</h2>
    <p>Desktop: <%= numberWithCommas(desktopCount) %> (<%= desktopPercent %>%)</p>
    <p>Mobile: <%= numberWithCommas(mobileCount) %> (<%= mobilePercent %>%) </p>
</script>
    
<script id="top-pages-template" type="text/x-template">
    <h2>Top Pages</h2>
    <ul>
        <% for(var i = 0; i <= pages.length; i += 1) { 
            var page = pages[i];
            if(!page) continue;
        %>
            <li>
                <span class="muted">[<%= numberWithCommas(page.visitors) %>]</span>
                <a href="http://<%= page.path %>" target="_blank"><%= page.i %></a>
            </li>
        <% } %>
    </ul>
</script>

<script type="text/javascript">
    function numberWithCommas(x) {
        return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    }

    // Temp "shim" to make jQuery elements act like DJ components
    $.fn.setData = function (data) {
        var template = templates[this.attr('id') + '-template'];
        this.html(template(data)).append($('<span class="muted"/>').text('Last Updated: ' + new Date().toLocaleTimeString()));
    };

    var templates = window['templates'] = {};
    $(function () {
        $('[type="text/x-template"]').each(function () {
            templates[this.id] = _.template($(this).html());
        });
    });


    $(function() {
        DJ.subscribe('data.TopPages', function (data) {
             $('#top-pages').setData({pages: data});
        });
        
        DJ.subscribe('data.QuickStats', function (data) {
            var percentageOfUsers = function(count) {
                return ((count / data.visits) * 100).toFixed(2);
            };

            var userStats = {
                desktopCount: data.platform.d, 
                desktopPercent: percentageOfUsers(data.platform.d),

                mobileCount: data.platform.m,
                mobilePercent: percentageOfUsers(data.platform.m),
            };
            
            $('#current-users').setData(userStats);
        });
    });
</script>